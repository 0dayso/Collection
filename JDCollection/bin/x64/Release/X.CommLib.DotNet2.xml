<?xml version="1.0"?>
<doc>
    <assembly>
        <name>X.CommLib.DotNet2</name>
    </assembly>
    <members>
        <member name="T:X.CommLib.AppPathBase">
            <summary>
                路径管理的基类
            </summary>
        </member>
        <member name="M:X.CommLib.AppPathBase.#ctor(System.String)">
            <summary>Initializes a new instance of the <see cref="T:X.CommLib.AppPathBase"/> class. 使用指定的基础目录进行初始化</summary>
            <param name="basePath"></param>
        </member>
        <member name="M:X.CommLib.AppPathBase.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:X.CommLib.AppPathBase" /> class.
                使用当前目录进行初始化
            </summary>
        </member>
        <member name="M:X.CommLib.AppPathBase.#ctor(X.CommLib.AppPathBase.InitPathType)">
            <summary>Initializes a new instance of the <see cref="T:X.CommLib.AppPathBase"/> class. 指定初始化的类型</summary>
            <param name="pathType">Type of the path.</param>
            <exception cref="T:System.NotSupportedException"></exception>
        </member>
        <member name="T:X.CommLib.AppPathBase.InitPathType">
            <summary>
                初始化路径的类型
            </summary>
        </member>
        <member name="F:X.CommLib.AppPathBase.InitPathType.AppDir">
            <summary>
                使用程序所在目录进行初始化
            </summary>
        </member>
        <member name="F:X.CommLib.AppPathBase.InitPathType.CurrentDir">
            <summary>
                使用当前路径进行初始化 使用Application.StartupPath路径
            </summary>
        </member>
        <member name="P:X.CommLib.AppPathBase.RunPath">
            <summary>
                程序文件所在路径
            </summary>
        </member>
        <member name="P:X.CommLib.AppPathBase.BasePath">
            <summary>
                基本路径
            </summary>
        </member>
        <member name="P:X.CommLib.AppPathBase.LogPath">
            <summary>
                日志路径
            </summary>
        </member>
        <member name="M:X.CommLib.AppPathBase.IsSameFile(System.String,System.String)">
            <summary>检测两个文件是否是相同的。（以md5格式进行检测）</summary>
            <param name="file1">The file1.</param>
            <param name="file2">The file2.</param>
            <returns></returns>
        </member>
        <member name="M:X.CommLib.AppPathBase.IsSamePath(System.String,System.String)">
            <summary>判断两个路径是否指向同一个路径</summary>
            <param name="oldPath">The old path.</param>
            <param name="newPath">The new path.</param>
            <returns></returns>
            <exception cref="T:System.ArgumentException"></exception>
        </member>
        <member name="M:X.CommLib.AppPathBase.MakeRelativePath(System.String,System.String,System.Boolean)">
            <summary>返回path相对于basePath的相对路径
                目录请以Path.DirectorySeparatorChar结尾</summary>
            <param name="basePath">The base path.</param>
            <param name="path">The path.</param>
            <param name="basePathIsDirectory">basePath是否是一個目錄 </param>
            <returns></returns>
        </member>
        <member name="M:X.CommLib.AppPathBase.MakeRelativePath(System.String)">
            <summary>返回path相对于BasePath的相对路径</summary>
            <param name="path">进行比较的文件路径或是目录，如果是目录请以Path.DirectorySeparatorChar结尾</param>
            <returns></returns>
        </member>
        <member name="M:X.CommLib.AppPathBase.GetfileMd5(System.String)">
            <summary>返回一个文件的md5值</summary>
            <param name="filePath">The file path.</param>
            <returns></returns>
        </member>
        <member name="M:X.CommLib.AppPathBase.RemoveLastDirectorySeparatorChar(System.String)">
            <summary>移除路径最后的目录分隔符</summary>
            <param name="path">The path.</param>
            <returns></returns>
        </member>
        <member name="M:X.CommLib.AppPathBase.Test">
            <summary>The test.</summary>
        </member>
        <member name="T:X.CommLib.AssemblyLoaders.AssemblyResource">
            <summary>
                程序集资源管理器
            </summary>
        </member>
        <member name="M:X.CommLib.AssemblyLoaders.AssemblyResource.LoadAssemblyStream(System.String,System.UriKind,System.Reflection.Assembly)">
            <summary>从程序集中载入资源</summary>
            <param name="path">资源的全路径，一般为嵌入资源.‘程序集名称.文件路径.文件名组成’</param>
            <param name="uriKind">路径为相对路径还是绝对路径
                如果是相对路径，则在路径前加入assembly的命名空间
                如果使用都是，则会两者都进行尝试</param>
            <param name="assembly">资源所在的程序集，一般使用GetExecutingAssembly获取.
                如果该参数为null则使用调用LoadAssemblyStream者(GetCallingAssembly())所在的程序集</param>
            <returns></returns>
        </member>
        <member name="M:X.CommLib.AssemblyLoaders.AssemblyResource.LoadAssemblyStream(System.Type,System.String)">
            <summary>传入资源所在程序集中的一个对象类型及资源文件相对于该对象的路径来返回资源流
                路径使用.来分隔</summary>
            <param name="type">The type.</param>
            <param name="fileName">Name of the file.</param>
            <returns></returns>
        </member>
        <member name="M:X.CommLib.AssemblyLoaders.AssemblyResource.LoadString(System.Type,System.String,System.Text.Encoding)">
            <summary>
            从载入的资源中载入字符内容
            如果资源不存在返回null
            </summary>
            <param name="type">The type.</param>
            <param name="fileName">Name of the file.</param>
            <param name="encoding">文件的编码，默认为utf8.</param>
            <returns></returns>
        </member>
        <member name="M:X.CommLib.AssemblyLoaders.AssemblyResource.Test">
            <summary>
                内部测试
            </summary>
        </member>
        <member name="T:X.CommLib.Ctrl.Forms.HwndHelper">
            <summary>
                窗口句柄操作辅助， 鼠标相关的操作时坐标为相对窗口句柄的坐标
                一些消息参数在google 中搜索 WM_MOUSEWHEEL message (Windows) 之类的
            </summary>
        </member>
        <member name="F:X.CommLib.Ctrl.Forms.HwndHelper.WmMousewheel">
            <summary>
                鼠标滚轮转动
            </summary>
        </member>
        <member name="F:X.CommLib.Ctrl.Forms.HwndHelper.BmClick">
            <summary>
                单击事件定义
            </summary>
        </member>
        <member name="F:X.CommLib.Ctrl.Forms.HwndHelper.WmChar">
            <summary>
                输入字符消息
            </summary>
        </member>
        <member name="F:X.CommLib.Ctrl.Forms.HwndHelper.WmKeydown">
            <summary>
                键按下
            </summary>
        </member>
        <member name="F:X.CommLib.Ctrl.Forms.HwndHelper.WmKeyup">
            <summary>
                键弹出
            </summary>
        </member>
        <member name="F:X.CommLib.Ctrl.Forms.HwndHelper.WmLbuttondblclk">
            <summary>
                鼠标双击事件
            </summary>
        </member>
        <member name="F:X.CommLib.Ctrl.Forms.HwndHelper.WmLbuttondown">
            <summary>
                鼠标按下
            </summary>
        </member>
        <member name="F:X.CommLib.Ctrl.Forms.HwndHelper.WmLbuttonup">
            <summary>
                鼠标弹出
            </summary>
        </member>
        <member name="F:X.CommLib.Ctrl.Forms.HwndHelper.WmMbuttondown">
            <summary>
                中间键按下
            </summary>
        </member>
        <member name="F:X.CommLib.Ctrl.Forms.HwndHelper.WmMbuttonup">
            <summary>
                中间键起
            </summary>
        </member>
        <member name="F:X.CommLib.Ctrl.Forms.HwndHelper.WmMouseactivate">
            <summary>
                使用鼠标激活窗口
            </summary>
        </member>
        <member name="F:X.CommLib.Ctrl.Forms.HwndHelper.WmMousemove">
            <summary>
                鼠标移动
            </summary>
        </member>
        <member name="F:X.CommLib.Ctrl.Forms.HwndHelper.WmRbuttondown">
            <summary>
                右键按下
            </summary>
        </member>
        <member name="F:X.CommLib.Ctrl.Forms.HwndHelper.WmRbuttonup">
            <summary>
                右键起
            </summary>
        </member>
        <member name="F:X.CommLib.Ctrl.Forms.HwndHelper.WmSetcursor">
            <summary>
                设置光标
            </summary>
        </member>
        <member name="T:X.CommLib.Ctrl.Forms.HwndHelper.MouseKeyEnum">
            <summary>
                鼠标、键值
            </summary>
        </member>
        <member name="F:X.CommLib.Ctrl.Forms.HwndHelper.MouseKeyEnum.MkNone">
            <summary>
                未定义
            </summary>
        </member>
        <member name="F:X.CommLib.Ctrl.Forms.HwndHelper.MouseKeyEnum.MkControl">
            <summary>
                The CTRL key is down.
            </summary>
        </member>
        <member name="F:X.CommLib.Ctrl.Forms.HwndHelper.MouseKeyEnum.MkLbutton">
            <summary>
                The left mouse button is down.
            </summary>
        </member>
        <member name="F:X.CommLib.Ctrl.Forms.HwndHelper.MouseKeyEnum.MkMbutton">
            <summary>
                The middle mouse button is down.
            </summary>
        </member>
        <member name="F:X.CommLib.Ctrl.Forms.HwndHelper.MouseKeyEnum.MkRbutton">
            <summary>
                The right mouse button is down.
            </summary>
        </member>
        <member name="F:X.CommLib.Ctrl.Forms.HwndHelper.MouseKeyEnum.MkShift">
            <summary>
                The SHIFT key is down.
            </summary>
        </member>
        <member name="F:X.CommLib.Ctrl.Forms.HwndHelper.MouseKeyEnum.MkXbutton1">
            <summary>
                The first X button is down.
            </summary>
        </member>
        <member name="F:X.CommLib.Ctrl.Forms.HwndHelper.MouseKeyEnum.MkXbutton2">
            <summary>
                The second X button is down
            </summary>
        </member>
        <member name="T:X.CommLib.Ctrl.Forms.HwndHelper.VirtualKeys">
            <summary>
                Enumeration for virtual keys.
            </summary>
        </member>
        <member name="F:X.CommLib.Ctrl.Forms.HwndHelper.VirtualKeys.LeftButton">
            <summary></summary>
        </member>
        <member name="F:X.CommLib.Ctrl.Forms.HwndHelper.VirtualKeys.RightButton">
            <summary></summary>
        </member>
        <member name="F:X.CommLib.Ctrl.Forms.HwndHelper.VirtualKeys.Cancel">
            <summary></summary>
        </member>
        <member name="F:X.CommLib.Ctrl.Forms.HwndHelper.VirtualKeys.MiddleButton">
            <summary></summary>
        </member>
        <member name="F:X.CommLib.Ctrl.Forms.HwndHelper.VirtualKeys.ExtraButton1">
            <summary></summary>
        </member>
        <member name="F:X.CommLib.Ctrl.Forms.HwndHelper.VirtualKeys.ExtraButton2">
            <summary></summary>
        </member>
        <member name="F:X.CommLib.Ctrl.Forms.HwndHelper.VirtualKeys.Back">
            <summary></summary>
        </member>
        <member name="F:X.CommLib.Ctrl.Forms.HwndHelper.VirtualKeys.Tab">
            <summary></summary>
        </member>
        <member name="F:X.CommLib.Ctrl.Forms.HwndHelper.VirtualKeys.Clear">
            <summary></summary>
        </member>
        <member name="F:X.CommLib.Ctrl.Forms.HwndHelper.VirtualKeys.Return">
            <summary></summary>
        </member>
        <member name="F:X.CommLib.Ctrl.Forms.HwndHelper.VirtualKeys.Shift">
            <summary></summary>
        </member>
        <member name="F:X.CommLib.Ctrl.Forms.HwndHelper.VirtualKeys.Control">
            <summary></summary>
        </member>
        <member name="F:X.CommLib.Ctrl.Forms.HwndHelper.VirtualKeys.Menu">
            <summary></summary>
        </member>
        <member name="F:X.CommLib.Ctrl.Forms.HwndHelper.VirtualKeys.Pause">
            <summary></summary>
        </member>
        <member name="F:X.CommLib.Ctrl.Forms.HwndHelper.VirtualKeys.CapsLock">
            <summary></summary>
        </member>
        <member name="F:X.CommLib.Ctrl.Forms.HwndHelper.VirtualKeys.Kana">
            <summary></summary>
        </member>
        <member name="F:X.CommLib.Ctrl.Forms.HwndHelper.VirtualKeys.Hangeul">
            <summary></summary>
        </member>
        <member name="F:X.CommLib.Ctrl.Forms.HwndHelper.VirtualKeys.Hangul">
            <summary></summary>
        </member>
        <member name="F:X.CommLib.Ctrl.Forms.HwndHelper.VirtualKeys.Junja">
            <summary></summary>
        </member>
        <member name="F:X.CommLib.Ctrl.Forms.HwndHelper.VirtualKeys.Final">
            <summary></summary>
        </member>
        <member name="F:X.CommLib.Ctrl.Forms.HwndHelper.VirtualKeys.Hanja">
            <summary></summary>
        </member>
        <member name="F:X.CommLib.Ctrl.Forms.HwndHelper.VirtualKeys.Kanji">
            <summary></summary>
        </member>
        <member name="F:X.CommLib.Ctrl.Forms.HwndHelper.VirtualKeys.Escape">
            <summary></summary>
        </member>
        <member name="F:X.CommLib.Ctrl.Forms.HwndHelper.VirtualKeys.Convert">
            <summary></summary>
        </member>
        <member name="F:X.CommLib.Ctrl.Forms.HwndHelper.VirtualKeys.NonConvert">
            <summary></summary>
        </member>
        <member name="F:X.CommLib.Ctrl.Forms.HwndHelper.VirtualKeys.Accept">
            <summary></summary>
        </member>
        <member name="F:X.CommLib.Ctrl.Forms.HwndHelper.VirtualKeys.ModeChange">
            <summary></summary>
        </member>
        <member name="F:X.CommLib.Ctrl.Forms.HwndHelper.VirtualKeys.Space">
            <summary></summary>
        </member>
        <member name="F:X.CommLib.Ctrl.Forms.HwndHelper.VirtualKeys.Prior">
            <summary></summary>
        </member>
        <member name="F:X.CommLib.Ctrl.Forms.HwndHelper.VirtualKeys.Next">
            <summary></summary>
        </member>
        <member name="F:X.CommLib.Ctrl.Forms.HwndHelper.VirtualKeys.End">
            <summary></summary>
        </member>
        <member name="F:X.CommLib.Ctrl.Forms.HwndHelper.VirtualKeys.Home">
            <summary></summary>
        </member>
        <member name="F:X.CommLib.Ctrl.Forms.HwndHelper.VirtualKeys.Left">
            <summary></summary>
        </member>
        <member name="F:X.CommLib.Ctrl.Forms.HwndHelper.VirtualKeys.Up">
            <summary></summary>
        </member>
        <member name="F:X.CommLib.Ctrl.Forms.HwndHelper.VirtualKeys.Right">
            <summary></summary>
        </member>
        <member name="F:X.CommLib.Ctrl.Forms.HwndHelper.VirtualKeys.Down">
            <summary></summary>
        </member>
        <member name="F:X.CommLib.Ctrl.Forms.HwndHelper.VirtualKeys.Select">
            <summary></summary>
        </member>
        <member name="F:X.CommLib.Ctrl.Forms.HwndHelper.VirtualKeys.Print">
            <summary></summary>
        </member>
        <member name="F:X.CommLib.Ctrl.Forms.HwndHelper.VirtualKeys.Execute">
            <summary></summary>
        </member>
        <member name="F:X.CommLib.Ctrl.Forms.HwndHelper.VirtualKeys.Snapshot">
            <summary></summary>
        </member>
        <member name="F:X.CommLib.Ctrl.Forms.HwndHelper.VirtualKeys.Insert">
            <summary></summary>
        </member>
        <member name="F:X.CommLib.Ctrl.Forms.HwndHelper.VirtualKeys.Delete">
            <summary></summary>
        </member>
        <member name="F:X.CommLib.Ctrl.Forms.HwndHelper.VirtualKeys.Help">
            <summary></summary>
        </member>
        <member name="F:X.CommLib.Ctrl.Forms.HwndHelper.VirtualKeys.N0">
            <summary></summary>
        </member>
        <member name="F:X.CommLib.Ctrl.Forms.HwndHelper.VirtualKeys.N1">
            <summary></summary>
        </member>
        <member name="F:X.CommLib.Ctrl.Forms.HwndHelper.VirtualKeys.N2">
            <summary></summary>
        </member>
        <member name="F:X.CommLib.Ctrl.Forms.HwndHelper.VirtualKeys.N3">
            <summary></summary>
        </member>
        <member name="F:X.CommLib.Ctrl.Forms.HwndHelper.VirtualKeys.N4">
            <summary></summary>
        </member>
        <member name="F:X.CommLib.Ctrl.Forms.HwndHelper.VirtualKeys.N5">
            <summary></summary>
        </member>
        <member name="F:X.CommLib.Ctrl.Forms.HwndHelper.VirtualKeys.N6">
            <summary></summary>
        </member>
        <member name="F:X.CommLib.Ctrl.Forms.HwndHelper.VirtualKeys.N7">
            <summary></summary>
        </member>
        <member name="F:X.CommLib.Ctrl.Forms.HwndHelper.VirtualKeys.N8">
            <summary></summary>
        </member>
        <member name="F:X.CommLib.Ctrl.Forms.HwndHelper.VirtualKeys.N9">
            <summary></summary>
        </member>
        <member name="F:X.CommLib.Ctrl.Forms.HwndHelper.VirtualKeys.A">
            <summary></summary>
        </member>
        <member name="F:X.CommLib.Ctrl.Forms.HwndHelper.VirtualKeys.B">
            <summary></summary>
        </member>
        <member name="F:X.CommLib.Ctrl.Forms.HwndHelper.VirtualKeys.C">
            <summary></summary>
        </member>
        <member name="F:X.CommLib.Ctrl.Forms.HwndHelper.VirtualKeys.D">
            <summary></summary>
        </member>
        <member name="F:X.CommLib.Ctrl.Forms.HwndHelper.VirtualKeys.E">
            <summary></summary>
        </member>
        <member name="F:X.CommLib.Ctrl.Forms.HwndHelper.VirtualKeys.F">
            <summary></summary>
        </member>
        <member name="F:X.CommLib.Ctrl.Forms.HwndHelper.VirtualKeys.G">
            <summary></summary>
        </member>
        <member name="F:X.CommLib.Ctrl.Forms.HwndHelper.VirtualKeys.H">
            <summary></summary>
        </member>
        <member name="F:X.CommLib.Ctrl.Forms.HwndHelper.VirtualKeys.I">
            <summary></summary>
        </member>
        <member name="F:X.CommLib.Ctrl.Forms.HwndHelper.VirtualKeys.J">
            <summary></summary>
        </member>
        <member name="F:X.CommLib.Ctrl.Forms.HwndHelper.VirtualKeys.K">
            <summary></summary>
        </member>
        <member name="F:X.CommLib.Ctrl.Forms.HwndHelper.VirtualKeys.L">
            <summary></summary>
        </member>
        <member name="F:X.CommLib.Ctrl.Forms.HwndHelper.VirtualKeys.M">
            <summary></summary>
        </member>
        <member name="F:X.CommLib.Ctrl.Forms.HwndHelper.VirtualKeys.N">
            <summary></summary>
        </member>
        <member name="F:X.CommLib.Ctrl.Forms.HwndHelper.VirtualKeys.O">
            <summary></summary>
        </member>
        <member name="F:X.CommLib.Ctrl.Forms.HwndHelper.VirtualKeys.P">
            <summary></summary>
        </member>
        <member name="F:X.CommLib.Ctrl.Forms.HwndHelper.VirtualKeys.Q">
            <summary></summary>
        </member>
        <member name="F:X.CommLib.Ctrl.Forms.HwndHelper.VirtualKeys.R">
            <summary></summary>
        </member>
        <member name="F:X.CommLib.Ctrl.Forms.HwndHelper.VirtualKeys.S">
            <summary></summary>
        </member>
        <member name="F:X.CommLib.Ctrl.Forms.HwndHelper.VirtualKeys.T">
            <summary></summary>
        </member>
        <member name="F:X.CommLib.Ctrl.Forms.HwndHelper.VirtualKeys.U">
            <summary></summary>
        </member>
        <member name="F:X.CommLib.Ctrl.Forms.HwndHelper.VirtualKeys.V">
            <summary></summary>
        </member>
        <member name="F:X.CommLib.Ctrl.Forms.HwndHelper.VirtualKeys.W">
            <summary></summary>
        </member>
        <member name="F:X.CommLib.Ctrl.Forms.HwndHelper.VirtualKeys.X">
            <summary></summary>
        </member>
        <member name="F:X.CommLib.Ctrl.Forms.HwndHelper.VirtualKeys.Y">
            <summary></summary>
        </member>
        <member name="F:X.CommLib.Ctrl.Forms.HwndHelper.VirtualKeys.Z">
            <summary></summary>
        </member>
        <member name="F:X.CommLib.Ctrl.Forms.HwndHelper.VirtualKeys.LeftWindows">
            <summary></summary>
        </member>
        <member name="F:X.CommLib.Ctrl.Forms.HwndHelper.VirtualKeys.RightWindows">
            <summary></summary>
        </member>
        <member name="F:X.CommLib.Ctrl.Forms.HwndHelper.VirtualKeys.Application">
            <summary></summary>
        </member>
        <member name="F:X.CommLib.Ctrl.Forms.HwndHelper.VirtualKeys.Sleep">
            <summary></summary>
        </member>
        <member name="F:X.CommLib.Ctrl.Forms.HwndHelper.VirtualKeys.Numpad0">
            <summary></summary>
        </member>
        <member name="F:X.CommLib.Ctrl.Forms.HwndHelper.VirtualKeys.Numpad1">
            <summary></summary>
        </member>
        <member name="F:X.CommLib.Ctrl.Forms.HwndHelper.VirtualKeys.Numpad2">
            <summary></summary>
        </member>
        <member name="F:X.CommLib.Ctrl.Forms.HwndHelper.VirtualKeys.Numpad3">
            <summary></summary>
        </member>
        <member name="F:X.CommLib.Ctrl.Forms.HwndHelper.VirtualKeys.Numpad4">
            <summary></summary>
        </member>
        <member name="F:X.CommLib.Ctrl.Forms.HwndHelper.VirtualKeys.Numpad5">
            <summary></summary>
        </member>
        <member name="F:X.CommLib.Ctrl.Forms.HwndHelper.VirtualKeys.Numpad6">
            <summary></summary>
        </member>
        <member name="F:X.CommLib.Ctrl.Forms.HwndHelper.VirtualKeys.Numpad7">
            <summary></summary>
        </member>
        <member name="F:X.CommLib.Ctrl.Forms.HwndHelper.VirtualKeys.Numpad8">
            <summary></summary>
        </member>
        <member name="F:X.CommLib.Ctrl.Forms.HwndHelper.VirtualKeys.Numpad9">
            <summary></summary>
        </member>
        <member name="F:X.CommLib.Ctrl.Forms.HwndHelper.VirtualKeys.Multiply">
            <summary></summary>
        </member>
        <member name="F:X.CommLib.Ctrl.Forms.HwndHelper.VirtualKeys.Add">
            <summary></summary>
        </member>
        <member name="F:X.CommLib.Ctrl.Forms.HwndHelper.VirtualKeys.Separator">
            <summary></summary>
        </member>
        <member name="F:X.CommLib.Ctrl.Forms.HwndHelper.VirtualKeys.Subtract">
            <summary></summary>
        </member>
        <member name="F:X.CommLib.Ctrl.Forms.HwndHelper.VirtualKeys.Decimal">
            <summary></summary>
        </member>
        <member name="F:X.CommLib.Ctrl.Forms.HwndHelper.VirtualKeys.Divide">
            <summary></summary>
        </member>
        <member name="F:X.CommLib.Ctrl.Forms.HwndHelper.VirtualKeys.F1">
            <summary></summary>
        </member>
        <member name="F:X.CommLib.Ctrl.Forms.HwndHelper.VirtualKeys.F2">
            <summary></summary>
        </member>
        <member name="F:X.CommLib.Ctrl.Forms.HwndHelper.VirtualKeys.F3">
            <summary></summary>
        </member>
        <member name="F:X.CommLib.Ctrl.Forms.HwndHelper.VirtualKeys.F4">
            <summary></summary>
        </member>
        <member name="F:X.CommLib.Ctrl.Forms.HwndHelper.VirtualKeys.F5">
            <summary></summary>
        </member>
        <member name="F:X.CommLib.Ctrl.Forms.HwndHelper.VirtualKeys.F6">
            <summary></summary>
        </member>
        <member name="F:X.CommLib.Ctrl.Forms.HwndHelper.VirtualKeys.F7">
            <summary></summary>
        </member>
        <member name="F:X.CommLib.Ctrl.Forms.HwndHelper.VirtualKeys.F8">
            <summary></summary>
        </member>
        <member name="F:X.CommLib.Ctrl.Forms.HwndHelper.VirtualKeys.F9">
            <summary></summary>
        </member>
        <member name="F:X.CommLib.Ctrl.Forms.HwndHelper.VirtualKeys.F10">
            <summary></summary>
        </member>
        <member name="F:X.CommLib.Ctrl.Forms.HwndHelper.VirtualKeys.F11">
            <summary></summary>
        </member>
        <member name="F:X.CommLib.Ctrl.Forms.HwndHelper.VirtualKeys.F12">
            <summary></summary>
        </member>
        <member name="F:X.CommLib.Ctrl.Forms.HwndHelper.VirtualKeys.F13">
            <summary></summary>
        </member>
        <member name="F:X.CommLib.Ctrl.Forms.HwndHelper.VirtualKeys.F14">
            <summary></summary>
        </member>
        <member name="F:X.CommLib.Ctrl.Forms.HwndHelper.VirtualKeys.F15">
            <summary></summary>
        </member>
        <member name="F:X.CommLib.Ctrl.Forms.HwndHelper.VirtualKeys.F16">
            <summary></summary>
        </member>
        <member name="F:X.CommLib.Ctrl.Forms.HwndHelper.VirtualKeys.F17">
            <summary></summary>
        </member>
        <member name="F:X.CommLib.Ctrl.Forms.HwndHelper.VirtualKeys.F18">
            <summary></summary>
        </member>
        <member name="F:X.CommLib.Ctrl.Forms.HwndHelper.VirtualKeys.F19">
            <summary></summary>
        </member>
        <member name="F:X.CommLib.Ctrl.Forms.HwndHelper.VirtualKeys.F20">
            <summary></summary>
        </member>
        <member name="F:X.CommLib.Ctrl.Forms.HwndHelper.VirtualKeys.F21">
            <summary></summary>
        </member>
        <member name="F:X.CommLib.Ctrl.Forms.HwndHelper.VirtualKeys.F22">
            <summary></summary>
        </member>
        <member name="F:X.CommLib.Ctrl.Forms.HwndHelper.VirtualKeys.F23">
            <summary></summary>
        </member>
        <member name="F:X.CommLib.Ctrl.Forms.HwndHelper.VirtualKeys.F24">
            <summary></summary>
        </member>
        <member name="F:X.CommLib.Ctrl.Forms.HwndHelper.VirtualKeys.NumLock">
            <summary></summary>
        </member>
        <member name="F:X.CommLib.Ctrl.Forms.HwndHelper.VirtualKeys.ScrollLock">
            <summary></summary>
        </member>
        <member name="F:X.CommLib.Ctrl.Forms.HwndHelper.VirtualKeys.NEC_Equal">
            <summary></summary>
        </member>
        <member name="F:X.CommLib.Ctrl.Forms.HwndHelper.VirtualKeys.Fujitsu_Jisho">
            <summary></summary>
        </member>
        <member name="F:X.CommLib.Ctrl.Forms.HwndHelper.VirtualKeys.Fujitsu_Masshou">
            <summary></summary>
        </member>
        <member name="F:X.CommLib.Ctrl.Forms.HwndHelper.VirtualKeys.Fujitsu_Touroku">
            <summary></summary>
        </member>
        <member name="F:X.CommLib.Ctrl.Forms.HwndHelper.VirtualKeys.Fujitsu_Loya">
            <summary></summary>
        </member>
        <member name="F:X.CommLib.Ctrl.Forms.HwndHelper.VirtualKeys.Fujitsu_Roya">
            <summary></summary>
        </member>
        <member name="F:X.CommLib.Ctrl.Forms.HwndHelper.VirtualKeys.LeftShift">
            <summary></summary>
        </member>
        <member name="F:X.CommLib.Ctrl.Forms.HwndHelper.VirtualKeys.RightShift">
            <summary></summary>
        </member>
        <member name="F:X.CommLib.Ctrl.Forms.HwndHelper.VirtualKeys.LeftControl">
            <summary></summary>
        </member>
        <member name="F:X.CommLib.Ctrl.Forms.HwndHelper.VirtualKeys.RightControl">
            <summary></summary>
        </member>
        <member name="F:X.CommLib.Ctrl.Forms.HwndHelper.VirtualKeys.LeftMenu">
            <summary></summary>
        </member>
        <member name="F:X.CommLib.Ctrl.Forms.HwndHelper.VirtualKeys.RightMenu">
            <summary></summary>
        </member>
        <member name="F:X.CommLib.Ctrl.Forms.HwndHelper.VirtualKeys.BrowserBack">
            <summary></summary>
        </member>
        <member name="F:X.CommLib.Ctrl.Forms.HwndHelper.VirtualKeys.BrowserForward">
            <summary></summary>
        </member>
        <member name="F:X.CommLib.Ctrl.Forms.HwndHelper.VirtualKeys.BrowserRefresh">
            <summary></summary>
        </member>
        <member name="F:X.CommLib.Ctrl.Forms.HwndHelper.VirtualKeys.BrowserStop">
            <summary></summary>
        </member>
        <member name="F:X.CommLib.Ctrl.Forms.HwndHelper.VirtualKeys.BrowserSearch">
            <summary></summary>
        </member>
        <member name="F:X.CommLib.Ctrl.Forms.HwndHelper.VirtualKeys.BrowserFavorites">
            <summary></summary>
        </member>
        <member name="F:X.CommLib.Ctrl.Forms.HwndHelper.VirtualKeys.BrowserHome">
            <summary></summary>
        </member>
        <member name="F:X.CommLib.Ctrl.Forms.HwndHelper.VirtualKeys.VolumeMute">
            <summary></summary>
        </member>
        <member name="F:X.CommLib.Ctrl.Forms.HwndHelper.VirtualKeys.VolumeDown">
            <summary></summary>
        </member>
        <member name="F:X.CommLib.Ctrl.Forms.HwndHelper.VirtualKeys.VolumeUp">
            <summary></summary>
        </member>
        <member name="F:X.CommLib.Ctrl.Forms.HwndHelper.VirtualKeys.MediaNextTrack">
            <summary></summary>
        </member>
        <member name="F:X.CommLib.Ctrl.Forms.HwndHelper.VirtualKeys.MediaPrevTrack">
            <summary></summary>
        </member>
        <member name="F:X.CommLib.Ctrl.Forms.HwndHelper.VirtualKeys.MediaStop">
            <summary></summary>
        </member>
        <member name="F:X.CommLib.Ctrl.Forms.HwndHelper.VirtualKeys.MediaPlayPause">
            <summary></summary>
        </member>
        <member name="F:X.CommLib.Ctrl.Forms.HwndHelper.VirtualKeys.LaunchMail">
            <summary></summary>
        </member>
        <member name="F:X.CommLib.Ctrl.Forms.HwndHelper.VirtualKeys.LaunchMediaSelect">
            <summary></summary>
        </member>
        <member name="F:X.CommLib.Ctrl.Forms.HwndHelper.VirtualKeys.LaunchApplication1">
            <summary></summary>
        </member>
        <member name="F:X.CommLib.Ctrl.Forms.HwndHelper.VirtualKeys.LaunchApplication2">
            <summary></summary>
        </member>
        <member name="F:X.CommLib.Ctrl.Forms.HwndHelper.VirtualKeys.OEM1">
            <summary></summary>
        </member>
        <member name="F:X.CommLib.Ctrl.Forms.HwndHelper.VirtualKeys.OEMPlus">
            <summary></summary>
        </member>
        <member name="F:X.CommLib.Ctrl.Forms.HwndHelper.VirtualKeys.OEMComma">
            <summary></summary>
        </member>
        <member name="F:X.CommLib.Ctrl.Forms.HwndHelper.VirtualKeys.OEMMinus">
            <summary></summary>
        </member>
        <member name="F:X.CommLib.Ctrl.Forms.HwndHelper.VirtualKeys.OEMPeriod">
            <summary></summary>
        </member>
        <member name="F:X.CommLib.Ctrl.Forms.HwndHelper.VirtualKeys.OEM2">
            <summary></summary>
        </member>
        <member name="F:X.CommLib.Ctrl.Forms.HwndHelper.VirtualKeys.OEM3">
            <summary></summary>
        </member>
        <member name="F:X.CommLib.Ctrl.Forms.HwndHelper.VirtualKeys.OEM4">
            <summary></summary>
        </member>
        <member name="F:X.CommLib.Ctrl.Forms.HwndHelper.VirtualKeys.OEM5">
            <summary></summary>
        </member>
        <member name="F:X.CommLib.Ctrl.Forms.HwndHelper.VirtualKeys.OEM6">
            <summary></summary>
        </member>
        <member name="F:X.CommLib.Ctrl.Forms.HwndHelper.VirtualKeys.OEM7">
            <summary></summary>
        </member>
        <member name="F:X.CommLib.Ctrl.Forms.HwndHelper.VirtualKeys.OEM8">
            <summary></summary>
        </member>
        <member name="F:X.CommLib.Ctrl.Forms.HwndHelper.VirtualKeys.OEMAX">
            <summary></summary>
        </member>
        <member name="F:X.CommLib.Ctrl.Forms.HwndHelper.VirtualKeys.OEM102">
            <summary></summary>
        </member>
        <member name="F:X.CommLib.Ctrl.Forms.HwndHelper.VirtualKeys.ICOHelp">
            <summary></summary>
        </member>
        <member name="F:X.CommLib.Ctrl.Forms.HwndHelper.VirtualKeys.ICO00">
            <summary></summary>
        </member>
        <member name="F:X.CommLib.Ctrl.Forms.HwndHelper.VirtualKeys.ProcessKey">
            <summary></summary>
        </member>
        <member name="F:X.CommLib.Ctrl.Forms.HwndHelper.VirtualKeys.ICOClear">
            <summary></summary>
        </member>
        <member name="F:X.CommLib.Ctrl.Forms.HwndHelper.VirtualKeys.Packet">
            <summary></summary>
        </member>
        <member name="F:X.CommLib.Ctrl.Forms.HwndHelper.VirtualKeys.OEMReset">
            <summary></summary>
        </member>
        <member name="F:X.CommLib.Ctrl.Forms.HwndHelper.VirtualKeys.OEMJump">
            <summary></summary>
        </member>
        <member name="F:X.CommLib.Ctrl.Forms.HwndHelper.VirtualKeys.OEMPA1">
            <summary></summary>
        </member>
        <member name="F:X.CommLib.Ctrl.Forms.HwndHelper.VirtualKeys.OEMPA2">
            <summary></summary>
        </member>
        <member name="F:X.CommLib.Ctrl.Forms.HwndHelper.VirtualKeys.OEMPA3">
            <summary></summary>
        </member>
        <member name="F:X.CommLib.Ctrl.Forms.HwndHelper.VirtualKeys.OEMWSCtrl">
            <summary></summary>
        </member>
        <member name="F:X.CommLib.Ctrl.Forms.HwndHelper.VirtualKeys.OEMCUSel">
            <summary></summary>
        </member>
        <member name="F:X.CommLib.Ctrl.Forms.HwndHelper.VirtualKeys.OEMATTN">
            <summary></summary>
        </member>
        <member name="F:X.CommLib.Ctrl.Forms.HwndHelper.VirtualKeys.OEMFinish">
            <summary></summary>
        </member>
        <member name="F:X.CommLib.Ctrl.Forms.HwndHelper.VirtualKeys.OEMCopy">
            <summary></summary>
        </member>
        <member name="F:X.CommLib.Ctrl.Forms.HwndHelper.VirtualKeys.OEMAuto">
            <summary></summary>
        </member>
        <member name="F:X.CommLib.Ctrl.Forms.HwndHelper.VirtualKeys.OEMENLW">
            <summary></summary>
        </member>
        <member name="F:X.CommLib.Ctrl.Forms.HwndHelper.VirtualKeys.OEMBackTab">
            <summary></summary>
        </member>
        <member name="F:X.CommLib.Ctrl.Forms.HwndHelper.VirtualKeys.ATTN">
            <summary></summary>
        </member>
        <member name="F:X.CommLib.Ctrl.Forms.HwndHelper.VirtualKeys.CRSel">
            <summary></summary>
        </member>
        <member name="F:X.CommLib.Ctrl.Forms.HwndHelper.VirtualKeys.EXSel">
            <summary></summary>
        </member>
        <member name="F:X.CommLib.Ctrl.Forms.HwndHelper.VirtualKeys.EREOF">
            <summary></summary>
        </member>
        <member name="F:X.CommLib.Ctrl.Forms.HwndHelper.VirtualKeys.Play">
            <summary></summary>
        </member>
        <member name="F:X.CommLib.Ctrl.Forms.HwndHelper.VirtualKeys.Zoom">
            <summary></summary>
        </member>
        <member name="F:X.CommLib.Ctrl.Forms.HwndHelper.VirtualKeys.Noname">
            <summary></summary>
        </member>
        <member name="F:X.CommLib.Ctrl.Forms.HwndHelper.VirtualKeys.PA1">
            <summary></summary>
        </member>
        <member name="F:X.CommLib.Ctrl.Forms.HwndHelper.VirtualKeys.OEMClear">
            <summary></summary>
        </member>
        <member name="M:X.CommLib.Ctrl.Forms.HwndHelper.GetCursorPoint">
            <summary>
                返回当前鼠标的位置
            </summary>
            <returns></returns>
        </member>
        <member name="M:X.CommLib.Ctrl.Forms.HwndHelper.Highlight(System.IntPtr,System.Drawing.Point)">
            <summary>
                高亮窗口上的点
            </summary>
            <param name="hwnd">The HWND.</param>
            <param name="point">The point.</param>
        </member>
        <member name="M:X.CommLib.Ctrl.Forms.HwndHelper.Highlight(System.IntPtr,System.Int32,System.Int32)">
            <summary>
                高亮窗口上的点
            </summary>
            <param name="hwnd">The HWND.</param>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
        </member>
        <member name="M:X.CommLib.Ctrl.Forms.HwndHelper.InputString(System.IntPtr,System.String,System.Int32)">
            <summary>
                向指定的窗口发送字符输入消息
            </summary>
            <param name="hWnd">The h WND.</param>
            <param name="message">The message.</param>
            <param name="sleepTime">输入每个字符时的停顿(毫秒).</param>
        </member>
        <member name="M:X.CommLib.Ctrl.Forms.HwndHelper.MouseClick(System.IntPtr,System.Int32,System.Int32)">
            <summary>
                点击窗口的指定位置
                返回点击点的坐标
            </summary>
            <param name="hwnd"></param>
            <param name="x"></param>
            <param name="y"></param>
        </member>
        <member name="M:X.CommLib.Ctrl.Forms.HwndHelper.MouseClick(System.IntPtr,System.Drawing.Rectangle,System.Nullable{System.Windows.Forms.Padding})">
            <summary>
                点击窗口的指一位置， 该位置为矩形中的指定位置
                返回点击点的坐标
            </summary>
            <param name="hwnd">The h WND.</param>
            <param name="rectangle">The point.</param>
            <param name="padding">点击的边界.</param>
            <returns>Point.</returns>
        </member>
        <member name="M:X.CommLib.Ctrl.Forms.HwndHelper.MouseClick(System.IntPtr,System.Drawing.Point,System.Boolean)">
            <summary>
            点击窗口的指一位置
            </summary>
            <param name="hwnd">The h WND.</param>
            <param name="point">The point.</param>
            <param name="debug">if set to <c>true</c> [debug].</param>
        </member>
        <member name="M:X.CommLib.Ctrl.Forms.HwndHelper.MouseDoubleClick(System.IntPtr,System.Int32,System.Int32)">
            <summary>
                鼠标双击
            </summary>
            <param name="hWnd">The h WND.</param>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
        </member>
        <member name="M:X.CommLib.Ctrl.Forms.HwndHelper.MouseDoubleClick(System.IntPtr,System.Drawing.Point)">
            <summary>
                鼠标双击
            </summary>
            <param name="hWnd">The h WND.</param>
            <param name="point">The point.</param>
        </member>
        <member name="M:X.CommLib.Ctrl.Forms.HwndHelper.MouseMiddleClick(System.IntPtr,System.Int32,System.Int32)">
            <summary>
                鼠标点击中间键
            </summary>
            <param name="hWnd">The h WND.</param>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
        </member>
        <member name="M:X.CommLib.Ctrl.Forms.HwndHelper.MouseMiddleClick(System.IntPtr,System.Drawing.Point)">
            <summary>
                鼠标点击中间键
            </summary>
            <param name="hWnd">The h WND.</param>
            <param name="point">The point.</param>
        </member>
        <member name="M:X.CommLib.Ctrl.Forms.HwndHelper.MouseMove(System.IntPtr,System.Drawing.Point[])">
            <summary>
                批量移动鼠标
            </summary>
            <param name="hWnd">The h WND.</param>
            <param name="points">The points.</param>
        </member>
        <member name="M:X.CommLib.Ctrl.Forms.HwndHelper.MouseMove(System.IntPtr,System.Boolean,System.Drawing.Point[])">
            <summary>
                Mouses the move.
            </summary>
            <param name="hWnd">The h WND.</param>
            <param name="debug">if set to <c>true</c> [debug].</param>
            <param name="points">The points.</param>
        </member>
        <member name="M:X.CommLib.Ctrl.Forms.HwndHelper.MouseMove(System.IntPtr,System.Int32,System.Int32,System.Boolean)">
            <summary>
                发送鼠标移动事件
            </summary>
            <param name="hWnd">The h WND.</param>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
        </member>
        <member name="M:X.CommLib.Ctrl.Forms.HwndHelper.MouseRightClick(System.IntPtr,System.Int32,System.Int32)">
            <summary>
                右键点击
            </summary>
            <param name="hWnd">The h WND.</param>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
        </member>
        <member name="M:X.CommLib.Ctrl.Forms.HwndHelper.MouseRightClick(System.IntPtr,System.Drawing.Point)">
            <summary>
                右键点击
            </summary>
            <param name="hWnd">The h WND.</param>
            <param name="point">The point.</param>
        </member>
        <member name="M:X.CommLib.Ctrl.Forms.HwndHelper.MouseWheel(System.IntPtr,System.Int32,System.Int32)">
            <summary>
                鼠标滚轮滚动
            </summary>
            <param name="hWnd">The h WND.</param>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
        </member>
        <member name="M:X.CommLib.Ctrl.Forms.HwndHelper.SendEnterKey(System.IntPtr)">
            <summary>
                向指定的窗口发送回车键
            </summary>
            <param name="hWnd"></param>
        </member>
        <member name="M:X.CommLib.Ctrl.Forms.HwndHelper.SendKey(System.IntPtr,X.CommLib.Ctrl.Forms.HwndHelper.VirtualKeys)">
            <summary>
                发送一个按钮消息,  按下，弹起，及字符信息
            </summary>
            <param name="hWnd">The h WND.</param>
            <param name="virtualKey">The virtual keys.</param>
        </member>
        <member name="M:X.CommLib.Ctrl.Forms.HwndHelper.SendKeyPress(System.IntPtr,X.CommLib.Ctrl.Forms.HwndHelper.VirtualKeys,System.Boolean)">
            <summary>
                发送按钮，按下及弹起信息
            </summary>
            <param name="hwnd">The HWND.</param>
            <param name="keyCode">The key code.</param>
            <param name="extended">if set to <c>true</c> [extended].</param>
        </member>
        <member name="M:X.CommLib.Ctrl.Forms.HwndHelper.SendKeys(System.IntPtr,X.CommLib.Ctrl.Forms.HwndHelper.VirtualKeys[])">
            <summary>
                发送一组按键消息
            </summary>
            <param name="hWnd">The h WND.</param>
            <param name="virtualKeys">The virtual keys.</param>
        </member>
        <member name="M:X.CommLib.Ctrl.Forms.HwndHelper.SendKeys(System.IntPtr,System.String)">
            <summary>
                发送一组按键消息
            </summary>
            <param name="hWnd">The h WND.</param>
            <param name="message">The message.</param>
        </member>
        <member name="M:X.CommLib.Ctrl.Forms.HwndHelper.SendMouseClickMessage(System.IntPtr,System.Drawing.Point)">
            <summary>
                发送鼠标click事件，其它为发送鼠标按下，弹起事件
            </summary>
            <param name="hWnd">The h WND.</param>
            <param name="point">The point.</param>
        </member>
        <member name="M:X.CommLib.Ctrl.Forms.HwndHelper.SendMouseClickMessage(System.IntPtr,System.Int32,System.Int32)">
            <summary>
                发送鼠标click事件，其它为发送鼠标按下，弹起事件
            </summary>
            <param name="hWnd">The h WND.</param>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
        </member>
        <member name="M:X.CommLib.Ctrl.Forms.HwndHelper.SetCursorPostion(System.Int32,System.Int32)">
            <summary>
                设置鼠标的位置
            </summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
        </member>
        <member name="M:X.CommLib.Ctrl.Forms.HwndHelper.SetCursorPostion(System.Drawing.Point)">
            <summary>
                设置鼠标的位置
            </summary>
            <param name="point">The point.</param>
        </member>
        <member name="M:X.CommLib.Ctrl.Forms.HwndHelper.SetCursorPostion(System.IntPtr,System.Drawing.Point)">
            <summary>
                设置鼠标位置,point 相对于hwnh
            </summary>
            <param name="hWnd">The h WND.</param>
            <param name="point">The point.</param>
        </member>
        <member name="M:X.CommLib.Ctrl.Forms.HwndHelper.ConvetToMessageLParam(System.UInt32)">
            <summary>
                将uint 转为intptr.因为uint 与 int 长度是一致的。
                但是uint转为intptr 时，如果在32位操作系统下，可能会数值溢出，所以先转为int 再处理
            </summary>
            <param name="lParam">The l parameter.</param>
            <returns></returns>
        </member>
        <member name="M:X.CommLib.Ctrl.Forms.HwndHelper.GetKeyDownMessageLParam(X.CommLib.Ctrl.Forms.HwndHelper.VirtualKeys,System.Boolean)">
            <summary>
                获取按下键时的消息参数
            </summary>
            <param name="virtualKey">The virtual key.</param>
            <param name="extended">if set to <c>true</c> [extended].</param>
            <returns></returns>
        </member>
        <member name="M:X.CommLib.Ctrl.Forms.HwndHelper.GetKeyUpMessageLParam(X.CommLib.Ctrl.Forms.HwndHelper.VirtualKeys,System.Boolean)">
            <summary>
                获取抬起键时的消息参数
            </summary>
            <param name="virtualKey">The virtual key.</param>
            <param name="extended">if set to <c>true</c> [extended].</param>
            <returns></returns>
        </member>
        <member name="M:X.CommLib.Ctrl.Forms.HwndHelper.GetPoint(System.Int32,System.Int32)">
            <summary>
                将xy转为一个坐标值
            </summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <returns></returns>
        </member>
        <member name="M:X.CommLib.Ctrl.Forms.HwndHelper.GetVirtualKeyCodeValue(X.CommLib.Ctrl.Forms.HwndHelper.VirtualKeys)">
            <summary>
                返回虚拟值的值
            </summary>
            <param name="key">The key.</param>
            <returns></returns>
        </member>
        <member name="M:X.CommLib.Ctrl.Forms.HwndHelper.MakeWParam(System.Int32,System.Int32)">
            <summary>
                创建发送参数值
            </summary>
            <param name="lowVal">The x.</param>
            <param name="highVal">The y.</param>
            <returns></returns>
        </member>
        <member name="M:X.CommLib.Ctrl.Forms.HwndHelper.MapVirtualKey(System.UInt32,System.UInt32)">
            <summary>
                Maps the virtual key.
            </summary>
            <param name="uCode">The u code.</param>
            <param name="uMapType">Type of the u map.</param>
            <returns></returns>
        </member>
        <member name="M:X.CommLib.Ctrl.Forms.HwndHelper.MouseClick(System.IntPtr,System.Drawing.Point,System.UInt32,System.UInt32,X.CommLib.Ctrl.Forms.HwndHelper.MouseKeyEnum,System.Boolean)">
            <summary>
                模拟鼠标点击事件
            </summary>
            <param name="hwnd">目标窗口句柄</param>
            <param name="point">The point.</param>
            <param name="buttondown">The wm rbuttondown.</param>
            <param name="buttonup">The wm rbuttonup.</param>
            <param name="button">鼠标标识</param>
            <param name="debug">if set to <c>true</c> [debug].</param>
        </member>
        <member name="M:X.CommLib.Ctrl.Forms.HwndHelper.PostMessage(System.IntPtr,System.UInt32,System.IntPtr,System.IntPtr)">
            <summary>
                Posts the message.
            </summary>
            <param name="hWnd">The h WND.</param>
            <param name="msg">The MSG.</param>
            <param name="wParam">The w parameter.</param>
            <param name="lParam">The l parameter.</param>
            <returns></returns>
        </member>
        <member name="M:X.CommLib.Ctrl.Forms.HwndHelper.SendKeyDown(System.IntPtr,X.CommLib.Ctrl.Forms.HwndHelper.VirtualKeys,System.Boolean)">
            <summary>
                发送按钮按下消息
            </summary>
            <param name="hwnd">The HWND.</param>
            <param name="keyCode">The key code.</param>
            <param name="extended">if set to <c>true</c> [extended].</param>
        </member>
        <member name="M:X.CommLib.Ctrl.Forms.HwndHelper.SendKeyUp(System.IntPtr,X.CommLib.Ctrl.Forms.HwndHelper.VirtualKeys,System.Boolean)">
            <summary>
                发送按钮弹出消息
            </summary>
            <param name="hwnd">The HWND.</param>
            <param name="keyCode">The key code.</param>
            <param name="extended">if set to <c>true</c> [extended].</param>
        </member>
        <member name="M:X.CommLib.Ctrl.Forms.HwndHelper.SendMessage(System.IntPtr,System.UInt32,System.IntPtr,System.IntPtr)">
            <summary>
                发送消息
            </summary>
            <param name="hWnd"></param>
            <param name="msg"></param>
            <param name="wParam"></param>
            <param name="lParam"></param>
            <returns></returns>
        </member>
        <member name="M:X.CommLib.Ctrl.Forms.HwndHelper.SendMouseMessage(System.IntPtr,System.UInt32,X.CommLib.Ctrl.Forms.HwndHelper.MouseKeyEnum,System.Drawing.Point)">
            <summary>
                发送鼠标事件
            </summary>
            <param name="hWnd">The h WND.</param>
            <param name="buttonMsgId">鼠标消息定义.</param>
            <param name="buttonKeyId">鼠标键定义.</param>
            <param name="point">坐标.</param>
        </member>
        <member name="M:X.CommLib.Ctrl.Forms.HwndHelper.ShowKeyPressMessageLParam(System.Int64)">
            <summary>
                在调试输出窗口输出按钮消息中的lparam 参数
            </summary>
            <param name="number">The number.</param>
        </member>
        <member name="M:X.CommLib.Ctrl.Forms.HwndHelper.ShowKeyPressMessageLParam(System.String)">
            <summary>
                在调试输出窗口输出按钮消息中的lparam 参数
            </summary>
            <param name="number">The number.</param>
        </member>
        <member name="T:X.CommLib.Ctrl.Forms.WinFormExtension">
            <summary>
                form 扩展方法
            </summary>
        </member>
        <member name="T:X.CommLib.Ctrl.Forms.WinFormExtension.EnumWindowsProc">
            <summary>
                枚举窗口的回调函数, 需要继续枚举返回true，不需要枚举返回false
            </summary>
            <param name="hWnd">The h WND.</param>
            <param name="lParam">The l parameter.</param>
            <returns></returns>
        </member>
        <member name="T:X.CommLib.Ctrl.Forms.WinFormExtension.FindWindowFunc">
            <summary>
                查找窗口回调函数，找到的话返回true
            </summary>
            <param name="hWnd">The h WND.</param>
            <param name="lParam">The l parameter.</param>
            <returns></returns>
        </member>
        <member name="T:X.CommLib.Ctrl.Forms.WinFormExtension.GetControlValueFunction`1">
            <summary>
            返回窗口值函数定义
            </summary>
            <typeparam name="T">返回类型</typeparam>
            <param name="control">The control.</param>
            <returns>T.</returns>
        </member>
        <member name="T:X.CommLib.Ctrl.Forms.WinFormExtension.AnimateWindowFlags">
            <summary>
                动画参数
                下面是可用的常量，根据不同的动画效果声明自己需要的
            </summary>
        </member>
        <member name="F:X.CommLib.Ctrl.Forms.WinFormExtension.AnimateWindowFlags.AwHorPositive">
            <summary>
                自左向右显示窗口，该标志可以在滚动动画和滑动动画中使用。使用AW_CENTER标志时忽略该标志
            </summary>
        </member>
        <member name="F:X.CommLib.Ctrl.Forms.WinFormExtension.AnimateWindowFlags.AwHorNegative">
            <summary>
                自右向左显示窗口，该标志可以在滚动动画和滑动动画中使用。使用AW_CENTER标志时忽略该标志
            </summary>
        </member>
        <member name="F:X.CommLib.Ctrl.Forms.WinFormExtension.AnimateWindowFlags.AwVerPositive">
            <summary>
                自顶向下显示窗口，该标志可以在滚动动画和滑动动画中使用。使用AW_CENTER标志时忽略该标志
            </summary>
        </member>
        <member name="F:X.CommLib.Ctrl.Forms.WinFormExtension.AnimateWindowFlags.AwVerNegative">
            <summary>
                自下向上显示窗口，该标志可以在滚动动画和滑动动画中使用。使用AW_CENTER标志时忽略该标志该标志
            </summary>
        </member>
        <member name="F:X.CommLib.Ctrl.Forms.WinFormExtension.AnimateWindowFlags.AwCenter">
            <summary>
                若使用了AW_HIDE标志，则使窗口向内重叠；否则向外扩展
            </summary>
        </member>
        <member name="F:X.CommLib.Ctrl.Forms.WinFormExtension.AnimateWindowFlags.AwHide">
            <summary>
                隐藏窗口
            </summary>
        </member>
        <member name="F:X.CommLib.Ctrl.Forms.WinFormExtension.AnimateWindowFlags.AwActive">
            <summary>
                激活窗口，在使用了AW_HIDE标志后不要使用这个标志
            </summary>
        </member>
        <member name="F:X.CommLib.Ctrl.Forms.WinFormExtension.AnimateWindowFlags.AwSlide">
            <summary>
                使用滑动类型动画效果，默认为滚动动画类型，当使用AW_CENTER标志时，这个标志就被忽略
            </summary>
        </member>
        <member name="F:X.CommLib.Ctrl.Forms.WinFormExtension.AnimateWindowFlags.AwBlend">
            <summary>
                使用淡入淡出效果
            </summary>
        </member>
        <member name="T:X.CommLib.Ctrl.Forms.WinFormExtension.WindowZorder">
            <summary>
                窗口位置
            </summary>
        </member>
        <member name="F:X.CommLib.Ctrl.Forms.WinFormExtension.WindowZorder.Topmost">
            <summary>
                最顶
            </summary>
        </member>
        <member name="F:X.CommLib.Ctrl.Forms.WinFormExtension.WindowZorder.Top">
            <summary>
                顶部
            </summary>
        </member>
        <member name="F:X.CommLib.Ctrl.Forms.WinFormExtension.WindowZorder.Notopmost">
            <summary>
                非最顶
            </summary>
        </member>
        <member name="F:X.CommLib.Ctrl.Forms.WinFormExtension.WindowZorder.Bottom">
            <summary>
                底部
            </summary>
        </member>
        <member name="M:X.CommLib.Ctrl.Forms.WinFormExtension.AnimateWindow(System.Windows.Forms.Form,System.TimeSpan,X.CommLib.Ctrl.Forms.WinFormExtension.AnimateWindowFlags)">
            <summary>
                显示窗口动画效果，如果失败则抛出异常
            </summary>
            <param name="form">
                The form.
            </param>
            <param name="timeSpan">
                The time span.
            </param>
            <param name="flags">
                The flags.
            </param>
        </member>
        <member name="M:X.CommLib.Ctrl.Forms.WinFormExtension.AnimateWindow(System.Windows.Forms.Form,System.Boolean,System.Nullable{System.Double})">
            <summary>
                在右下角显示或是隐藏窗口
            </summary>
            <param name="form">
                需要显示或是隐藏的窗口.
            </param>
            <param name="showForm">
                显示，还是隐藏窗口.
            </param>
            <param name="span">
                动画显示时长.
            </param>
        </member>
        <member name="M:X.CommLib.Ctrl.Forms.WinFormExtension.AutoCloseForm(System.Windows.Forms.Form,System.TimeSpan,System.Windows.Forms.DialogResult,System.Windows.Forms.Control)">
            <summary>
                定时自动关闭窗口
            </summary>
            <param name="form">
                需要定时关闭的窗口.
            </param>
            <param name="closeTime">
                自动关闭窗口的时长.
            </param>
            <param name="closeResult">
                关闭窗口后显示的DialogResult值.
            </param>
            <param name="remainTimeControl">
                如果指定控件，则在控制上显示剩余时间.
            </param>
        </member>
        <member name="M:X.CommLib.Ctrl.Forms.WinFormExtension.AutoSetHeightWithScreen(System.Windows.Forms.Form)">
            <summary>
                根据当前屏幕设置窗口的高度
            </summary>
            <param name="form">
                The form.
            </param>
        </member>
        <member name="M:X.CommLib.Ctrl.Forms.WinFormExtension.AutoSetSizeWithScreen(System.Windows.Forms.Form,System.Drawing.Size)">
            <summary>
                根据当前屏幕设置窗口大小
                设置为不小窗口默认大小，不大于当前屏幕的3/4
            </summary>
            <param name="form">
                The form.
            </param>
            <param name="maxSize">
                最大尺寸
            </param>
        </member>
        <member name="M:X.CommLib.Ctrl.Forms.WinFormExtension.AutoSetSizeWithScreen(System.Windows.Forms.Form)">
            <summary>
                根据当前屏幕设置窗口大小
                设置为不小窗口默认大小，不大于当前屏幕的3/4
            </summary>
            <param name="form">
                The form.
            </param>
        </member>
        <member name="M:X.CommLib.Ctrl.Forms.WinFormExtension.AutoSetWidthWithScreen(System.Windows.Forms.Form)">
            <summary>
                根据当前屏幕设置窗口的宽度
            </summary>
            <param name="form">
                The form.
            </param>
        </member>
        <member name="M:X.CommLib.Ctrl.Forms.WinFormExtension.BeginInvoke(System.Windows.Forms.Control,System.Windows.Forms.MethodInvoker)">
            <summary>
                切换到control 线程上 BeginInvoke invoker
            </summary>
            <param name="control">
                The control.
            </param>
            <param name="invoker">
                The invoker.
            </param>
            <exception cref="T:System.ArgumentNullException">
                control
                or
                invoker
            </exception>
        </member>
        <member name="M:X.CommLib.Ctrl.Forms.WinFormExtension.CenterScreen(System.Windows.Forms.Form)">
            <summary>
                将窗口置于屏幕中间位置
            </summary>
            <param name="form">
                The form.
            </param>
        </member>
        <member name="M:X.CommLib.Ctrl.Forms.WinFormExtension.CloseForm(System.Windows.Forms.Form,System.Windows.Forms.DialogResult)">
            <summary>
                关闭一个窗口
                考虑到了窗口是否已经释放，及线程的关闭
            </summary>
            <param name="form">
                需要关闭的窗口.
            </param>
            <param name="closeResult">
                窗口属性设置为该属性.
            </param>
        </member>
        <member name="M:X.CommLib.Ctrl.Forms.WinFormExtension.CountProgressBarStep(System.Int32,System.Int32,System.Int32)">
            <summary>
                计算一个进度条的当前进度位置，
            </summary>
            <param name="maxValue">
                进度条最大值.
            </param>
            <param name="current">
                当前进度值.
            </param>
            <param name="amount">
                总进度值.
            </param>
            <returns>
                The <see cref="T:System.Int32" />.
            </returns>
        </member>
        <member name="M:X.CommLib.Ctrl.Forms.WinFormExtension.DisableCloseButton(System.Windows.Forms.Form)">
            <summary>
                禁用关闭按钮，如果窗口创建，则在load事件中进行禁用
            </summary>
            <param name="form">
                The form.
            </param>
        </member>
        <member name="M:X.CommLib.Ctrl.Forms.WinFormExtension.DoubleBuffered(System.Windows.Forms.Control,System.Boolean)">
            <summary>
                开始或是关闭控件的双缓存
            </summary>
            <param name="control">
                The control.
            </param>
            <param name="enable">
                if set to <c>true</c> [enable].
            </param>
            <returns>
                是否进行了设置
            </returns>
        </member>
        <member name="M:X.CommLib.Ctrl.Forms.WinFormExtension.EnableDragFile(System.Windows.Forms.Control,System.Action{System.Object,System.String[],System.Windows.Forms.DragEventArgs})">
            <summary>
                设置控件允许拖入文件进行处理
            </summary>
            <param name="control">
                The control.
            </param>
            <param name="action">
                拖放完成后的回调函数
                消息发送者，当前的文件列表， 拖动类型.
                如果需要给 control 设置焦点 返回 true
            </param>
        </member>
        <member name="M:X.CommLib.Ctrl.Forms.WinFormExtension.EnableDragFilePath(System.Windows.Forms.Control)">
            <summary>
                设置某个控件可以直接拖入一个文件
            </summary>
            <param name="control">
                The control.
            </param>
        </member>
        <member name="M:X.CommLib.Ctrl.Forms.WinFormExtension.EnableDragFolderPath(System.Windows.Forms.Control)">
            <summary>
                设置某个控件可以直接拖入一个文件夹
            </summary>
            <param name="control">
                The control.
            </param>
        </member>
        <member name="M:X.CommLib.Ctrl.Forms.WinFormExtension.EnumTopWindows(X.CommLib.Ctrl.Forms.WinFormExtension.FindWindowFunc,System.IntPtr)">
            <summary>
                枚举顶层窗口
            </summary>
            <param name="findWindowFunc">
                The find window function.
            </param>
            <param name="lparam">
                The l parameter.
            </param>
            <returns>
                The <see cref="T:System.IntPtr" />.
            </returns>
            <exception cref="T:System.Exception">
                A delegate callback throws an exception.
            </exception>
        </member>
        <member name="M:X.CommLib.Ctrl.Forms.WinFormExtension.EnumWindows(X.CommLib.Ctrl.Forms.WinFormExtension.EnumWindowsProc,System.IntPtr)">
            <summary>
                枚举窗口函数, 也可以使用 SystemWindow.FilterToplevelWindows()
            </summary>
            <param name="enumFunc">
                The enum function.
            </param>
            <param name="lparam">
                The lparam.
            </param>
            <returns>
                The <see cref="T:System.Boolean" />.
            </returns>
        </member>
        <member name="M:X.CommLib.Ctrl.Forms.WinFormExtension.FindWindow(System.String,System.String)">
            <summary>
                Finds the window.
            </summary>
            <param name="className">
                Name of the lp class.
            </param>
            <param name="windowName">
                Name of the lp window.
            </param>
            <returns>
                The <see cref="T:System.IntPtr" />.
            </returns>
        </member>
        <member name="M:X.CommLib.Ctrl.Forms.WinFormExtension.FindWindowEx(System.IntPtr,System.IntPtr,System.String,System.String)">
            <summary>
                Finds the window ex.
            </summary>
            <param name="hwndParent">
                The HWND parent.
            </param>
            <param name="hwndChildAfter">
                The HWND child after.
            </param>
            <param name="lpszClass">
                The LPSZ class.
            </param>
            <param name="lpszWindow">
                The LPSZ window.
            </param>
            <returns>
                The <see cref="T:System.IntPtr" />.
            </returns>
        </member>
        <member name="M:X.CommLib.Ctrl.Forms.WinFormExtension.FormIsOpened(System.Windows.Forms.Form)">
            <summary>
                指定的窗口是否已经打开了，应该是load过了
            </summary>
            <param name="form">
                The form.
            </param>
            <returns>
                The <see cref="T:System.Boolean" />.
            </returns>
        </member>
        <member name="M:X.CommLib.Ctrl.Forms.WinFormExtension.GetControlEnable(System.Windows.Forms.Control)">
            <summary>
                以线程安全的方式获取控件的text属性
            </summary>
            <param name="control">
                The control.
            </param>
            <returns>
                The <see cref="T:System.Boolean" />.
            </returns>
        </member>
        <member name="M:X.CommLib.Ctrl.Forms.WinFormExtension.GetControlText(System.Windows.Forms.Control)">
            <summary>
                以线程安全的方式获取控件的text属性
            </summary>
            <param name="control">
                The control.
            </param>
            <returns>
                The <see cref="T:System.String" />.
            </returns>
        </member>
        <member name="M:X.CommLib.Ctrl.Forms.WinFormExtension.GetControlValue``1(System.Windows.Forms.Control,X.CommLib.Ctrl.Forms.WinFormExtension.GetControlValueFunction{``0})">
            <summary>
                返回控件指定值
            </summary>
            <typeparam name="T">
                返回值类型
            </typeparam>
            <param name="control">
                The control.
            </param>
            <param name="function">
                The function.
            </param>
            <returns>
                The <see cref="!:T" />.
            </returns>
            <exception cref="T:System.Exception">
                A delegate callback throws an exception.
            </exception>
        </member>
        <member name="M:X.CommLib.Ctrl.Forms.WinFormExtension.GetControlValue``2(``0,System.Func{``0,``1})">
            <summary>
                在 Control 所在线程下调用  func
            </summary>
            <typeparam name="TControl">
                The type of the control.
            </typeparam>
            <typeparam name="TResult">
                The type of the result.
            </typeparam>
            <param name="control">
                The control.
            </param>
            <param name="func">
                The function.
            </param>
            <returns>
                The <see cref="!:TResult" />.
            </returns>
            <exception cref="T:System.Exception">
                A delegate callback throws an exception.
            </exception>
        </member>
        <member name="M:X.CommLib.Ctrl.Forms.WinFormExtension.GetControlValue``1(System.Windows.Forms.Control,System.String)">
            <summary>
                返回控件指定属性值
            </summary>
            <typeparam name="T">
                返回类型
            </typeparam>
            <param name="control">
                The control.
            </param>
            <param name="propertyName">
                Name of the property.
            </param>
            <returns>
                The <see cref="!:T" />.
            </returns>
        </member>
        <member name="M:X.CommLib.Ctrl.Forms.WinFormExtension.GetControlVisible(System.Windows.Forms.Control)">
            <summary>
                以线程安全的方式获取控件的text属性
            </summary>
            <param name="control">
                The control.
            </param>
            <returns>
                The <see cref="T:System.Boolean" />.
            </returns>
        </member>
        <member name="M:X.CommLib.Ctrl.Forms.WinFormExtension.GetRelativeRectangle(System.Drawing.Rectangle,System.Drawing.Rectangle)">
            <summary>
                返回 clientRectangle 相对于 rectangle 的位置
                一般一说clientRectangle为子控件的屏幕坐标 ，rectangle为窗口的屏幕坐标
            </summary>
            <param name="clientRectangle">
                The client rectangle.
            </param>
            <param name="rectangle">
                The rectangle.
            </param>
            <returns>
                The <see cref="T:System.Drawing.Rectangle" />.
            </returns>
        </member>
        <member name="M:X.CommLib.Ctrl.Forms.WinFormExtension.GetThreadProcessId(System.IntPtr)">
            <summary>
                返回窗口所在进程id
            </summary>
            <param name="hwnd">
                The h WND.
            </param>
            <returns>
                The <see cref="T:System.IntPtr" />.
            </returns>
            <exception cref="T:System.ApplicationException">
                获取窗口进程编号失败
            </exception>
        </member>
        <member name="M:X.CommLib.Ctrl.Forms.WinFormExtension.GetThreadProcessId(System.IntPtr,System.IntPtr@)">
            <summary>
                返回窗口所在的进程及线程id
            </summary>
            <param name="hwnd">
                输入的窗口句柄 .
            </param>
            <param name="processId">
                窗口所在的进程id.
            </param>
            <returns>
                创建窗口的线程id
            </returns>
            <exception cref="T:System.ApplicationException">
                获取窗口进程编号失败
            </exception>
        </member>
        <member name="M:X.CommLib.Ctrl.Forms.WinFormExtension.GetWindowRectangle(System.IntPtr)">
            <summary>
                返回窗口的大小及位置
            </summary>
            <param name="hwnd">
                The h WND.
            </param>
            <returns>
                The <see cref="T:System.Drawing.Rectangle" />.
            </returns>
        </member>
        <member name="M:X.CommLib.Ctrl.Forms.WinFormExtension.GetWindowText(System.IntPtr)">
            <summary>
                The get window text.
            </summary>
            <param name="hwnd">
                The h wnd.
            </param>
            <returns>
                The <see cref="T:System.String" />.
            </returns>
        </member>
        <member name="M:X.CommLib.Ctrl.Forms.WinFormExtension.SetWindowText(System.IntPtr,System.String)">
            <summary>
                设置窗口标题
            </summary>
            <param name="hwnd">The HWND.</param>
            <param name="text">The text.</param>
            <returns><c>true</c> if XXXX, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:X.CommLib.Ctrl.Forms.WinFormExtension.GetWindowTextFromMessage(System.IntPtr)">
            <summary>
                返回窗口的标题，使用 WM_GETTEXT 消息
            </summary>
            <param name="hwnd">
                The h WND.
            </param>
            <returns>
                The <see cref="T:System.String" />.
            </returns>
        </member>
        <member name="M:X.CommLib.Ctrl.Forms.WinFormExtension.Highlight(System.IntPtr,System.Drawing.Point)">
            <summary>
                高亮某个点
            </summary>
            <param name="hwnd">
                point对应的窗口句柄，如果设置为0则为桌面.
            </param>
            <param name="point">
                The point.
            </param>
        </member>
        <member name="M:X.CommLib.Ctrl.Forms.WinFormExtension.Highlight(System.IntPtr,System.Drawing.Rectangle)">
            <summary>
                高亮窗口的指定部位，如果没有指定范围（使用Rectangle.Empty）则高亮整个窗口
                因为 html控制无法直接高亮，建议使用HighlightFromDesktop
            </summary>
            <param name="hwnd">
                point对应的窗口句柄
            </param>
            <param name="rectangle">
                绘制的矩形大小, 相对于hwnd，如果为空，则为整个窗口.
            </param>
            <exception cref="T:System.ArgumentException">
                @请指定窗口句柄;hWnd
            </exception>
            <exception cref="T:System.NotSupportedException">
                窗口句柄及高亮范围不能同时为空
            </exception>
        </member>
        <member name="M:X.CommLib.Ctrl.Forms.WinFormExtension.HighlightFromDesktop(System.IntPtr,System.Drawing.Point)">
            <summary>
                在桌面上高度一个点为表示点击
            </summary>
            <param name="hwnd">
                The h WND.
            </param>
            <param name="point">
                The point.
            </param>
        </member>
        <member name="M:X.CommLib.Ctrl.Forms.WinFormExtension.HighlightFromDesktop(System.IntPtr,System.Drawing.Rectangle)">
            <summary>
                在桌面上高亮一个窗口中的矩形
            </summary>
            <param name="hwnd">
                The h WND.
            </param>
            <param name="rectangle">
                相对于hwnd 的坐标, 如果为空，则为hwnd的矩形
            </param>
        </member>
        <member name="M:X.CommLib.Ctrl.Forms.WinFormExtension.HighlightFromDesktop(System.Drawing.Rectangle)">
            <summary>
                在桌面上高亮一个矩形，如果使用多显示 器，而矩形在两个显示之间，则可能显示不全
            </summary>
            <param name="rectangle">
                The rectangle.
            </param>
        </member>
        <member name="M:X.CommLib.Ctrl.Forms.WinFormExtension.Invalidate(System.IntPtr,System.Boolean,System.Drawing.Rectangle,System.Boolean)">
            <summary>
                刷新窗口
            </summary>
            <param name="hwnd">
                需要刷新的窗口.
            </param>
            <param name="update">
                是否立即重绘
            </param>
            <param name="rectangle">
                需要重绘的区域，如果为null则为全部
            </param>
            <param name="erase">
                是否擦除背影.
            </param>
        </member>
        <member name="M:X.CommLib.Ctrl.Forms.WinFormExtension.Invoke(System.Windows.Forms.Control,System.Windows.Forms.MethodInvoker)">
            <summary>
                切换到control 线程上 Invoke invoker
            </summary>
            <param name="control">
                The control.
            </param>
            <param name="invoker">
                The invoker.
            </param>
            <exception cref="T:System.ArgumentNullException">
                control
                or
                invoker
            </exception>
        </member>
        <member name="M:X.CommLib.Ctrl.Forms.WinFormExtension.InvokeControlMethod(System.Windows.Forms.Control,System.Windows.Forms.MethodInvoker,System.Boolean)">
            <summary>
                Invoke 同名函数
            </summary>
            <param name="control">
                The control.
            </param>
            <param name="invoker">
                The invoker.
            </param>
            <param name="synchronized">
                是否同步方式调用, true:同步方式 。目前该参数未启用
            </param>
        </member>
        <member name="M:X.CommLib.Ctrl.Forms.WinFormExtension.IsInDesignMode">
            <summary>
                当前是不是在 windows 设置器模式
            </summary>
            <returns>
                The <see cref="T:System.Boolean" />.
            </returns>
        </member>
        <member name="M:X.CommLib.Ctrl.Forms.WinFormExtension.IsInDesignModeFromExecutablePath">
            <summary>
                当前是不是在 windows 设置器模式
                根据执行该进程的是不是 devenv 进行判断
            </summary>
            <returns>
                The <see cref="T:System.Boolean" />.
            </returns>
        </member>
        <member name="M:X.CommLib.Ctrl.Forms.WinFormExtension.IsSameProcess(System.IntPtr,System.IntPtr)">
            <summary>
                指定的两个窗口句柄是不是同一个线程中的
            </summary>
            <param name="hwnd1">
                The h WND1.
            </param>
            <param name="hwnd2">
                The h WND2.
            </param>
            <returns>
                The <see cref="T:System.Boolean" />.
            </returns>
        </member>
        <member name="M:X.CommLib.Ctrl.Forms.WinFormExtension.IsWindow(System.IntPtr)">
            <summary>
                是否是一个有效的win窗口
            </summary>
            <param name="hwnd">
                The h WND.
            </param>
            <returns>
                The <see cref="T:System.Boolean" />.
            </returns>
        </member>
        <member name="M:X.CommLib.Ctrl.Forms.WinFormExtension.MoveWindow(System.IntPtr,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)">
            <summary>
                移动窗口
            </summary>
            <param name="hwnd">
                The h WND.
            </param>
            <param name="x">
                设置窗口的位置x值
            </param>
            <param name="y">
                设置窗口的位置y值
            </param>
            <param name="width">
                设置窗口的宽度， 如果小于0则为不改变
            </param>
            <param name="height">
                设置窗口的高度， 如果小于0则为不改变
            </param>
            <param name="repaint">
                if set to <c>true</c> [repaint].
            </param>
        </member>
        <member name="M:X.CommLib.Ctrl.Forms.WinFormExtension.MoveWindow(System.IntPtr,System.Drawing.Point)">
            <summary>
                移动窗口位置
            </summary>
            <param name="hwnd">
                The h WND.
            </param>
            <param name="location">
                The location.
            </param>
        </member>
        <member name="M:X.CommLib.Ctrl.Forms.WinFormExtension.PointToClient(System.IntPtr,System.Drawing.Point)">
            <summary>
                将屏幕坐标转为相对窗口的相对坐标
            </summary>
            <param name="hwnd">
                The h WND.
            </param>
            <param name="screenPoint">
                The screen point.
            </param>
            <returns>
                The <see cref="T:System.Drawing.Point" />.
            </returns>
        </member>
        <member name="M:X.CommLib.Ctrl.Forms.WinFormExtension.PointToScreen(System.IntPtr,System.Drawing.Point)">
            <summary>
                将相对窗口的相对坐标转为屏幕坐标
            </summary>
            <param name="hwnd">
                The h WND.
            </param>
            <param name="clientPoint">
                The client point.
            </param>
            <returns>
                The <see cref="T:System.Drawing.Point" />.
            </returns>
        </member>
        <member name="M:X.CommLib.Ctrl.Forms.WinFormExtension.RemoveEventHandler(System.Object,System.String)">
            <summary>
                移除 obj 中的事件 eventname
            </summary>
            <param name="obj">
                The object.
            </param>
            <param name="eventname">
                The eventname.
            </param>
        </member>
        <member name="M:X.CommLib.Ctrl.Forms.WinFormExtension.RightBottomScreen(System.Windows.Forms.Form,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
                在桌面右下角显示窗口
            </summary>
            <param name="form">
                需要设置的窗口
            </param>
            <param name="rightMargin">
                窗口左边距屏幕边距
            </param>
            <param name="bottomMargin">
                窗口底边距屏幕边距
            </param>
        </member>
        <member name="M:X.CommLib.Ctrl.Forms.WinFormExtension.RightBottomScreen(System.Drawing.Rectangle,System.Windows.Forms.Form,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
                将指定的窗口移到指定区域的右下角
            </summary>
            <param name="workArea">
                The work area.
            </param>
            <param name="form">
                The form.
            </param>
            <param name="rightMargin">
                The right margin.
            </param>
            <param name="bottomMargin">
                The bottom margin.
            </param>
        </member>
        <member name="M:X.CommLib.Ctrl.Forms.WinFormExtension.SaveBindingDatas(System.Windows.Forms.Control)">
            <summary>
                强制将当前属性的值定性主到绑定的数据源
            </summary>
            <param name="control">
                The control.
            </param>
        </member>
        <member name="M:X.CommLib.Ctrl.Forms.WinFormExtension.SetActiveWindow(System.IntPtr)">
            <summary>
                将窗口设置为激活，失败抛出相应的异常
            </summary>
            <param name="hwnd">
                The h WND.
            </param>
            <returns>
                The <see cref="T:System.IntPtr" />.
            </returns>
            <exception cref="T:System.ComponentModel.Win32Exception">
                相应的win32异常
            </exception>
        </member>
        <member name="M:X.CommLib.Ctrl.Forms.WinFormExtension.SetActiveWindowCore(System.IntPtr)">
            <summary>
                将窗口设置为激活
            </summary>
            <param name="hwnd">
                The h WND.
            </param>
            <returns>
                上一个激活的窗口
            </returns>
        </member>
        <member name="M:X.CommLib.Ctrl.Forms.WinFormExtension.SetControlEnable(System.Windows.Forms.Control,System.Boolean,System.Boolean)">
            <summary>
                以线程安全的方式设置控件的text属性
            </summary>
            <param name="control">
                The control.
            </param>
            <param name="enable">
                if set to <c>true</c> [visible].
            </param>
            <param name="synchronized">
                if set to <c>true</c> [synchronized].
            </param>
        </member>
        <member name="M:X.CommLib.Ctrl.Forms.WinFormExtension.SetControlMoveable(System.Windows.Forms.Control,System.Boolean)">
            <summary>
                设置控件为鼠标可以在父控件中移动
            </summary>
            <param name="control">
                The control.
            </param>
            <param name="limitOwner">
                是否不能移出父控件.
            </param>
        </member>
        <member name="M:X.CommLib.Ctrl.Forms.WinFormExtension.SetControlText(System.Windows.Forms.Control,System.String,System.Boolean)">
            <summary>
                以线程安全的方式设置控件的text属性
            </summary>
            <param name="control">
                The control.
            </param>
            <param name="text">
                The text.
            </param>
            <param name="synchronized">
                if set to <c>true</c> [synchronized].
            </param>
        </member>
        <member name="M:X.CommLib.Ctrl.Forms.WinFormExtension.SetControlVisible(System.Windows.Forms.Control,System.Boolean,System.Boolean)">
            <summary>
                以线程安全的方式设置控件的text属性
            </summary>
            <param name="control">
                The control.
            </param>
            <param name="visible">
                if set to <c>true</c> [visible].
            </param>
            <param name="synchronized">
                if set to <c>true</c> [synchronized].
            </param>
        </member>
        <member name="M:X.CommLib.Ctrl.Forms.WinFormExtension.SetFormMoveWithControl(System.Windows.Forms.Control)">
            <summary>
                设置某个窗口可以随着子控制被鼠标移动而移动
            </summary>
            <param name="control">
                The control.
            </param>
        </member>
        <member name="M:X.CommLib.Ctrl.Forms.WinFormExtension.SetListViewColumnAutoWidth(System.Windows.Forms.ListView,System.Windows.Forms.ColumnHeader,System.Nullable{System.Int32})">
            <summary>
                设置当列表的大小改变时，某一个列自动调整宽度
            </summary>
            <param name="listView">
                The list view.
            </param>
            <param name="column">
                The column.
            </param>
            <param name="minWidth">
                The minimum width.
            </param>
        </member>
        <member name="M:X.CommLib.Ctrl.Forms.WinFormExtension.SetListViewColumnWidth(System.Windows.Forms.ListView,System.Windows.Forms.ColumnHeader,System.Nullable{System.Int32})">
            <summary>
                计算并设置列表中某一个列的宽度
            </summary>
            <param name="listView">
                The list view.
            </param>
            <param name="column">
                The column.
            </param>
            <param name="minWidth">
                The minimum width.
            </param>
        </member>
        <member name="M:X.CommLib.Ctrl.Forms.WinFormExtension.SetWindowPos(System.IntPtr,X.CommLib.Ctrl.Forms.WinFormExtension.WindowZorder)">
            <summary>
                设置窗口位置
            </summary>
            <param name="hwnd">
                The h WND.
            </param>
            <param name="zorder">
                The zorder.
            </param>
        </member>
        <member name="M:X.CommLib.Ctrl.Forms.WinFormExtension.ShowFormInThread``1(System.Func{``0})">
            <summary>
                在一个线程中显示一个窗体（调用 ShowDialog），如果出错抛出异常，如果成功返回该 form
            </summary>
            <typeparam name="TResult">
                The type of the result.
            </typeparam>
            <param name="createFormFunc">
                The create form function.
            </param>
            <returns>
                The <see cref="!:TResult" />.
            </returns>
            <exception cref="T:System.ApplicationException">
                没有成功的创建窗口
            </exception>
        </member>
        <member name="M:X.CommLib.Ctrl.Forms.WinFormExtension.TopWindow(System.IntPtr)">
            <summary>
                置顶窗口
            </summary>
            <param name="hwnd">
                The h WND.
            </param>
        </member>
        <member name="M:X.CommLib.Ctrl.Forms.WinFormExtension.TopWindow(System.Windows.Forms.Form)">
            <summary>
                置顶窗口
            </summary>
            <param name="form">
                The form.
            </param>
        </member>
        <member name="M:X.CommLib.Ctrl.Forms.WinFormExtension.TryGetThreadProcessId(System.IntPtr,System.IntPtr@)">
            <summary>
                返回窗口所在的进程及线程id
            </summary>
            <param name="hwnd">
                输入的窗口句柄 .
            </param>
            <param name="processId">
                窗口所在的进程id.
            </param>
            <returns>
                创建窗口的线程id
            </returns>
        </member>
        <member name="M:X.CommLib.Ctrl.Forms.WinFormExtension.TrySetActiveWindow(System.IntPtr)">
            <summary>
                设置一个窗口为激活状态，失败不会抛出异常
            </summary>
            <param name="hwnd">
                The HWND.
            </param>
            <returns>
                The <see cref="T:System.Boolean" />.
            </returns>
        </member>
        <member name="M:X.CommLib.Ctrl.Forms.WinFormExtension.WaitFormThreadExist(System.Windows.Forms.Form)">
            <summary>
                等待一个窗口所在线程退出
            </summary>
            <param name="form">
                The form.
            </param>
        </member>
        <member name="M:X.CommLib.Ctrl.Forms.WinFormExtension.WindowFromPoint(System.Drawing.Point)">
            <summary>
                返回鼠标位置所在的句柄
            </summary>
            <param name="point">
                The point.
            </param>
            <returns>
                The <see cref="T:System.IntPtr" />.
            </returns>
        </member>
        <member name="M:X.CommLib.Ctrl.Forms.WinFormExtension.MoveWindowApi(System.IntPtr,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)">
            <summary>
                The MoveWindow function changes the position and dimensions of the specified window. For a top-level window, the
                position and dimensions are relative to the upper-left corner of the screen. For a child window, they are relative
                to the upper-left corner of the parent window's client area.
            </summary>
            <param name="hwnd">
                Handle to the window.
            </param>
            <param name="x">
                The x.
            </param>
            <param name="y">
                The y.
            </param>
            <param name="width">
                Specifies the new width of the window.
            </param>
            <param name="height">
                Specifies the new height of the window.
            </param>
            <param name="repaint">
                Specifies whether the window is to be repainted. If this parameter is TRUE, the window receives
                a message. If the parameter is FALSE, no repainting of any kind occurs. This applies to the client area, the
                nonclient area (including the title bar and scroll bars), and any part of the parent window uncovered as a result
                of moving a child window.
            </param>
            <returns>
                If the function succeeds, the return value is nonzero.
                <para>
                    If the function fails, the return value is zero. To get extended error information, call GetLastError.
                </para>
            </returns>
        </member>
        <member name="M:X.CommLib.Ctrl.Forms.WinFormExtension.AnimateWindow(System.IntPtr,System.Int32,X.CommLib.Ctrl.Forms.WinFormExtension.AnimateWindowFlags)">
            <summary>
                窗口动画效果函数
            </summary>
            <param name="hwnd">
                The HWND.
            </param>
            <param name="time">
                时间可能是毫秒
            </param>
            <param name="flags">
                The dw flags.
            </param>
            <returns>
                The <see cref="T:System.Boolean" />.
            </returns>
        </member>
        <member name="M:X.CommLib.Ctrl.Forms.WinFormExtension.ClientToScreen(System.IntPtr,System.Drawing.Point@)">
            <summary>
                将相对坐标转为屏幕坐标
            </summary>
            <param name="hwnd">
                The h WND.
            </param>
            <param name="point">
                The lp point.
            </param>
            <returns>
                The <see cref="T:System.Boolean" />.
            </returns>
        </member>
        <member name="M:X.CommLib.Ctrl.Forms.WinFormExtension.CreateDC(System.String,System.String,System.String,System.IntPtr)">
            <summary>
                创建hdc对象
            </summary>
            <param name="driver">
                The LPSZ driver.
            </param>
            <param name="device">
                The LPSZ device.
            </param>
            <param name="output">
                The LPSZ output.
            </param>
            <param name="initData">
                The lp initialize data.
            </param>
            <returns>
                The <see cref="T:System.IntPtr" />.
            </returns>
        </member>
        <member name="M:X.CommLib.Ctrl.Forms.WinFormExtension.CreateGraphicsFromScreen(System.Windows.Forms.Screen,System.IntPtr@)">
            <summary>
                创建对应屏幕的绘图对象
            </summary>
            <param name="screen">
                The screen.
            </param>
            <param name="hDc">
                The h dc.
            </param>
            <returns>
                The <see cref="T:System.Drawing.Graphics" />.
            </returns>
            <exception cref="T:System.ApplicationException">
                创建hdc对象失败
            </exception>
        </member>
        <member name="M:X.CommLib.Ctrl.Forms.WinFormExtension.DeleteDC(System.IntPtr)">
            <summary>
                释放hdc 对象
            </summary>
            <param name="hdc">
                A handle to the device context.
            </param>
            <returns>
                If the function succeeds, the return value is <c>true</c>. If the function fails, the return value is
                <c>false</c>.
            </returns>
        </member>
        <member name="M:X.CommLib.Ctrl.Forms.WinFormExtension.DisableCloseButton(System.IntPtr)">
            <summary>
                关闭指定窗口句柄的关闭按钮
            </summary>
            <param name="handle">
                The handle.
            </param>
        </member>
        <member name="M:X.CommLib.Ctrl.Forms.WinFormExtension.EnableMenuItem(System.IntPtr,System.UInt32,System.UInt32)">
            <summary>
                禁用按钮
            </summary>
            <param name="menu">
                The h menu.
            </param>
            <param name="enableItemId">
                The u ID enable item.
            </param>
            <param name="enable">
                The u enable.
            </param>
            <returns>
                The <see cref="T:System.Boolean" />.
            </returns>
        </member>
        <member name="M:X.CommLib.Ctrl.Forms.WinFormExtension.GetHeightWithScreen(System.Windows.Forms.Form,System.Int32)">
            <summary>
                返回窗口的推荐高度
            </summary>
            <param name="form">
                The form.
            </param>
            <param name="maxHeight">
                最大高度
            </param>
            <returns>
                The <see cref="T:System.Int32" />.
            </returns>
        </member>
        <member name="M:X.CommLib.Ctrl.Forms.WinFormExtension.GetSystemMenu(System.IntPtr,System.Boolean)">
            <summary>
                获取禁用按钮
            </summary>
            <param name="hwnd">
                The h WND.
            </param>
            <param name="revert">
                if set to <c>true</c> [b revert].
            </param>
            <returns>
                The <see cref="T:System.IntPtr" />.
            </returns>
        </member>
        <member name="M:X.CommLib.Ctrl.Forms.WinFormExtension.GetWidthWithScreen(System.Windows.Forms.Form,System.Int32)">
            <summary>
                返回窗口的推荐宽度
            </summary>
            <param name="form">
                The form.
            </param>
            <param name="maxWidth">
                最大宽度
            </param>
            <returns>
                The <see cref="T:System.Int32" />.
            </returns>
        </member>
        <member name="M:X.CommLib.Ctrl.Forms.WinFormExtension.GetWindowRect(System.IntPtr,ManagedWinapi.Windows.RECT@)">
            <summary>
                Gets the window rect.
            </summary>
            <param name="hwnd">
                The h WND.
            </param>
            <param name="rect">
                The lp rect.
            </param>
            <returns>
                The <see cref="T:System.Boolean" />.
            </returns>
        </member>
        <member name="M:X.CommLib.Ctrl.Forms.WinFormExtension.GetWindowText(System.IntPtr,System.Text.StringBuilder,System.Int32)">
            <summary>
                Gets the window text.
            </summary>
            <param name="hwnd">
                The h WND.
            </param>
            <param name="stringBuffer">
                The lp string.
            </param>
            <param name="bufferSize">
                The n maximum count.
            </param>
            <returns>
                The <see cref="T:System.Int32" />.
            </returns>
        </member>
        <member name="M:X.CommLib.Ctrl.Forms.WinFormExtension.GetWindowTextLength(System.IntPtr)">
            <summary>
                Gets the length of the window text.
            </summary>
            <param name="hwnd">
                The h WND.
            </param>
            <returns>
                The <see cref="T:System.Int32" />.
            </returns>
        </member>
        <member name="M:X.CommLib.Ctrl.Forms.WinFormExtension.GetWindowThreadProcessId(System.IntPtr,System.UInt32@)">
            <summary>
                返回窗口所在的线程编号,
            </summary>
            <param name="hwnd">
                The h WND.
            </param>
            <param name="processId">
                The process identifier.
            </param>
            <returns>
                The <see cref="T:System.UInt32" />.
            </returns>
        </member>
        <member name="M:X.CommLib.Ctrl.Forms.WinFormExtension.Highlight(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Color,System.Single)">
            <summary>
                高亮指定区域
            </summary>
            <param name="graphics">
                The graphics.
            </param>
            <param name="rectangle">
                The light rectangle.
            </param>
            <param name="hotPink">
                The hot pink.
            </param>
            <param name="width">
                The width.
            </param>
        </member>
        <member name="M:X.CommLib.Ctrl.Forms.WinFormExtension.InvalidateRect(System.IntPtr,ManagedWinapi.Windows.RECT@,System.Boolean)">
            <summary>
                设置窗口无效区
            </summary>
            <param name="hwnd">
                The h WND.
            </param>
            <param name="rect">
                The rect.
            </param>
            <param name="erase">
                if set to <c>true</c> [b erase].
            </param>
            <returns>
                The <see cref="T:System.Boolean" />.
            </returns>
        </member>
        <member name="M:X.CommLib.Ctrl.Forms.WinFormExtension.InvalidateRect(System.IntPtr,System.IntPtr,System.Boolean)">
            <summary>
                设置窗口无效区
            </summary>
            <param name="hwnd">
                The h WND.
            </param>
            <param name="rect">
                The lp rect.
            </param>
            <param name="erase">
                if set to <c>true</c> [b erase].
            </param>
            <returns>
                The <see cref="T:System.Boolean" />.
            </returns>
        </member>
        <member name="M:X.CommLib.Ctrl.Forms.WinFormExtension.RemoveMenu(System.IntPtr,System.UInt32,System.UInt32)">
            <summary>
                移除按钮
            </summary>
            <param name="menu">
                The h menu.
            </param>
            <param name="position">
                The u position.
            </param>
            <param name="flags">
                The u flags.
            </param>
            <returns>
                The <see cref="T:System.Boolean" />.
            </returns>
        </member>
        <member name="M:X.CommLib.Ctrl.Forms.WinFormExtension.ScreenToClient(System.IntPtr,System.Drawing.Point@)">
            <summary>
                将屏幕坐标转为相对坐标
            </summary>
            <param name="hwnd">
                The h WND.
            </param>
            <param name="point">
                The lp point.
            </param>
            <returns>
                The <see cref="T:System.Boolean" />.
            </returns>
        </member>
        <member name="M:X.CommLib.Ctrl.Forms.WinFormExtension.SendGetTextLengthMessage(System.IntPtr,System.UInt32,System.IntPtr,System.IntPtr)">
            <summary>
                发送获取窗口标题长度的消息
            </summary>
            <param name="hwnd">
                The h WND.
            </param>
            <param name="msg">
                The MSG.
            </param>
            <param name="wparam">
                The w parameter.
            </param>
            <param name="lparam">
                The l parameter.
            </param>
            <returns>
                The <see cref="T:System.Int32" />.
            </returns>
        </member>
        <member name="M:X.CommLib.Ctrl.Forms.WinFormExtension.SendGetTextMessage(System.IntPtr,System.UInt32,System.IntPtr,System.IntPtr)">
            <summary>
                发送获取窗口标题的消息
            </summary>
            <param name="hwnd">
                The h WND.
            </param>
            <param name="msg">
                The MSG.
            </param>
            <param name="wparam">
                The w parameter.
            </param>
            <param name="lparam">
                The l parameter.
            </param>
            <returns>
                The <see cref="T:System.Int32" />.
            </returns>
        </member>
        <member name="M:X.CommLib.Ctrl.Forms.WinFormExtension.SetControlMoveable(System.Windows.Forms.Control,System.Windows.Forms.Control)">
            <summary>
                当鼠标拖动 control时，moveablControl 会跟着移动
            </summary>
            <param name="control">
                The control.
            </param>
            <param name="moveablControl">
                The moveabl control.
            </param>
        </member>
        <member name="M:X.CommLib.Ctrl.Forms.WinFormExtension.SetWindowPos(System.IntPtr,System.IntPtr,System.Int32,System.Int32,System.Int32,System.Int32,X.CommLib.Ctrl.Forms.WinFormExtension.SetWindowPosFlags)">
            <summary>
                设置窗口位置
            </summary>
            <param name="hwnd">
                The h WND.
            </param>
            <param name="wndInsertAfter">
                The h WND insert after.
            </param>
            <param name="x">
                The x.
            </param>
            <param name="y">
                The y.
            </param>
            <param name="cx">
                The cx.
            </param>
            <param name="cy">
                The cy.
            </param>
            <param name="flags">
                The u flags.
            </param>
            <returns>
                The <see cref="T:System.Boolean" />.
            </returns>
        </member>
        <member name="M:X.CommLib.Ctrl.Forms.WinFormExtension.TestAnimateWindow">
            <summary>
                测试动画窗口
            </summary>
        </member>
        <member name="M:X.CommLib.Ctrl.Forms.WinFormExtension.TestAutoCloseForm">
            <summary>
                测试自动关闭窗口
            </summary>
        </member>
        <member name="M:X.CommLib.Ctrl.Forms.WinFormExtension.TestDisableCloseButton">
            <summary>
                测试禁用关闭按钮
            </summary>
        </member>
        <member name="M:X.CommLib.Ctrl.Forms.WinFormExtension.TestSetControlMoveable">
            <summary>
                测试控件移动
            </summary>
        </member>
        <member name="M:X.CommLib.Ctrl.Forms.WinFormExtension.UpdateWindow(System.IntPtr)">
            <summary>
                重绘窗口
            </summary>
            <param name="hwnd">
                The h WND.
            </param>
            <returns>
                The <see cref="T:System.Boolean" />.
            </returns>
        </member>
        <member name="T:X.CommLib.Ctrl.Forms.WinFormExtension.SetWindowPosFlags">
            <summary>The set window pos flags.</summary>
        </member>
        <member name="F:X.CommLib.Ctrl.Forms.WinFormExtension.SetWindowPosFlags.AsynchronousWindowPosition">
            <summary>
                If the calling thread and the thread that owns the window are attached to different input queues,
                the system posts the request to the thread that owns the window. This prevents the calling thread from
                blocking its execution while other threads process the request.
            </summary>
            <remarks>SWP_ASYNCWINDOWPOS</remarks>
        </member>
        <member name="F:X.CommLib.Ctrl.Forms.WinFormExtension.SetWindowPosFlags.DeferErase">
            <summary>Prevents generation of the WM_SYNCPAINT message.</summary>
            <remarks>SWP_DEFERERASE</remarks>
        </member>
        <member name="F:X.CommLib.Ctrl.Forms.WinFormExtension.SetWindowPosFlags.DrawFrame">
            <summary>Draws a frame (defined in the window's class description) around the window.</summary>
            <remarks>SWP_DRAWFRAME</remarks>
        </member>
        <member name="F:X.CommLib.Ctrl.Forms.WinFormExtension.SetWindowPosFlags.FrameChanged">
            <summary>
                Applies new frame styles set using the SetWindowLong function. Sends a WM_NCCALCSIZE message to
                the window, even if the window's size is not being changed. If this flag is not specified, WM_NCCALCSIZE
                is sent only when the window's size is being changed.
            </summary>
            <remarks>SWP_FRAMECHANGED</remarks>
        </member>
        <member name="F:X.CommLib.Ctrl.Forms.WinFormExtension.SetWindowPosFlags.HideWindow">
            <summary>Hides the window.</summary>
            <remarks>SWP_HIDEWINDOW</remarks>
        </member>
        <member name="F:X.CommLib.Ctrl.Forms.WinFormExtension.SetWindowPosFlags.DoNotActivate">
            <summary>
                Does not activate the window. If this flag is not set, the window is activated and moved to the
                top of either the topmost or non-topmost group (depending on the enable of the hWndInsertAfter
                parameter).
            </summary>
            <remarks>SWP_NOACTIVATE</remarks>
        </member>
        <member name="F:X.CommLib.Ctrl.Forms.WinFormExtension.SetWindowPosFlags.DoNotCopyBits">
            <summary>
                Discards the entire contents of the client area. If this flag is not specified, the valid
                contents of the client area are saved and copied back into the client area after the window is sized or
                repositioned.
            </summary>
            <remarks>SWP_NOCOPYBITS</remarks>
        </member>
        <member name="F:X.CommLib.Ctrl.Forms.WinFormExtension.SetWindowPosFlags.IgnoreMove">
            <summary>Retains the current position (ignores X and Y parameters).</summary>
            <remarks>SWP_NOMOVE</remarks>
        </member>
        <member name="F:X.CommLib.Ctrl.Forms.WinFormExtension.SetWindowPosFlags.DoNotChangeOwnerZOrder">
            <summary>Does not change the owner window's position in the Z order.</summary>
            <remarks>SWP_NOOWNERZORDER</remarks>
        </member>
        <member name="F:X.CommLib.Ctrl.Forms.WinFormExtension.SetWindowPosFlags.DoNotRedraw">
            <summary>
                Does not redraw changes. If this flag is set, no repainting of any kind occurs. This applies to
                the client area, the nonclient area (including the title bar and scroll bars), and any part of the parent
                window uncovered as a result of the window being moved. When this flag is set, the application must
                explicitly invalidate or redraw any parts of the window and parent window that need redrawing.
            </summary>
            <remarks>SWP_NOREDRAW</remarks>
        </member>
        <member name="F:X.CommLib.Ctrl.Forms.WinFormExtension.SetWindowPosFlags.DoNotReposition">
            <summary>Same as the SWP_NOOWNERZORDER flag.</summary>
            <remarks>SWP_NOREPOSITION</remarks>
        </member>
        <member name="F:X.CommLib.Ctrl.Forms.WinFormExtension.SetWindowPosFlags.DoNotSendChangingEvent">
            <summary>Prevents the window from receiving the WM_WINDOWPOSCHANGING message.</summary>
            <remarks>SWP_NOSENDCHANGING</remarks>
        </member>
        <member name="F:X.CommLib.Ctrl.Forms.WinFormExtension.SetWindowPosFlags.IgnoreResize">
            <summary>Retains the current size (ignores the cx and cy parameters).</summary>
            <remarks>SWP_NOSIZE</remarks>
        </member>
        <member name="F:X.CommLib.Ctrl.Forms.WinFormExtension.SetWindowPosFlags.IgnoreZOrder">
            <summary>Retains the current Z order (ignores the hWndInsertAfter parameter).</summary>
            <remarks>SWP_NOZORDER</remarks>
        </member>
        <member name="F:X.CommLib.Ctrl.Forms.WinFormExtension.SetWindowPosFlags.ShowWindow">
            <summary>Displays the window.</summary>
            <remarks>SWP_SHOWWINDOW</remarks>
        </member>
        <member name="T:X.CommLib.Ctrl.Properties.Resources">
            <summary>
              一个强类型的资源类，用于查找本地化的字符串等。
            </summary>
        </member>
        <member name="P:X.CommLib.Ctrl.Properties.Resources.ResourceManager">
            <summary>
              返回此类使用的缓存的 ResourceManager 实例。
            </summary>
        </member>
        <member name="P:X.CommLib.Ctrl.Properties.Resources.Culture">
            <summary>
              使用此强类型资源类，为所有资源查找
              重写当前线程的 CurrentUICulture 属性。
            </summary>
        </member>
        <member name="P:X.CommLib.Ctrl.Properties.Resources.AutoHiddenForm_Hidden">
            <summary>
              查找类似 隐藏 的本地化字符串。
            </summary>
        </member>
        <member name="P:X.CommLib.Ctrl.Properties.Resources.AutoHiddenForm_Showed">
            <summary>
              查找类似 显示 的本地化字符串。
            </summary>
        </member>
        <member name="P:X.CommLib.Ctrl.Properties.Resources.ChineseCharScaner_CodeLineInconsistent">
            <summary>
              查找类似 代码解析不一致 的本地化字符串。
            </summary>
        </member>
        <member name="P:X.CommLib.Ctrl.Properties.Resources.ChineseCharScaner_OutputFileName">
            <summary>
              查找类似 带中文代码.csv 的本地化字符串。
            </summary>
        </member>
        <member name="P:X.CommLib.Ctrl.Properties.Resources.ChineseCharScaner_ScanDirectoryStart">
            <summary>
              查找类似 开始扫描目录：{0} 的本地化字符串。
            </summary>
        </member>
        <member name="P:X.CommLib.Ctrl.Properties.Resources.ChineseCharScaner_ScanSourceFileStart">
            <summary>
              查找类似 开始扫描文件：{0} 的本地化字符串。
            </summary>
        </member>
        <member name="P:X.CommLib.Ctrl.Properties.Resources.download">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:X.CommLib.Ctrl.Properties.Resources.LangManager_CantFindLanguageFile">
            <summary>
              查找类似 找不到指定的语言文件 的本地化字符串。
            </summary>
        </member>
        <member name="P:X.CommLib.Ctrl.Properties.Resources.LangManager_CantFindLanguageString">
            <summary>
              查找类似 没有为&apos;{0}&apos;指定语言 的本地化字符串。
            </summary>
        </member>
        <member name="P:X.CommLib.Ctrl.Properties.Resources.LangManager_TestAuthor">
            <summary>
              查找类似 作者： 的本地化字符串。
            </summary>
        </member>
        <member name="P:X.CommLib.Ctrl.Properties.Resources.LangManager_TestString">
            <summary>
              查找类似 这是一段测试名称 的本地化字符串。
            </summary>
        </member>
        <member name="P:X.CommLib.Ctrl.Properties.Resources.LogViewControl_BackgroundWorkerDoWork_ErrorOccurredWhileProcessingLog">
            <summary>
              查找类似 处理日志时发生错误，{0} 的本地化字符串。
            </summary>
        </member>
        <member name="P:X.CommLib.Ctrl.Properties.Resources.MessageBoxHelper_ShowError_CopyErrorDetail">
            <summary>
              查找类似 点击 &apos;是&apos; 复制错误的详细信息， 点击 &apos;否&apos; 关闭错误窗口。 的本地化字符串。
            </summary>
        </member>
        <member name="P:X.CommLib.Ctrl.Properties.Resources.MessageBoxHelper_ShowError_ReportErrorDetail">
            <summary>
              查找类似 需要的话请向开发人员反馈该情况，谢谢您的支持。 的本地化字符串。
            </summary>
        </member>
        <member name="P:X.CommLib.Ctrl.Properties.Resources.MessageBoxHelper_ShowError_Title">
            <summary>
              查找类似 错误 的本地化字符串。
            </summary>
        </member>
        <member name="P:X.CommLib.Ctrl.Properties.Resources.MessageBoxHelper_ShowInfo_Title">
            <summary>
              查找类似 提示 的本地化字符串。
            </summary>
        </member>
        <member name="P:X.CommLib.Ctrl.Properties.Resources.UpdateNotificationForm_UpdateFormLoad_AppName">
            <summary>
              查找类似 应用名称： {0} 的本地化字符串。
            </summary>
        </member>
        <member name="P:X.CommLib.Ctrl.Properties.Resources.UpdateNotificationForm_UpdateFormLoad_LocalVersion">
            <summary>
              查找类似 当前版本： {0} 的本地化字符串。
            </summary>
        </member>
        <member name="P:X.CommLib.Ctrl.Properties.Resources.UpdateNotificationForm_UpdateFormLoad_MessageBoxShowFailed">
            <summary>
              查找类似 显示消息窗口时发生了错误 的本地化字符串。
            </summary>
        </member>
        <member name="P:X.CommLib.Ctrl.Properties.Resources.UpdateNotificationForm_UpdateFormLoad_RemoteVersion">
            <summary>
              查找类似 最新版本： {0} 的本地化字符串。
            </summary>
        </member>
        <member name="P:X.CommLib.Ctrl.Properties.Resources.UpdateNotificationForm_UpdateFormLoad_UpdateDescription">
            <summary>
              查找类似 发现{0}有更新的版本，准备进行更新。 的本地化字符串。
            </summary>
        </member>
        <member name="P:X.CommLib.Ctrl.Properties.Resources.WinFormExtension_CreateGraphicsFromScreen_CreateHdcFailed">
            <summary>
              查找类似 创建 hdc 对象失败 的本地化字符串。
            </summary>
        </member>
        <member name="P:X.CommLib.Ctrl.Properties.Resources.WinFormExtension_GetThreadProcessId_GetWindowsProcessIdFailed">
            <summary>
              查找类似 获取窗口进程编号失败 的本地化字符串。
            </summary>
        </member>
        <member name="P:X.CommLib.Ctrl.Properties.Resources.WinFormExtension_Highlight_WindowsHandlerIsNull">
            <summary>
              查找类似 请指定窗口句柄 的本地化字符串。
            </summary>
        </member>
        <member name="P:X.CommLib.Ctrl.Properties.Resources.WinFormExtension_ShowFormInThread_CreateFormFailed">
            <summary>
              查找类似 创建窗口失败 的本地化字符串。
            </summary>
        </member>
        <member name="T:X.CommLib.Ctrl.UserCodes.IGetUserCodeDataGatter">
            <summary>
                获取用户识别码接口
            </summary>
        </member>
        <member name="M:X.CommLib.Ctrl.UserCodes.IGetUserCodeDataGatter.GetUserCodeData">
            <summary>
            获取用户数据
            </summary>
            <returns>System.Byte[].</returns>
        </member>
        <member name="T:X.CommLib.Ctrl.UserCodes.IUserCodeOnlineParser">
            <summary>
                用户识别码解析器在线版，加入了返回错误的功能
            </summary>
        </member>
        <member name="M:X.CommLib.Ctrl.UserCodes.IUserCodeOnlineParser.GetUserCodeEx(System.String,System.String,System.Byte[])">
            <summary>
                返回用户的识别码
            </summary>
            <param name="title">进行识别时使用的标题</param>
            <param name="desc">进行识别时使用的备注</param>
            <param name="userCodeData">需要识别使用的数据</param>
            <returns>与图形对应的识别码.</returns>
        </member>
        <member name="M:X.CommLib.Ctrl.UserCodes.IUserCodeOnlineParser.GetUserInfo">
            <summary>
                返回用户信息
            </summary>
            <returns>UserInfo.</returns>
        </member>
        <member name="M:X.CommLib.Ctrl.UserCodes.IUserCodeOnlineParser.VerifyUserInfo">
            <summary>
            验证用户信息，如果失败，抛出 UserVerifyFailedException 异常
            </summary>
        </member>
        <member name="M:X.CommLib.Ctrl.UserCodes.IUserCodeOnlineParser.ReportError(X.CommLib.Ctrl.UserCodes.UserCodeInfo)">
            <summary>
                反馈错误
            </summary>
            <param name="codeInfo">The code information.</param>
        </member>
        <member name="T:X.CommLib.Ctrl.UserCodes.IUserCodeParser">
            <summary>
            用户识别码解析器
            </summary>
        </member>
        <member name="P:X.CommLib.Ctrl.UserCodes.IUserCodeParser.CodeDataGatter">
            <summary>
                是否可以重新获取用户的识别码
            </summary>
            <value>
                The code data gatter.
            </value>
        </member>
        <member name="M:X.CommLib.Ctrl.UserCodes.IUserCodeParser.GetUserCode(System.String,System.String,System.Byte[])">
            <summary>
            返回用户的识别码
            </summary>
            <param name="title">进行识别时使用的标题</param>
            <param name="desc">进行识别时使用的备注</param>
            <param name="userCodeData">需要识别使用的数据</param>
            <returns>与图形对应的识别码.</returns>
        </member>
        <member name="T:X.CommLib.Ctrl.UserCodes.NotImplementedUserCodeParser">
            <summary>
            未实现的用户码识别器
            </summary>
        </member>
        <member name="M:X.CommLib.Ctrl.UserCodes.NotImplementedUserCodeParser.CreateParser">
            <summary>
            返回一个默认的识别码处理器
            </summary>
            <returns></returns>
        </member>
        <member name="P:X.CommLib.Ctrl.UserCodes.NotImplementedUserCodeParser.CodeDataGatter">
            <summary>
            是否可以重新获取用户的识别码
            </summary>
            <value>
            The code data gatter.
            </value>
        </member>
        <member name="M:X.CommLib.Ctrl.UserCodes.NotImplementedUserCodeParser.GetUserCode(System.String,System.String,System.Byte[])">
            <summary>
            返回用户的识别码
            </summary>
            <param name="title"></param>
            <param name="desc"></param>
            <param name="userCodeData"></param>
            <returns></returns>
        </member>
        <member name="T:X.CommLib.Ctrl.UserCodes.ParseUserCodeException">
            <summary>
                解析用户验证码时发生的错误
            </summary>
        </member>
        <member name="M:X.CommLib.Ctrl.UserCodes.ParseUserCodeException.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:X.CommLib.Ctrl.UserCodes.ParseUserCodeException" /> class.
            </summary>
        </member>
        <member name="M:X.CommLib.Ctrl.UserCodes.ParseUserCodeException.#ctor(System.String)">
            <summary>
                Initializes a new instance of the <see cref="T:X.CommLib.Ctrl.UserCodes.ParseUserCodeException" /> class.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:X.CommLib.Ctrl.UserCodes.ParseUserCodeException.#ctor(System.String,System.Exception)">
            <summary>
                Initializes a new instance of the <see cref="T:X.CommLib.Ctrl.UserCodes.ParseUserCodeException" /> class.
            </summary>
            <param name="message">The message.</param>
            <param name="inner">The inner.</param>
        </member>
        <member name="M:X.CommLib.Ctrl.UserCodes.ParseUserCodeException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
                Initializes a new instance of the <see cref="T:X.CommLib.Ctrl.UserCodes.ParseUserCodeException" /> class.
            </summary>
            <param name="info">The information.</param>
            <param name="context">The context.</param>
        </member>
        <member name="P:X.CommLib.Ctrl.UserCodes.ParseUserCodeException.RowContent">
            <summary>
                相关的原始信息
            </summary>
            <value>The content of the row.</value>
        </member>
        <member name="T:X.CommLib.Ctrl.UserCodes.UserCodeDataGatter">
            <summary>
                一个通用的图像识别码处理器，
                只要设置一个回调函数即可
            </summary>
        </member>
        <member name="M:X.CommLib.Ctrl.UserCodes.UserCodeDataGatter.#ctor(System.Func{System.Byte[]})">
            <summary>
                Initializes a new instance of the <see cref="T:X.CommLib.Ctrl.UserCodes.UserCodeDataGatter" /> class.
            </summary>
            <param name="getCodeFunc">The get code function.</param>
        </member>
        <member name="P:X.CommLib.Ctrl.UserCodes.UserCodeDataGatter.GetCodeFunc">
            <summary>
                获取接口数据的回调函数
            </summary>
            <value>
                The get code function.
            </value>
        </member>
        <member name="M:X.CommLib.Ctrl.UserCodes.UserCodeDataGatter.GetUserCodeData">
            <summary>
                获取用户数据
            </summary>
            <returns></returns>
        </member>
        <member name="T:X.CommLib.Ctrl.UserCodes.UserCodeInfo">
            <summary>
                返回用户识别码信息
            </summary>
        </member>
        <member name="P:X.CommLib.Ctrl.UserCodes.UserCodeInfo.UserCode">
            <summary>
                返回的识别码
            </summary>
            <value>The user code.</value>
        </member>
        <member name="P:X.CommLib.Ctrl.UserCodes.UserCodeInfo.UserCodeData">
            <summary>
                对应识别码的数据
            </summary>
            <value>The user code data.</value>
        </member>
        <member name="P:X.CommLib.Ctrl.UserCodes.UserCodeInfo.UserCodeId">
            <summary>
                对应的识别码的标记，反馈使用
            </summary>
            <value>The user code identifier.</value>
        </member>
        <member name="M:X.CommLib.Ctrl.UserCodes.UserCodeInfo.ToString">
            <summary>
                Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
        </member>
        <member name="T:X.CommLib.Ctrl.UserCodes.UserCodeInputForm">
            <summary>
                用户识别码输入框 ，由用户手工输入识别码
            </summary>
        </member>
        <member name="F:X.CommLib.Ctrl.UserCodes.UserCodeInputForm._exitTime">
            <summary>
                退出时间
            </summary>
        </member>
        <member name="F:X.CommLib.Ctrl.UserCodes.UserCodeInputForm.userCodeImgPath">
            <summary>
                用户识别码图像的路径
            </summary>
        </member>
        <member name="M:X.CommLib.Ctrl.UserCodes.UserCodeInputForm.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:X.CommLib.Ctrl.UserCodes.UserCodeInputForm" /> class.
                初始化用户识别码输入框
            </summary>
        </member>
        <member name="P:X.CommLib.Ctrl.UserCodes.UserCodeInputForm.CodeDataGatter">
            <summary>
                图像识别码重新获取器
            </summary>
            <value> The code data gatter. </value>
        </member>
        <member name="M:X.CommLib.Ctrl.UserCodes.UserCodeInputForm.GetUserCode(System.String,System.String,System.Byte[],System.Windows.Forms.IWin32Window)">
            <summary>返回用户识别码，如果用户没有输入返回空的字符串</summary>
            <param name="title">The title.</param>
            <param name="desc">The desc.</param>
            <param name="userCodeData">The user code data.</param>
            <param name="owner">The owner.</param>
            <returns></returns>
        </member>
        <member name="M:X.CommLib.Ctrl.UserCodes.UserCodeInputForm.Test">
            <summary>
                Tests this instance.
            </summary>
        </member>
        <member name="M:X.CommLib.Ctrl.UserCodes.UserCodeInputForm.ExitTimerTick(System.Object,System.EventArgs)">
            <summary>定时器</summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:X.CommLib.Ctrl.UserCodes.UserCodeInputForm.OkButtonClick(System.Object,System.EventArgs)">
            <summary>按了确定按钮</summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:X.CommLib.Ctrl.UserCodes.UserCodeInputForm.RefreshButtonClick(System.Object,System.EventArgs)">
            <summary>重新获取识别码</summary>
            <param name="sender">The source of the event. </param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data. </param>
        </member>
        <member name="M:X.CommLib.Ctrl.UserCodes.UserCodeInputForm.UpdateUserCodeImage(System.Byte[])">
            <summary>在图像控制中更新识别码图像</summary>
            <param name="userCodeData">The user code data.</param>
        </member>
        <member name="M:X.CommLib.Ctrl.UserCodes.UserCodeInputForm.UserCodeInputFormFormClosing(System.Object,System.Windows.Forms.FormClosingEventArgs)">
            <summary>窗口准备退出</summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.Windows.Forms.FormClosingEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:X.CommLib.Ctrl.UserCodes.UserCodeInputForm.UserCodeInputFormLoad(System.Object,System.EventArgs)">
            <summary>窗口初始化</summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="F:X.CommLib.Ctrl.UserCodes.UserCodeInputForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:X.CommLib.Ctrl.UserCodes.UserCodeInputForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:X.CommLib.Ctrl.UserCodes.UserCodeInputForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:X.CommLib.Ctrl.UserCodes.UserCodeOnlineBaseParser">
            <summary>
                在线解码的基类
            </summary>
        </member>
        <member name="P:X.CommLib.Ctrl.UserCodes.UserCodeOnlineBaseParser.CodeDataGatter">
            <summary>
                是否可以重新获取用户的识别码
            </summary>
            <value>The code data gatter.</value>
        </member>
        <member name="M:X.CommLib.Ctrl.UserCodes.UserCodeOnlineBaseParser.GetUserCode(System.String,System.String,System.Byte[])">
            <summary>
                返回用户的识别码
            </summary>
            <param name="title">进行识别时使用的标题</param>
            <param name="desc">进行识别时使用的备注</param>
            <param name="userCodeData">需要识别使用的数据</param>
            <returns>与图形对应的识别码.</returns>
        </member>
        <member name="M:X.CommLib.Ctrl.UserCodes.UserCodeOnlineBaseParser.GetUserCodeEx(System.String,System.String,System.Byte[])">
            <summary>
                返回用户的识别码
            </summary>
            <param name="title">进行识别时使用的标题</param>
            <param name="desc">进行识别时使用的备注</param>
            <param name="userCodeData">需要识别使用的数据</param>
            <returns>与图形对应的识别码.</returns>
        </member>
        <member name="M:X.CommLib.Ctrl.UserCodes.UserCodeOnlineBaseParser.GetUserInfo">
            <summary>
                返回用户信息
            </summary>
            <returns>UserInfo.</returns>
        </member>
        <member name="M:X.CommLib.Ctrl.UserCodes.UserCodeOnlineBaseParser.VerifyUserInfo">
            <summary>
            验证用户信息，如果失败，抛出 UserVerifyFailedException 异常
            </summary>
        </member>
        <member name="M:X.CommLib.Ctrl.UserCodes.UserCodeOnlineBaseParser.ReportError(X.CommLib.Ctrl.UserCodes.UserCodeInfo)">
            <summary>
                反馈错误
            </summary>
            <param name="codeInfo">The code information.</param>
        </member>
        <member name="T:X.CommLib.Ctrl.UserCodes.UserCodeParserWrapper">
            <summary>
                一个 IUserCodeParser 包装为 IUserCodeOnlineParser 的包装器
            </summary>
        </member>
        <member name="F:X.CommLib.Ctrl.UserCodes.UserCodeParserWrapper.innerParser">
            <summary>
                内置的解析器
            </summary>
        </member>
        <member name="M:X.CommLib.Ctrl.UserCodes.UserCodeParserWrapper.#ctor(X.CommLib.Ctrl.UserCodes.IUserCodeParser)">
            <summary>
                Initializes a new instance of the <see cref="T:X.CommLib.Ctrl.UserCodes.UserCodeParserWrapper" /> class.
            </summary>
            <param name="parser">The parser.</param>
        </member>
        <member name="P:X.CommLib.Ctrl.UserCodes.UserCodeParserWrapper.CodeDataGatter">
            <summary>
                是否可以重新获取用户的识别码
            </summary>
            <value>The code data gatter.</value>
        </member>
        <member name="M:X.CommLib.Ctrl.UserCodes.UserCodeParserWrapper.GetUserCode(System.String,System.String,System.Byte[])">
            <summary>
                返回用户的识别码
            </summary>
            <param name="title">进行识别时使用的标题</param>
            <param name="desc">进行识别时使用的备注</param>
            <param name="userCodeData">需要识别使用的数据</param>
            <returns>与图形对应的识别码.</returns>
        </member>
        <member name="M:X.CommLib.Ctrl.UserCodes.UserCodeParserWrapper.GetUserCodeEx(System.String,System.String,System.Byte[])">
            <summary>
                返回用户的识别码
            </summary>
            <param name="title">进行识别时使用的标题</param>
            <param name="desc">进行识别时使用的备注</param>
            <param name="userCodeData">需要识别使用的数据</param>
            <returns>与图形对应的识别码.</returns>
        </member>
        <member name="M:X.CommLib.Ctrl.UserCodes.UserCodeParserWrapper.GetUserInfo">
            <summary>
                返回用户信息
            </summary>
            <returns>UserInfo.</returns>
        </member>
        <member name="M:X.CommLib.Ctrl.UserCodes.UserCodeParserWrapper.ReportError(X.CommLib.Ctrl.UserCodes.UserCodeInfo)">
            <summary>
                反馈错误
            </summary>
            <param name="codeInfo">The code information.</param>
        </member>
        <member name="M:X.CommLib.Ctrl.UserCodes.UserCodeParserWrapper.VerifyUserInfo">
            <summary>
                验证用户信息，如果失败，抛出 UserVerifyFailedException 异常
            </summary>
        </member>
        <member name="T:X.CommLib.Ctrl.UserCodes.UserInfo">
            <summary>
                当前有用户信息
            </summary>
        </member>
        <member name="P:X.CommLib.Ctrl.UserCodes.UserInfo.PassWord">
            <summary>
                用户密码
            </summary>
            <value>The pass word.</value>
        </member>
        <member name="P:X.CommLib.Ctrl.UserCodes.UserInfo.Score">
            <summary>
                剩余点数
            </summary>
            <value>The score.</value>
        </member>
        <member name="P:X.CommLib.Ctrl.UserCodes.UserInfo.UsedScore">
            <summary>
                使用点数
            </summary>
            <value>The used score.</value>
        </member>
        <member name="P:X.CommLib.Ctrl.UserCodes.UserInfo.UsedUserCode">
            <summary>
                使用的答题数
            </summary>
            <value>The used user code.</value>
        </member>
        <member name="P:X.CommLib.Ctrl.UserCodes.UserInfo.UserName">
            <summary>
                用户账号
            </summary>
            <value>The name of the user.</value>
        </member>
        <member name="M:X.CommLib.Ctrl.UserCodes.UserInfo.ToString">
            <summary>
                Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
        </member>
        <member name="T:X.CommLib.Ctrl.UserCodes.UserInputCodeParser">
            <summary>
                用户手工输入识别码获取器
            </summary>
        </member>
        <member name="F:X.CommLib.Ctrl.UserCodes.UserInputCodeParser.owner">
            <summary>
                父窗口
            </summary>
        </member>
        <member name="M:X.CommLib.Ctrl.UserCodes.UserInputCodeParser.#ctor(System.Windows.Forms.Form)">
            <summary>
                使用输入识别码窗口的父窗口进行初始化
                Initializes a new instance of the <see cref="T:X.CommLib.Ctrl.UserCodes.UserInputCodeParser" /> class.
            </summary>
            <param name="owner">The owner.</param>
        </member>
        <member name="P:X.CommLib.Ctrl.UserCodes.UserInputCodeParser.CodeDataGatter">
            <summary>
                是否可以重新获取用户的识别码
            </summary>
            <value>
                The code data gatter.
            </value>
        </member>
        <member name="M:X.CommLib.Ctrl.UserCodes.UserInputCodeParser.CreateUserCodeOnlineParser(System.Windows.Forms.Form)">
            <summary>
                创建一个高级识别码处理接口
            </summary>
            <param name="owner">The owner.</param>
            <returns>IUserCodeOnlineParser.</returns>
        </member>
        <member name="M:X.CommLib.Ctrl.UserCodes.UserInputCodeParser.GetUserCode(System.String,System.String,System.Byte[])">
            <summary>
                显示一个对话框及识别码，返回用户手工输入的识别码
            </summary>
            <param name="title">进行识别时使用的标题</param>
            <param name="desc">进行识别时使用的备注</param>
            <param name="userCodeData">需要识别使用的数据</param>
            <returns>与图形对应的识别码.</returns>
            <exception cref="T:System.ApplicationException">识别码输入错误</exception>
        </member>
        <member name="M:X.CommLib.Ctrl.UserCodes.UserInputCodeParser.GetOwner">
            <summary>
                返回父窗体
            </summary>
            <returns>Form.</returns>
        </member>
        <member name="T:X.CommLib.Ctrl.UserCodes.UserVerifyFailedException">
            <summary>
                用户验证失败异常
            </summary>
        </member>
        <member name="M:X.CommLib.Ctrl.UserCodes.UserVerifyFailedException.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:X.CommLib.Ctrl.UserCodes.UserVerifyFailedException" /> class.
            </summary>
        </member>
        <member name="M:X.CommLib.Ctrl.UserCodes.UserVerifyFailedException.#ctor(System.String)">
            <summary>
                Initializes a new instance of the <see cref="T:X.CommLib.Ctrl.UserCodes.UserVerifyFailedException" /> class.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:X.CommLib.Ctrl.UserCodes.UserVerifyFailedException.#ctor(System.String,System.Exception)">
            <summary>
                Initializes a new instance of the <see cref="T:X.CommLib.Ctrl.UserCodes.UserVerifyFailedException" /> class.
            </summary>
            <param name="message">The message.</param>
            <param name="inner">The inner.</param>
        </member>
        <member name="M:X.CommLib.Ctrl.UserCodes.UserVerifyFailedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
                Initializes a new instance of the <see cref="T:X.CommLib.Ctrl.UserCodes.UserVerifyFailedException" /> class.
            </summary>
            <param name="info">The information.</param>
            <param name="context">The context.</param>
        </member>
        <member name="T:X.CommLib.Ctrl.Langs.CultureHelper">
            <summary>
                文化相关辅助类
            </summary>
        </member>
        <member name="M:X.CommLib.Ctrl.Langs.CultureHelper.GetCurrentFormUICultureInfo(System.Windows.Forms.Control)">
            <summary>
                获取与当前界面线程相关的文件
            </summary>
            <param name="control">
                The control.
            </param>
            <returns>
                The <see cref="T:System.Globalization.CultureInfo" />.
            </returns>
        </member>
        <member name="M:X.CommLib.Ctrl.Langs.CultureHelper.GetCurrentThreadCultureInfo">
            <summary>
                返回当前线程的文化
            </summary>
            <returns></returns>
        </member>
        <member name="M:X.CommLib.Ctrl.Langs.CultureHelper.GetCurrentThreadUICultureInfo">
            <summary>
                返回当前线程的文件
            </summary>
            <returns></returns>
        </member>
        <member name="M:X.CommLib.Ctrl.Langs.CultureHelper.GetDefaultCulture">
            <summary>
                使用反射调用 DefaultThreadCurrentCulture
            </summary>
            <returns></returns>
        </member>
        <member name="M:X.CommLib.Ctrl.Langs.CultureHelper.GetDefaultUICulture">
            <summary>
                使用反射调用 DefaultThreadCurrentUICulture
            </summary>
        </member>
        <member name="M:X.CommLib.Ctrl.Langs.CultureHelper.SetCulture(System.Globalization.CultureInfo)">
            <summary>
                内部调用 SetDefaultCulture 及 SetDefaultUICulture
            </summary>
            <param name="cultureInfo">The culture information.</param>
        </member>
        <member name="M:X.CommLib.Ctrl.Langs.CultureHelper.SetCurrentThreadCultureInfo(System.Globalization.CultureInfo)">
            <summary>
                设置当前线程的文化
            </summary>
            <returns></returns>
        </member>
        <member name="M:X.CommLib.Ctrl.Langs.CultureHelper.SetCurrentThreadUICultureInfo(System.Globalization.CultureInfo)">
            <summary>
                设置当前线程的文化
            </summary>
            <param name="uiCultureInfo">
                The UI culture information.
            </param>
        </member>
        <member name="M:X.CommLib.Ctrl.Langs.CultureHelper.SetDefaultCulture(System.Globalization.CultureInfo)">
            <summary>
                使用反射调用 DefaultThreadCurrentCulture （整域有效）
            </summary>
            <param name="cultureInfo">The culture information.</param>
        </member>
        <member name="M:X.CommLib.Ctrl.Langs.CultureHelper.SetDefaultUICulture(System.Globalization.CultureInfo)">
            <summary>
                使用反射调用 DefaultThreadCurrentUICulture  （整域有效）
            </summary>
            <param name="cultureInfo">The culture information.</param>
        </member>
        <member name="M:X.CommLib.Ctrl.Langs.CultureHelper.Test">
            <summary>
                Tests this instance.
            </summary>
        </member>
        <member name="M:X.CommLib.Ctrl.Langs.CultureHelper.GetCultureFromType(System.String[])">
            <summary>
                使用反射获取文化属性，如果失败抛出异常
            </summary>
            <param name="fields">The fields.</param>
            <returns></returns>
        </member>
        <member name="M:X.CommLib.Ctrl.Langs.CultureHelper.OutputCultureInfo">
            <summary>
                在控制台输出当前进程的文化信息
            </summary>
        </member>
        <member name="M:X.CommLib.Ctrl.Langs.CultureHelper.SetCultureFromType(System.Globalization.CultureInfo,System.String[])">
            <summary>
                使用反射设置当前文化
            </summary>
            <param name="cultureInfo">The culture information.</param>
            <param name="fields">The fields.</param>
        </member>
        <member name="T:X.CommLib.Ctrl.Langs.LangManager">
            <summary>
                语言资源管理器
                可以载入多个层级关键的语言文件，比如载入 zh-CN.ini，如果存在父级，则会分别载入 zh-CHS.ini, zh-Hans.ini 及 zh.ini
            </summary>
        </member>
        <member name="F:X.CommLib.Ctrl.Langs.LangManager.defaultManager">
            <summary>
                默认语言资源
            </summary>
        </member>
        <member name="F:X.CommLib.Ctrl.Langs.LangManager.iniData">
            <summary>
                当前翻译语言内容
            </summary>
        </member>
        <member name="M:X.CommLib.Ctrl.Langs.LangManager.#ctor(X.CommLib.Ctrl.Langs.LangManager)">
            <summary>
            Initializes a new instance of the <see cref="T:X.CommLib.Ctrl.Langs.LangManager"/> class. 使用默认语言资源进行初始化
            </summary>
            <param name="manager">
            The default manager.
            </param>
        </member>
        <member name="P:X.CommLib.Ctrl.Langs.LangManager.Auth">
            <summary>
                返回作者
            </summary>
            <value>
                The authentication.
            </value>
        </member>
        <member name="M:X.CommLib.Ctrl.Langs.LangManager.EnumParent(System.Globalization.CultureInfo,System.Func{System.Globalization.CultureInfo,System.Boolean})">
            <summary>
            对文化进行向上枚举，直接查找函数返回 true
                如果找不到，返回 null
            </summary>
            <param name="cultureInfo">
            The culture information.
            </param>
            <param name="findCultureInfoFunc">
            The find culture information function.
            </param>
            <returns>
            The <see cref="T:System.Globalization.CultureInfo"/>.
            </returns>
        </member>
        <member name="M:X.CommLib.Ctrl.Langs.LangManager.GetCurrentFormUICultureInfo(System.Windows.Forms.Control)">
            <summary>
            返回指定界面所在线程的界面文化
            </summary>
            <param name="control">
            The control.
            </param>
            <returns>
            The <see cref="T:System.Globalization.CultureInfo"/>.
            </returns>
        </member>
        <member name="M:X.CommLib.Ctrl.Langs.LangManager.GetCurrentThreadUICultureInfo">
            <summary>
            返回当前线程的界面文化
            </summary>
            <returns>
            The <see cref="T:System.Globalization.CultureInfo"/>.
            </returns>
        </member>
        <member name="M:X.CommLib.Ctrl.Langs.LangManager.GetRecommandCultureInfo(System.Globalization.CultureInfo,System.Globalization.CultureInfo[])">
            <summary>
            从当前可选择的文化中返回与要求的文化最一致的文化
            </summary>
            <param name="cultureInfo">
            当前需要的语言包文化.
            </param>
            <param name="allCultureInfos">
            当前可选择的文化.
            </param>
            <returns>
            The <see cref="T:System.Globalization.CultureInfo"/>.
            </returns>
        </member>
        <member name="M:X.CommLib.Ctrl.Langs.LangManager.GetTopParent(System.Globalization.CultureInfo)">
            <summary>
            返回指定文化的父文化
            </summary>
            <param name="cultureInfo">
            The culture information.
            </param>
            <returns>
            The <see cref="T:System.Globalization.CultureInfo"/>.
            </returns>
        </member>
        <member name="M:X.CommLib.Ctrl.Langs.LangManager.HasParent(System.Globalization.CultureInfo,System.String)">
            <summary>
            判断一个文化是否有指定的父级名称
                会先对自身进行判断
            </summary>
            <param name="cultureInfo">
            The culture information.
            </param>
            <param name="parentName">
            Name of the parent.
            </param>
            <returns>
            The <see cref="T:System.Boolean"/>.
            </returns>
        </member>
        <member name="M:X.CommLib.Ctrl.Langs.LangManager.HasParentId(System.Globalization.CultureInfo,System.Int32)">
            <summary>
            判断指定的文化是否有指定语言id的父级
            </summary>
            <param name="cultureInfo">
            The culture information.
            </param>
            <param name="langId">
            The language identifier.
            </param>
            <returns>
            The <see cref="T:System.Boolean"/>.
            </returns>
        </member>
        <member name="M:X.CommLib.Ctrl.Langs.LangManager.LoadCurrentLangManager(X.CommLib.Ctrl.Langs.LangManager,System.String)">
            <summary>
            返回当前的语言包
                当前文化使用 CultureInfo.CurrentUICulture 获取
            </summary>
            <param name="defaultManager">
            The default manager.
            </param>
            <param name="langDirecotry">
            The language direcotry.
            </param>
            <returns>
            The <see cref="T:X.CommLib.Ctrl.Langs.LangManager"/>.
            </returns>
        </member>
        <member name="M:X.CommLib.Ctrl.Langs.LangManager.LoadLangCultureInfos(System.String)">
            <summary>
            载入当前支持的语言文件
            </summary>
            <param name="langDirectory">
            The language directory.
            </param>
            <returns>
            The <see cref="!:CultureInfo[]"/>.
            </returns>
        </member>
        <member name="M:X.CommLib.Ctrl.Langs.LangManager.LoadLangManager(System.Globalization.CultureInfo,X.CommLib.Ctrl.Langs.LangManager,System.String)">
            <summary>
            载入指定语言的语言包
                优先载入地址相关性的语言包，如果没有，则载入无地址属性的语言包
            </summary>
            <param name="cultureInfo">
            The culture information.
            </param>
            <param name="defaultManager">
            The default manager.
            </param>
            <param name="langDirecotry">
            The language direcotry.
            </param>
            <returns>
            The <see cref="T:X.CommLib.Ctrl.Langs.LangManager"/>.
            </returns>
        </member>
        <member name="M:X.CommLib.Ctrl.Langs.LangManager.LoadLangManager(System.String,X.CommLib.Ctrl.Langs.LangManager,System.String)">
            <summary>
            载入指定语言的语言包
            </summary>
            <param name="langFileName">
            Name of the language file.
            </param>
            <param name="defaultManager">
            The default manager.
            </param>
            <param name="langDirecotry">
            The language direcotry.
            </param>
            <returns>
            The <see cref="T:X.CommLib.Ctrl.Langs.LangManager"/>.
            </returns>
            <exception cref="T:System.IO.FileNotFoundException">
            语言文件不存在
            </exception>
        </member>
        <member name="M:X.CommLib.Ctrl.Langs.LangManager.SetCurrentThreadUICultureInfo(System.Globalization.CultureInfo)">
            <summary>
            设置当前线程的界面文化
            </summary>
            <param name="uiCultureInfo">
            The UI culture information.
            </param>
        </member>
        <member name="M:X.CommLib.Ctrl.Langs.LangManager.GetString(System.String)">
            <summary>
            返回指定 id 的字符串
            </summary>
            <param name="key">
            The key.
            </param>
            <returns>
            The <see cref="T:System.String"/>.
            </returns>
        </member>
        <member name="M:X.CommLib.Ctrl.Langs.LangManager.LoadLangFile(System.String,System.Text.Encoding)">
            <summary>
            Loads the language file.
            </summary>
            <param name="filePath">
            The file path.
            </param>
            <param name="encoding">
            The encoding.
            </param>
            <exception cref="T:System.IO.FileNotFoundException">
            语言文件不存在
            </exception>
        </member>
        <member name="M:X.CommLib.Ctrl.Langs.LangManager.LoadLangStream(System.IO.StreamReader)">
            <summary>
            从流中载入语言配置 .
            </summary>
            <param name="streamReader">
            The stream reader.
            </param>
        </member>
        <member name="M:X.CommLib.Ctrl.Langs.LangManager.LoadLangString(System.String)">
            <summary>
            从字符串中解析出语言配置
            </summary>
            <param name="iniString">
            The ini string.
            </param>
        </member>
        <member name="M:X.CommLib.Ctrl.Langs.LangManager.Test">
            <summary>
                Tests this instance.
            </summary>
        </member>
        <member name="M:X.CommLib.Ctrl.Langs.LangManager.GetLangDirecotry(System.String)">
            <summary>
            返回当前语言文件的目录
            </summary>
            <param name="langDirecotry">
            The language direcotry.
            </param>
            <returns>
            The <see cref="T:System.String"/>.
            </returns>
        </member>
        <member name="M:X.CommLib.Ctrl.Langs.LangManager.GetLangFilePath(System.String,System.String)">
            <summary>
            返回指定目录及语言的语言包路径
            </summary>
            <param name="langDirecotry">
            The language direcotry.
            </param>
            <param name="langFileName">
            Name of the language file.
            </param>
            <returns>
            The <see cref="T:System.String"/>.
            </returns>
        </member>
        <member name="M:X.CommLib.Ctrl.Langs.LangManager.FormatStringValue(System.String)">
            <summary>
            对字符进行格式化，主要是对回车换行字符进行处理
            </summary>
            <param name="value">
            The value.
            </param>
            <returns>
            The <see cref="T:System.String"/>.
            </returns>
        </member>
        <member name="M:X.CommLib.Ctrl.Langs.LangManager.GetDataValue(System.String,System.String,System.String)">
            <summary>
            The get data value.
            </summary>
            <param name="section">
            The section.
            </param>
            <param name="key">
            The key.
            </param>
            <param name="defaultValue">
            The default value.
            </param>
            <returns>
            The <see cref="T:System.String"/>.
            </returns>
        </member>
        <member name="M:X.CommLib.Ctrl.Langs.LangManager.GetOption(System.String,System.String)">
            <summary>
            返回某个指定的属性值
            </summary>
            <param name="key">
            The key.
            </param>
            <param name="defaultValue">
            The default value.
            </param>
            <returns>
            The <see cref="T:System.String"/>.
            </returns>
        </member>
        <member name="T:X.CommLib.IO.DirectoryHelper">
            <summary>
                路径辅助工具
            </summary>
        </member>
        <member name="M:X.CommLib.IO.DirectoryHelper.CreateDirectoryFromFilePath(System.String,System.Security.AccessControl.DirectorySecurity)">
            <summary>
                指定一个文件路径，创建该文件所在的目录
            </summary>
            <param name="path">The path.</param>
            <param name="directorySecurity">要应用于此目录的访问控制.</param>
            <returns></returns>
        </member>
        <member name="M:X.CommLib.IO.DirectoryHelper.CreateDirectoryFromFilePath(System.String)">
            <summary>
                指定一个文件路径，创建该文件所在的目录
            </summary>
            <param name="path">The path.</param>
            <returns></returns>
        </member>
        <member name="M:X.CommLib.IO.DirectoryHelper.IsEmpty(System.String)">
            <summary>
                某个目录是否是空的
            </summary>
            <param name="path">The path.</param>
            <returns></returns>
        </member>
        <member name="M:X.CommLib.IO.DirectoryHelper.CleanLastPathSeparator(System.String)">
            <summary>
            清理路径最后的分隔符
            </summary>
            <param name="path">The path.</param>
            <returns></returns>
        </member>
        <member name="M:X.CommLib.IO.DirectoryHelper.IsSameFile(System.String,System.String)">
            <summary>
                是否是相同的文件
            </summary>
            <param name="path1">The path1.</param>
            <param name="path2">The path2.</param>
            <returns></returns>
        </member>
        <member name="T:X.CommLib.IO.HashCodeCreater">
            <summary>
                哈希值获取器
                默认使用 MD5 创建器
            </summary>
        </member>
        <member name="M:X.CommLib.IO.HashCodeCreater.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:X.CommLib.IO.HashCodeCreater" /> class.
            </summary>
        </member>
        <member name="M:X.CommLib.IO.HashCodeCreater.#ctor(System.Security.Cryptography.HashAlgorithm)">
            <summary>Initializes a new instance of the <see cref="T:X.CommLib.IO.HashCodeCreater" /> class.</summary>
            <param name="hashAlgorithm">The hash algorithm.</param>
        </member>
        <member name="M:X.CommLib.IO.HashCodeCreater.Finalize">
            <summary>
                Finalizes an instance of the <see cref="T:X.CommLib.IO.HashCodeCreater" /> class.
                析构函数自动生成 Finalize 方法和对基类的 Finalize 方法的调用.默认情况下,一个类是没有析构函数的,也就是说,对象被垃圾回收时不会被调用Finalize方法
            </summary>
        </member>
        <member name="P:X.CommLib.IO.HashCodeCreater.Algorithm">
            <summary>
                当前使用的哈希值创建器
            </summary>
            <value>
                The algorithm.
            </value>
        </member>
        <member name="P:X.CommLib.IO.HashCodeCreater.AutoCloseHashAlgorithm">
            <summary>
                是否关闭创建器
            </summary>
            <value>
                <c>true</c> if [automatic close hash algorithm]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:X.CommLib.IO.HashCodeCreater.GetHashcode(System.String,System.Security.Cryptography.HashAlgorithm)">
            <summary>获取一个文件的 hash 值</summary>
            <param name="localPath">The local path.</param>
            <param name="hashAlgorithm">The hash algorithm.</param>
            <returns></returns>
        </member>
        <member name="M:X.CommLib.IO.HashCodeCreater.GetHashcode(System.IO.Stream,System.Security.Cryptography.HashAlgorithm)">
            <summary>获取一个流的 hash 值</summary>
            <param name="stream">The stream.</param>
            <param name="hashAlgorithm">The hash algorithm.</param>
            <returns></returns>
        </member>
        <member name="M:X.CommLib.IO.HashCodeCreater.GetHashcode(System.Byte[],System.Security.Cryptography.HashAlgorithm)">
            <summary>Gets the hashcode.</summary>
            <param name="source">The source.</param>
            <param name="hashAlgorithm">The hash algorithm.</param>
            <returns></returns>
        </member>
        <member name="M:X.CommLib.IO.HashCodeCreater.GetHashCodeString(System.Byte[])">
            <summary>
            将 hashcode 转为字符串进行保存
            </summary>
            <param name="hashCode">The hash code.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:X.CommLib.IO.HashCodeCreater.IsSameHashCode(System.Byte[],System.Byte[])">
            <summary>两个哈希值是否是一样的</summary>
            <param name="hashCode1">The hash code1.</param>
            <param name="hashCode2">The hash code2.</param>
            <returns></returns>
        </member>
        <member name="M:X.CommLib.IO.HashCodeCreater.Dispose">
            <summary>
                可以被客户直接调用
            </summary>
        </member>
        <member name="M:X.CommLib.IO.HashCodeCreater.GetHashCode(System.String)">
            <summary>获取某个文件的哈希值</summary>
            <param name="filePath">The file path.</param>
            <returns></returns>
        </member>
        <member name="M:X.CommLib.IO.HashCodeCreater.GetHashCode(System.IO.Stream)">
            <summary>对一个流创建哈希值</summary>
            <param name="stream">The stream.</param>
            <returns></returns>
        </member>
        <member name="M:X.CommLib.IO.HashCodeCreater.GetHashCode(System.Byte[])">
            <summary>获取哈希值</summary>
            <param name="source">The source.</param>
            <returns></returns>
        </member>
        <member name="M:X.CommLib.IO.HashCodeCreater.Dispose(System.Boolean)">
            <summary>
                无法被客户直接调用
                如果 disposing 是 true, 那么这个方法是被客户直接调用的,那么托管的,和非托管的资源都可以释放
                如果 disposing 是 false, 那么函数是从垃圾回收器在调用Finalize时调用的,此时不应当引用其他托管对象所以,只能释放非托管资源
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="T:X.CommLib.Logs.IWorkLoggingInterface">
            <summary>
                实现了工作日志发送接口
            </summary>
        </member>
        <member name="E:X.CommLib.Logs.IWorkLoggingInterface.OnLogginEvent">
            <summary>
                日志事件
            </summary>
        </member>
        <member name="T:X.CommLib.Logs.Log">
            <summary>
              一个日志， 从日志文件中解析出来表示一行对象
            </summary>
        </member>
        <member name="T:X.CommLib.Logs.Log.LogType">
            <summary>
              日志类型
            </summary>
        </member>
        <member name="F:X.CommLib.Logs.Log.LogType.Info">
            <summary>
              一般日志
            </summary>
        </member>
        <member name="F:X.CommLib.Logs.Log.LogType.Error">
            <summary>
              错误日志
            </summary>
        </member>
        <member name="F:X.CommLib.Logs.Log.LogType.Debug">
            <summary>
              调试日志
            </summary>
        </member>
        <member name="F:X.CommLib.Logs.Log.LogType.Warn">
            <summary>
              警告日志
            </summary>
        </member>
        <member name="F:X.CommLib.Logs.Log.LogType.Fatal">
            <summary>
              致命错误
            </summary>
        </member>
        <member name="P:X.CommLib.Logs.Log.Date">
            <summary>
              日志日期
            </summary>
            <value> The date. </value>
        </member>
        <member name="P:X.CommLib.Logs.Log.Message">
            <summary>
              日志内容
            </summary>
            <value> The message. </value>
        </member>
        <member name="P:X.CommLib.Logs.Log.Thread">
            <summary>
              线程id值
            </summary>
            <value> The thread. </value>
        </member>
        <member name="P:X.CommLib.Logs.Log.Type">
            <summary>
              日志类型
            </summary>
        </member>
        <member name="P:X.CommLib.Logs.Log.Writer">
            <summary>
              日志写入器
            </summary>
            <value> The writer. </value>
        </member>
        <member name="M:X.CommLib.Logs.Log.ParseLogType(System.String)">
            <summary>
              解析日志类型
            </summary>
            <param name="value"> The value. </param>
            <returns> </returns>
        </member>
        <member name="M:X.CommLib.Logs.Log.AttachMessage(System.String)">
            <summary>
              附加消息内容
            </summary>
            <param name="msg"> The MSG. </param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:X.CommLib.Logs.Log.ToString">
            <summary>
              Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns> A <see cref="T:System.String" /> that represents this instance. </returns>
        </member>
        <member name="T:X.CommLib.Logs.LogHelper">
            <summary>
                日志管理器
            </summary>
        </member>
        <member name="T:X.CommLib.Logs.LogHelper.ProcessUnknowErrorFuncHandler">
            <summary>
                处理未知异常的函数定义
            </summary>
            <param name="title"> 异常的标题 </param>
            <param name="sender"> 异常的发送者 </param>
            <param name="msg"> 异常的描述 </param>
            <param name="error"> 可能包括的异常信息 </param>
        </member>
        <member name="T:X.CommLib.Logs.LogHelper.LogWriteFunc">
            <summary>
                写入日志回调函数
            </summary>
            <param name="message"> The message. </param>
            <param name="error"> The error. </param>
        </member>
        <member name="M:X.CommLib.Logs.LogHelper.ConfigureDefaultLog4Net(System.String,System.String,System.Boolean)">
            <summary>
                使用默认的log4net配置进行工作
                配置中的日志路径由参数决定
            </summary>
            <param name="logDirctory">日志的目录.</param>
            <param name="logFile">日志的文件名（不带后缀）.</param>
            <param name="enableConsoleLog">是否启用控制台日志输出功能.</param>
            <returns>返回配置</returns>
        </member>
        <member name="M:X.CommLib.Logs.LogHelper.ConfigureLog4Net(System.String)">
            <summary>
                使 log4net 基于新的配置文件进行工作
            </summary>
            <param name="config">
                The configuration.
            </param>
            <returns>
                The <see cref="T:System.Collections.ICollection" />.
            </returns>
        </member>
        <member name="M:X.CommLib.Logs.LogHelper.ConfigureLog4Net(System.Type,System.String)">
            <summary>
                使 log4net 基于程序集内嵌资源中的配置进行工作
            </summary>
            <param name="type">
                内嵌的配置文件的同路径类型.
            </param>
            <param name="fileName">
                内嵌入的配置文件的名称.
            </param>
            <returns>
                ICollection.
            </returns>
            <exception cref="T:System.IO.FileNotFoundException">
                找不到配置文件
            </exception>
        </member>
        <member name="M:X.CommLib.Logs.LogHelper.DeleteLogFiles(System.String,System.Int32)">
            <summary>
                删除指定目录下的日志文件
                日志文件按日期排序，保存最新的 n个日志文件
            </summary>
            <param name="directory">
                The directory.
            </param>
            <param name="keepFileNumber">
                保留多少条日志文件.
            </param>
            <returns>
                删除了多少日志文件
            </returns>
        </member>
        <member name="M:X.CommLib.Logs.LogHelper.GetLogFormatString(System.Object,System.String,System.Exception)">
            <summary>
                返回一个格式化过的错误内容描述
            </summary>
            <param name="sender">The sender.</param>
            <param name="message">The message.</param>
            <param name="exception">The exception.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:X.CommLib.Logs.LogHelper.GetRollingFileAppenderFilePath">
            <summary>
                返回当前Log4Net中配置为log4net.Appender.RollingFileAppender的日志文件的路径
            </summary>
            <returns> 如果没有找到返回null </returns>
        </member>
        <member name="M:X.CommLib.Logs.LogHelper.OutputLog(System.Object,System.String,System.Exception)">
            <summary>
                在控制台输出日志信息
            </summary>
            <param name="sender">The sender.</param>
            <param name="message">The message.</param>
            <param name="exception">The exception.</param>
        </member>
        <member name="M:X.CommLib.Logs.LogHelper.OutputLog(System.Object,X.CommLib.Threader.LoggingEventArgs)">
            <summary>
                在控制台输出日志信息
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:X.CommLib.Threader.LoggingEventArgs" /> instance containing the event data.</param>
        </member>
        <member name="M:X.CommLib.Logs.LogHelper.ParseLogDateTime(System.String)">
            <summary>
                解析出日志的日志，如果失败返回 null
            </summary>
            <param name="logPath">
                The log path.
            </param>
            <returns>
                System.Nullable&lt;DateTime&gt;.
            </returns>
        </member>
        <member name="M:X.CommLib.Logs.LogHelper.ProcessUnknowError(log4net.ILog)">
            <summary>
                绑定记录当前域中的未处理异常 当发生错误时，将Error记录到指定ILog中，如果 ILog为空，则自动创建一个进行保存
            </summary>
            <param name="log">
                The log.
            </param>
        </member>
        <member name="M:X.CommLib.Logs.LogHelper.ProcessUnknowError(X.CommLib.Logs.LogHelper.ProcessUnknowErrorFuncHandler)">
            <summary>
                绑定记录当前域中的未处理异常
            </summary>
            <param name="func">
                The func.
            </param>
        </member>
        <member name="M:X.CommLib.Logs.LogHelper.RecodeAppInfo(log4net.ILog)">
            <summary>
                记录当前程序的信息
            </summary>
            <param name="log">
                The log.
            </param>
        </member>
        <member name="M:X.CommLib.Logs.LogHelper.RecodeSystemInfo(log4net.ILog)">
            <summary>
                将系统信息写入到日志系统中
            </summary>
            <param name="log">
                The log.
            </param>
        </member>
        <member name="M:X.CommLib.Logs.LogHelper.RecodeUnknowError(log4net.ILog)">
            <summary>
                ProcessUnknowError(ILog log = null) 的同名函数
            </summary>
            <param name="log">
                The log.
            </param>
        </member>
        <member name="M:X.CommLib.Logs.LogHelper.RecodeUnknowError(System.String,System.Object,System.String,System.Exception,log4net.ILog)">
            <summary>
                记录未处理的异常
            </summary>
            <param name="title">
                异常的标题
            </param>
            <param name="sender">
                异常的发送者
            </param>
            <param name="msg">
                异常的描述
            </param>
            <param name="error">
                异常的内容
            </param>
            <param name="log">
                日志写入器，如果为空，则自动创建一个
            </param>
        </member>
        <member name="M:X.CommLib.Logs.LogHelper.SetLogPath(System.String,System.String)">
            <summary>
                设置Log4Net日志的路径 使用指定的字符替代日志路径中的指定部分
                并且启动日志记录功能
            </summary>
            <param name="logFilePart">
                The log file part.
            </param>
            <param name="pathPropertiyName">
                Name of the path propertiy.
            </param>
        </member>
        <member name="M:X.CommLib.Logs.LogHelper.StartLogSystem(System.String,System.String,System.Type,System.Boolean)">
            <summary>
            启动日志系统
            启用后记录未处理异常，系统及应用的信息
            </summary>
            <param name="logPath">日志的目录.</param>
            <param name="logFile">日志的文件名.</param>
            <param name="logWriterType">启动记录系统及应用信息的记录器的类型(生成 ilog 用的).</param>
            <param name="enableConsoleLog">The enable console log.</param>
        </member>
        <member name="M:X.CommLib.Logs.LogHelper.WriteLog(System.Object,System.String,System.Exception)">
            <summary>
                写入日志
            </summary>
            <param name="sender">
                日志发送者，使用该发送者身份写入日志，如果为 null，则为LogHelper.
            </param>
            <param name="message">
                The message.
            </param>
            <param name="exception">
                The exception.
            </param>
        </member>
        <member name="M:X.CommLib.Logs.LogHelper.WriteLog(log4net.ILog,System.String,System.Exception)">
            <summary>
                写入日志
            </summary>
            <param name="logWriter">
                The log writer.
            </param>
            <param name="message">
                The message.
            </param>
            <param name="exception">
                The exception.
            </param>
        </member>
        <member name="M:X.CommLib.Logs.LogHelper.WriteLog(System.Object,X.CommLib.Threader.LoggingEventArgs[])">
            <summary>
                写入一段日志
            </summary>
            <param name="logWriter">
                The log writer.
            </param>
            <param name="logs">
                The logs.
            </param>
        </member>
        <member name="M:X.CommLib.Logs.LogHelper.WriteLog(log4net.ILog,X.CommLib.Threader.LoggingEventArgs[])">
            <summary>
                写入日志
            </summary>
            <param name="logWriter">
                日志写入器.
            </param>
            <param name="logs">
                需要写入的日志内容.
            </param>
        </member>
        <member name="M:X.CommLib.Logs.LogHelper.TestMultiLanguage">
            <summary>
                多语言测试
            </summary>
        </member>
        <member name="M:X.CommLib.Logs.LogHelper.GetDefaultLogWriter">
            <summary>
                返回一个默认的日志写入器
            </summary>
            <returns>
                The <see cref="T:log4net.ILog" />.
            </returns>
        </member>
        <member name="M:X.CommLib.Logs.LogHelper.GetWriterName(System.Object)">
            <summary>
                返回 writer type .号的最后一段字符表示.如果不存在，返回null
            </summary>
            <param name="writer">The sender.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:X.CommLib.Logs.LogHelper.ProcessUnknowError(System.String,System.Object,System.Object,X.CommLib.Logs.LogHelper.ProcessUnknowErrorFuncHandler)">
            <summary>
                记录未处理的异常
            </summary>
            <param name="title">
                异常的标题
            </param>
            <param name="sender">
                异常的发送者
            </param>
            <param name="error">
                异常的内容
            </param>
            <param name="func">
                当异常信息格式化完成后的处理函数定义
            </param>
        </member>
        <member name="M:X.CommLib.Logs.LogHelper.RemoveConsoleConfig(System.String)">
            <summary>
                去掉控制台相关的配置
            </summary>
            <param name="logConfig">The log configuration.</param>
            <returns>System.String.</returns>
        </member>
        <member name="T:X.CommLib.Logs.LogParser">
            <summary>
              日志解析器，这是我常用的log4net日志解析器
            </summary>
        </member>
        <member name="F:X.CommLib.Logs.LogParser.LogRegexObj">
            <summary>
              日志解析器
            </summary>
        </member>
        <member name="F:X.CommLib.Logs.LogParser._lines">
            <summary>
              日志内容
            </summary>
        </member>
        <member name="F:X.CommLib.Logs.LogParser._linePostion">
            <summary>
              当前的读取器
            </summary>
        </member>
        <member name="M:X.CommLib.Logs.LogParser.#ctor(System.String,System.Text.Encoding)">
            <summary>
              Initializes a new instance of the <see cref="T:X.CommLib.Logs.LogParser" /> class.
              使用指定的日志文件进行初始化
            </summary>
            <param name="logPath"> The log path. </param>
            <param name="encoding"> The encoding. </param>
        </member>
        <member name="M:X.CommLib.Logs.LogParser.GetEnumerator">
            <summary>
              Gets the enumerator.
            </summary>
            <returns> </returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:X.CommLib.Logs.LogParser.Dispose">
            <summary>
              可以被客户直接调用
            </summary>
        </member>
        <member name="M:X.CommLib.Logs.LogParser.MoveNext">
            <summary>
              返回下一行数据
            </summary>
            <returns> </returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:X.CommLib.Logs.LogParser.Reset">
            <summary>
              Resets this instance.
            </summary>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="P:X.CommLib.Logs.LogParser.Current">
            <summary>
              返回当前行数据
            </summary>
            <value> The current. </value>
        </member>
        <member name="P:X.CommLib.Logs.LogParser.System#Collections#IEnumerator#Current">
            <summary>
              Gets the current.
            </summary>
            <value> The current. </value>
        </member>
        <member name="M:X.CommLib.Logs.LogParser.Test">
            <summary>
              内部测试
            </summary>
        </member>
        <member name="M:X.CommLib.Logs.LogParser.ReadAllLogs(System.String,System.Text.Encoding)">
            <summary>
              读取一个日志文件中的所有日志内容
            </summary>
            <param name="logPath"> 日志文件的路径 </param>
            <param name="encoding"> 日志文件的编码 </param>
            <returns> </returns>
        </member>
        <member name="M:X.CommLib.Logs.LogParser.ReadNextLog">
            <summary>
              解析下一行日志，如果没有日志只可以被解析，则返回null
            </summary>
            <returns> </returns>
        </member>
        <member name="M:X.CommLib.Logs.LogParser.ReadLine">
            <summary>
              读取一行数据，如果没有数据可读返回null;
            </summary>
            <returns> </returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:X.CommLib.Logs.LogParser.CreateLog(System.String)">
            <summary>
              创建日志对象
            </summary>
            <param name="line"> The line. </param>
            <returns> </returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:X.CommLib.Logs.LogParser.ReadMoreMessage">
            <summary>
              从文件中读取消息内容，如果无返回null
            </summary>
            <returns> </returns>
        </member>
        <member name="M:X.CommLib.Logs.LogParser.IsLogLine(System.String)">
            <summary>
              检测该行是否是日志
            </summary>
            <param name="line"> The line. </param>
            <returns> <c>true</c> if the specified line is log; otherwise, <c>false</c> . </returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:X.CommLib.Logs.LogParser.GetFileEncoding(System.String,System.Text.Encoding)">
            <summary>
              返回文件对应的编码
            </summary>
            <param name="logPath"> 如果默认编码为null，则使用该文件所使用的编码 </param>
            <param name="encoding"> 文件默认编码，如果不为null直接返回该编码， </param>
            <returns> </returns>
        </member>
        <member name="M:X.CommLib.Logs.LogParser.Finalize">
            <summary>
              析构函数自动生成 Finalize 方法和对基类的 Finalize 方法的调用.默认情况下,一个类是没有析构函数的,也就是说,对象被垃圾回收时不会被调用Finalize方法
            </summary>
        </member>
        <member name="M:X.CommLib.Logs.LogParser.Close">
            <summary>
              Dispose 的另一种表达
            </summary>
        </member>
        <member name="M:X.CommLib.Logs.LogParser.Dispose(System.Boolean)">
            <summary>
              无法被客户直接调用 
              如果 disposing 是 true, 那么这个方法是被客户直接调用的,那么托管的,和非托管的资源都可以释放 
              如果 disposing 是 false, 那么函数是从垃圾回收器在调用Finalize时调用的,此时不应当引用其他托管对象所以,只能释放非托管资源
            </summary>
            <param name="disposing"> </param>
        </member>
        <member name="T:X.CommLib.Logs.NormalLogginger">
            <summary>
              一个通用的日志信息发送辅助类
            </summary>
        </member>
        <member name="M:X.CommLib.Logs.NormalLogginger.PostLoggingMessage(X.CommLib.Threader.LoggingEventHandler,System.Object,X.CommLib.Threader.LoggingType,System.String,System.Exception)">
            <summary>
              发送日志辅助方法
            </summary>
            <param name="eventHandler"> </param>
            <param name="sender"> </param>
            <param name="loggingType"> </param>
            <param name="msg"> </param>
            <param name="error"> </param>
        </member>
        <member name="M:X.CommLib.Logs.NormalLogginger.PostLoggingMessage(X.CommLib.Threader.LoggingEventHandler,System.Object,System.String,System.Exception)">
            <summary>
              发送日志辅助方法
            </summary>
            <param name="eventHandler"> </param>
            <param name="sender"> </param>
            <param name="msg"> </param>
            <param name="error"> </param>
        </member>
        <member name="M:X.CommLib.Logs.NormalLogginger.PostLoggingMessage(X.CommLib.Threader.LoggingEventHandler,System.Object,X.CommLib.Threader.LoggingEventArgs)">
            <summary>
              发送日志辅助方法
            </summary>
            <param name="eventHandler"> </param>
            <param name="sender"> </param>
            <param name="e"> </param>
        </member>
        <member name="T:X.CommLib.Logs.NormalLogginger.PostLoggingMessageFunc">
            <summary>
            日志记录器函数对象
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:X.CommLib.Threader.LoggingEventArgs" /> instance containing the event data.</param>
        </member>
        <member name="T:X.CommLib.Logs.NormalLogginger.LoggingMessaegCallBack">
            <summary>
            日志记录回调函数
            </summary>
            <param name="message">The message.</param>
            <param name="error">The error.</param>
        </member>
        <member name="M:X.CommLib.Logs.NormalLogginger.ForwardLoggingMessaegCallBackEvent(System.String,System.Exception)">
            <summary>
            转发日志记录回调函数中的日志责任制
            </summary>
            <param name="message">The message.</param>
            <param name="error">The error.</param>
        </member>
        <member name="E:X.CommLib.Logs.NormalLogginger.OnLogginEvent">
            <summary>
              日志发送组件
            </summary>
        </member>
        <member name="M:X.CommLib.Logs.NormalLogginger.PostLoggingMessage(System.Object,X.CommLib.Threader.LoggingEventArgs)">
            <summary>
              使用其它发送者身份发送日志消息
            </summary>
            <param name="sender"> 发送者 </param>
            <param name="e"> </param>
        </member>
        <member name="M:X.CommLib.Logs.NormalLogginger.PostLoggingMessage(X.CommLib.Threader.LoggingEventArgs)">
            <summary>
              发送日志消息
            </summary>
            <param name="e"> </param>
        </member>
        <member name="M:X.CommLib.Logs.NormalLogginger.PostLoggingMessage(System.String,System.Exception)">
            <summary>
              发送日志消息
            </summary>
            <param name="message"> </param>
            <param name="error"> </param>
        </member>
        <member name="M:X.CommLib.Logs.NormalLogginger.PostLoggingMessage(X.CommLib.Threader.LoggingType,System.String,System.Exception)">
            <summary>
              发送日志事件
            </summary>
            <param name="loggingType"> </param>
            <param name="message"> </param>
            <param name="error"> </param>
        </member>
        <member name="T:X.CommLib.Miscellaneous.AppInfoControl">
            <summary>
              程序信息界面（关于界面）
            </summary>
        </member>
        <member name="F:X.CommLib.Miscellaneous.AppInfoControl._appInfo">
            <summary>
              程序信息
            </summary>
        </member>
        <member name="M:X.CommLib.Miscellaneous.AppInfoControl.#ctor(X.CommLib.Miscellaneous.ProductAppInfo)">
            <summary>
              Initializes a new instance of the <see cref="T:X.CommLib.Miscellaneous.AppInfoControl" /> class.
            </summary>
        </member>
        <member name="M:X.CommLib.Miscellaneous.AppInfoControl.AppInfoControl_Load(System.Object,System.EventArgs)">
            <summary>
              界面初始化
            </summary>
            <param name="sender"> The source of the event. </param>
            <param name="e"> The <see cref="T:System.EventArgs" /> instance containing the event data. </param>
        </member>
        <member name="F:X.CommLib.Miscellaneous.AppInfoControl.components">
            <summary> 
            必需的设计器变量。
            </summary>
        </member>
        <member name="M:X.CommLib.Miscellaneous.AppInfoControl.Dispose(System.Boolean)">
            <summary> 
            清理所有正在使用的资源。
            </summary>
            <param name="disposing">如果应释放托管资源，为 true；否则为 false。</param>
        </member>
        <member name="M:X.CommLib.Miscellaneous.AppInfoControl.InitializeComponent">
            <summary> 
            设计器支持所需的方法 - 不要
            使用代码编辑器修改此方法的内容。
            </summary>
        </member>
        <member name="T:X.CommLib.Miscellaneous.EnumDescription`1">
            <summary>
                对象描述器, ToString 为枚举值的描述
            </summary>
            <typeparam name="T">
                枚举值类型
            </typeparam>
        </member>
        <member name="M:X.CommLib.Miscellaneous.EnumDescription`1.#ctor(`0)">
            <summary>
                Initializes a new instance of the <see cref="T:X.CommLib.Miscellaneous.EnumDescription`1" /> class.
            </summary>
            <param name="enumValue">
                The enum value.
            </param>
        </member>
        <member name="P:X.CommLib.Miscellaneous.EnumDescription`1.DisplayName">
            <summary>
                返回显示名
            </summary>
            <value>The display name.</value>
        </member>
        <member name="P:X.CommLib.Miscellaneous.EnumDescription`1.EnumValue">
            <summary>
                Gets or sets the enum value.
            </summary>
            <value>
                The enum value.
            </value>
        </member>
        <member name="M:X.CommLib.Miscellaneous.EnumDescription`1.GetDescriptions(`0)">
            <summary>
                返回枚举值的描述
            </summary>
            <param name="enumValue">
                The enum value.
            </param>
            <returns>
                The <see cref="T:System.String" />.
            </returns>
        </member>
        <member name="M:X.CommLib.Miscellaneous.EnumDescription`1.ToString">
            <summary>
                Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
                A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="T:X.CommLib.Miscellaneous.EnumExtensionsTester">
            <summary>
                EnumExtensions测试器
            </summary>
        </member>
        <member name="M:X.CommLib.Miscellaneous.EnumExtensionsTester.Test">
            <summary>
                测试
            </summary>
        </member>
        <member name="T:X.CommLib.Miscellaneous.EnumExtensionsTester.TestNum">
            <summary>
                测试使用枚举值
            </summary>
        </member>
        <member name="F:X.CommLib.Miscellaneous.EnumExtensionsTester.TestNum.Aaa">
            <summary>
                1
            </summary>
        </member>
        <member name="F:X.CommLib.Miscellaneous.EnumExtensionsTester.TestNum.Bbb">
            <summary>
                2
            </summary>
        </member>
        <member name="F:X.CommLib.Miscellaneous.EnumExtensionsTester.TestNum.Ccc">
            <summary>
                4
            </summary>
        </member>
        <member name="F:X.CommLib.Miscellaneous.EnumExtensionsTester.TestNum.Ddd">
            <summary>
                8
            </summary>
        </member>
        <member name="F:X.CommLib.Miscellaneous.EnumExtensionsTester.TestNum.Eee">
            <summary>
                16
            </summary>
        </member>
        <member name="F:X.CommLib.Miscellaneous.EnumExtensionsTester.TestNum.Fff">
            <summary>
                32
            </summary>
        </member>
        <member name="T:X.CommLib.Miscellaneous.EnumExtensions`1">
            <summary>枚举辅助函数</summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="P:X.CommLib.Miscellaneous.EnumExtensions`1.EnumValue">
            <summary>
                当前操作的枚举值
            </summary>
            <value>
                The value.
            </value>
        </member>
        <member name="M:X.CommLib.Miscellaneous.EnumExtensions`1.#ctor(System.String)">
            <summary>Initializes a new instance of the <see cref="T:X.CommLib.Miscellaneous.EnumExtensions`1" /> class.</summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:X.CommLib.Miscellaneous.EnumExtensions`1.#ctor(`0[])">
            <summary>
                Initializes a new instance of the <see cref="T:X.CommLib.Miscellaneous.EnumExtensions`1" /> class. Initializes a new instance of the
                <see cref="T:X.CommLib.Miscellaneous.EnumExtensions`1" /> class.
            </summary>
            <param name="values">The value.</param>
        </member>
        <member name="M:X.CommLib.Miscellaneous.EnumExtensions`1.Combin(`0[])">
            <summary>合并值</summary>
            <param name="values">The values.</param>
            <returns></returns>
        </member>
        <member name="M:X.CommLib.Miscellaneous.EnumExtensions`1.GetDescriptions">
            <summary>
                返回带描述符的枚举对象
            </summary>
            <returns></returns>
        </member>
        <member name="M:X.CommLib.Miscellaneous.EnumExtensions`1.GetDescription(`0)">
            <summary>
                返回枚举值的描述
            </summary>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:X.CommLib.Miscellaneous.EnumExtensions`1.GetValues">
            <summary>
                返回该枚举所有可以包括的值
            </summary>
            <returns></returns>
        </member>
        <member name="M:X.CommLib.Miscellaneous.EnumExtensions`1.Parse(System.String)">
            <summary>解析一个枚举值</summary>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:X.CommLib.Miscellaneous.EnumExtensions`1.Parse(System.Object)">
            <summary>解析一个枚举值</summary>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:X.CommLib.Miscellaneous.EnumExtensions`1.TryParse(System.Object,`0)">
            <summary>解析指定的值</summary>
            <param name="value">The value.</param>
            <param name="defaultValue">解析失败时返回的值.</param>
            <returns></returns>
        </member>
        <member name="M:X.CommLib.Miscellaneous.EnumExtensions`1.Add(`0[])">
            <summary>添加一个(组)新的值</summary>
            <param name="values">The value.</param>
            <returns></returns>
        </member>
        <member name="M:X.CommLib.Miscellaneous.EnumExtensions`1.GetEnumValues">
            <summary>
                返回当前的包括值
            </summary>
            <returns></returns>
        </member>
        <member name="M:X.CommLib.Miscellaneous.EnumExtensions`1.Has(`0)">
            <summary>是否包含指定值</summary>
            <param name="value">The value.</param>
            <returns><c>true</c> if [has] [the specified value]; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:X.CommLib.Miscellaneous.EnumExtensions`1.Is(`0)">
            <summary>两个值是否相等</summary>
            <param name="value">The value.</param>
            <returns><c>true</c> if [is] [the specified value]; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:X.CommLib.Miscellaneous.EnumExtensions`1.Remove(`0)">
            <summary>从值中移除某个值</summary>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:X.CommLib.Miscellaneous.EnumExtensions`1.ToString">
            <summary>
                返回字符串的字符串格式，如果有多个，使用|进行分隔
            </summary>
            <returns>
                A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="T:X.CommLib.Miscellaneous.GetSystemInfo">
            <summary>
                说明：这个类主要用来展示如何利用WMI来获取一些操作系统的信息
                作者：周公
                时间：2008-1-14
                首发地址：http://blog.csdn.net/zhoufoxcn
            </summary>
        </member>
        <member name="T:X.CommLib.Miscellaneous.GetSystemInfo.TOKEN_ACCESS">
            <summary>
                token访问权限
            </summary>
        </member>
        <member name="F:X.CommLib.Miscellaneous.GetSystemInfo.TOKEN_ACCESS.TOKEN_ASSIGN_PRIMARY">
            <summary>The toke n_ assig n_ primary.</summary>
        </member>
        <member name="F:X.CommLib.Miscellaneous.GetSystemInfo.TOKEN_ACCESS.TOKEN_DUPLICATE">
            <summary>The toke n_ duplicate.</summary>
        </member>
        <member name="F:X.CommLib.Miscellaneous.GetSystemInfo.TOKEN_ACCESS.TOKEN_IMPERSONATE">
            <summary>The toke n_ impersonate.</summary>
        </member>
        <member name="F:X.CommLib.Miscellaneous.GetSystemInfo.TOKEN_ACCESS.TOKEN_QUERY">
            <summary>The toke n_ query.</summary>
        </member>
        <member name="F:X.CommLib.Miscellaneous.GetSystemInfo.TOKEN_ACCESS.TOKEN_QUERY_SOURCE">
            <summary>The toke n_ quer y_ source.</summary>
        </member>
        <member name="F:X.CommLib.Miscellaneous.GetSystemInfo.TOKEN_ACCESS.TOKEN_ADJUST_PRIVILEGES">
            <summary>The toke n_ adjus t_ privileges.</summary>
        </member>
        <member name="F:X.CommLib.Miscellaneous.GetSystemInfo.TOKEN_ACCESS.TOKEN_ADJUST_GROUPS">
            <summary>The toke n_ adjus t_ groups.</summary>
        </member>
        <member name="F:X.CommLib.Miscellaneous.GetSystemInfo.TOKEN_ACCESS.TOKEN_ADJUST_DEFAULT">
            <summary>The toke n_ adjus t_ default.</summary>
        </member>
        <member name="F:X.CommLib.Miscellaneous.GetSystemInfo.TOKEN_ACCESS.TOKEN_ADJUST_SESSIONID">
            <summary>The toke n_ adjus t_ sessionid.</summary>
        </member>
        <member name="F:X.CommLib.Miscellaneous.GetSystemInfo.TOKEN_ACCESS.TOKEN_READ">
            <summary>The toke n_ read.</summary>
        </member>
        <member name="F:X.CommLib.Miscellaneous.GetSystemInfo.TOKEN_ACCESS.TOKEN_WRITE">
            <summary>The toke n_ write.</summary>
        </member>
        <member name="F:X.CommLib.Miscellaneous.GetSystemInfo.TOKEN_ACCESS.TOKEN_EXECUTE">
            <summary>The toke n_ execute.</summary>
        </member>
        <member name="M:X.CommLib.Miscellaneous.GetSystemInfo.GetBiosSerialNumber">
            <summary>
                返回biso的SerialNumber
            </summary>
            <returns></returns>
        </member>
        <member name="M:X.CommLib.Miscellaneous.GetSystemInfo.GetClientMachineId">
            <summary>
                返回用户机器码
            </summary>
            <returns></returns>
        </member>
        <member name="M:X.CommLib.Miscellaneous.GetSystemInfo.GetCompanyName">
            <summary>
                返回计算机名
            </summary>
            <returns></returns>
        </member>
        <member name="M:X.CommLib.Miscellaneous.GetSystemInfo.GetCpuId">
            <summary>
                查询CPU编号
            </summary>
            <returns> </returns>
        </member>
        <member name="M:X.CommLib.Miscellaneous.GetSystemInfo.GetDriverInfo">
            <summary>
                获取本地驱动器信息
            </summary>
            <returns> </returns>
        </member>
        <member name="M:X.CommLib.Miscellaneous.GetSystemInfo.GetGroupName">
            <summary>
                组信息
            </summary>
            <returns> </returns>
        </member>
        <member name="M:X.CommLib.Miscellaneous.GetSystemInfo.GetIeVersion">
            <summary>
                返回系统的ie浏览器的版本，如果浏览器程序不存在返回null
            </summary>
            <returns></returns>
        </member>
        <member name="M:X.CommLib.Miscellaneous.GetSystemInfo.GetMachineCode">
            <summary>
                返回机器码
            </summary>
            <returns> </returns>
        </member>
        <member name="M:X.CommLib.Miscellaneous.GetSystemInfo.GetMainBoardId">
            <summary>
                主板编号
            </summary>
            <returns> </returns>
        </member>
        <member name="M:X.CommLib.Miscellaneous.GetSystemInfo.GetMainHardDiskId">
            <summary>
                查询硬盘编号
            </summary>
            <returns> </returns>
        </member>
        <member name="M:X.CommLib.Miscellaneous.GetSystemInfo.GetManagementObjs(System.String,System.String,System.String[])">
            <summary>
                查询系统信息
            </summary>
            <param name="column">The column.</param>
            <param name="from">From.</param>
            <param name="where">The where.</param>
            <returns></returns>
        </member>
        <member name="M:X.CommLib.Miscellaneous.GetSystemInfo.GetNetworkAdapterId">
            <summary>
                网卡编号
            </summary>
            <returns> </returns>
        </member>
        <member name="M:X.CommLib.Miscellaneous.GetSystemInfo.GetParentProcessId(System.Int32)">
            <summary>返回指定进程的父进程id,如果不存在返回 -1</summary>
            <param name="processId">The process identifier.</param>
            <returns></returns>
            <exception cref="T:System.ArgumentException">@当前进程Id号不能为空;processId</exception>
        </member>
        <member name="M:X.CommLib.Miscellaneous.GetSystemInfo.GetProcessPath(System.Int32)">
            <summary>返回指定进程的路径</summary>
            <param name="processId">The process id.</param>
            <returns></returns>
        </member>
        <member name="M:X.CommLib.Miscellaneous.GetSystemInfo.GetProcessWindowsIdentity(System.IntPtr)">
            <summary>Gets the process windows identity.</summary>
            <param name="processHandle">The process handle.</param>
            <returns></returns>
        </member>
        <member name="M:X.CommLib.Miscellaneous.GetSystemInfo.GetSerialNumber">
            <summary>
                获取操作系统序列号
            </summary>
            <returns> </returns>
        </member>
        <member name="M:X.CommLib.Miscellaneous.GetSystemInfo.GetSystembit">
            <summary>
                返回cpu操作系统的位数
            </summary>
            <returns> </returns>
        </member>
        <member name="M:X.CommLib.Miscellaneous.GetSystemInfo.Is64BitProcess">
            <summary>
                当前是否在64位状态下
            </summary>
            <returns></returns>
        </member>
        <member name="M:X.CommLib.Miscellaneous.GetSystemInfo.Is64BitSystem">
            <summary>
                当前操作系统是否是64位的
            </summary>
            <returns> true:是46位，false:非64位, null 发生错误 </returns>
        </member>
        <member name="M:X.CommLib.Miscellaneous.GetSystemInfo.IsAdministrator(System.IntPtr)">
            <summary>管理员身份运行</summary>
            <param name="processHandle">The process handle.</param>
            <returns><c>true</c> if the specified process handle is administrator; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:X.CommLib.Miscellaneous.GetSystemInfo.IsWow64Process">
            <summary>
                当前进程是否是wow64程序，wow64表示系统为64位上运行的模拟32位程序
            </summary>
            <returns></returns>
        </member>
        <member name="M:X.CommLib.Miscellaneous.GetSystemInfo.TryIsAdministrator(System.IntPtr)">
            <summary>尝试判断当前是否管理员身份运行，</summary>
            <param name="processHandle">The process handle.</param>
            <returns></returns>
        </member>
        <member name="M:X.CommLib.Miscellaneous.GetSystemInfo.CloseHandle(System.IntPtr)">
            <summary>Closes the handle.</summary>
            <param name="handle">The handle.</param>
            <returns></returns>
        </member>
        <member name="M:X.CommLib.Miscellaneous.GetSystemInfo.ConvertValue``1(System.Object)">
            <summary>
                将指定的值进行格式转换
            </summary>
            <typeparam name="T">返回类型</typeparam>
            <param name="val">The val.</param>
            <returns></returns>
        </member>
        <member name="M:X.CommLib.Miscellaneous.GetSystemInfo.GetManagementFirstObjObjValue``1(System.String,System.String,``0,System.String[])">
            <summary>
                返回查询值，并进行转型 ，如果不存在值，则返回defValue
                这里假设column中仅查询了一列
            </summary>
            <typeparam name="T">返回类型</typeparam>
            <param name="column">The column.</param>
            <param name="from">From.</param>
            <param name="defValue">The def value.</param>
            <param name="where">The where.</param>
            <returns></returns>
        </member>
        <member name="M:X.CommLib.Miscellaneous.GetSystemInfo.GetManagementFirstObjStringValue(System.String,System.String,System.String[])">
            <summary>
                返回查询结果中指定属性的信息的字符串表示中的第1个值，如果没有值返回""
            </summary>
            <param name="column">The column.</param>
            <param name="from">From.</param>
            <param name="where">The where.</param>
            <returns></returns>
        </member>
        <member name="M:X.CommLib.Miscellaneous.GetSystemInfo.GetManagementObjValues(System.String,System.String,System.String[])">
            <summary>
                返回查询结果中指定属性的信息，假设column中仅查询了一页值
            </summary>
            <param name="column">The column.</param>
            <param name="from">From.</param>
            <param name="where">The where.</param>
            <returns></returns>
        </member>
        <member name="M:X.CommLib.Miscellaneous.GetSystemInfo.GetManagementObjValues``1(System.String,System.String,System.String[])">
            <summary>
                返回内核总数
            </summary>
            <typeparam name="T"></typeparam>
            <param name="column">The column.</param>
            <param name="from">From.</param>
            <param name="where">The where.</param>
            <returns></returns>
        </member>
        <member name="M:X.CommLib.Miscellaneous.GetSystemInfo.GetProcessCount">
            <summary>
                返回内核数
            </summary>
            <returns></returns>
        </member>
        <member name="M:X.CommLib.Miscellaneous.GetSystemInfo.GetProcessCoreCount">
            <summary>
                返回内核数
            </summary>
            <returns></returns>
        </member>
        <member name="M:X.CommLib.Miscellaneous.GetSystemInfo.IsWow64Process(System.IntPtr,System.Boolean@)">
            <summary>当前是否是运行在64位系统下的32位程序</summary>
            <param name="processHandle"></param>
            <param name="wow64Process"></param>
            <returns></returns>
        </member>
        <member name="M:X.CommLib.Miscellaneous.GetSystemInfo.OpenProcessToken(System.IntPtr,X.CommLib.Miscellaneous.GetSystemInfo.TOKEN_ACCESS,System.IntPtr@)">
            <summary>
                Opens the process token.
            </summary>
            <param name="processHandle">The process handle.</param>
            <param name="desiredAccess">The desired access.</param>
            <param name="tokenHandle">The token handle.</param>
            <returns></returns>
        </member>
        <member name="M:X.CommLib.Miscellaneous.GetSystemInfo.StrFormatByteSize(System.Int64,System.Text.StringBuilder,System.Int32)">
            <summary>
                返回文件大小的字符串表示
            </summary>
            <param name="fileSize">Size of the file.</param>
            <param name="buffer">The buffer.</param>
            <param name="bufferSize">Size of the buffer.</param>
            <returns></returns>
        </member>
        <member name="M:X.CommLib.Miscellaneous.GetSystemInfo.StrFormatByteSize(System.Int64)">
            <summary>
                返回文件大小的字符串表示
            </summary>
            <param name="fileSize">Size of the file.</param>
            <returns></returns>
        </member>
        <member name="M:X.CommLib.Miscellaneous.GetSystemInfo.Test">
            <summary>
                输出能获取的信息
            </summary>
        </member>
        <member name="T:X.CommLib.Miscellaneous.ObjectDetailOutput">
            <summary>
                对象详细信息输出器
            </summary>
        </member>
        <member name="F:X.CommLib.Miscellaneous.ObjectDetailOutput.innerObject">
            <summary>
                The _obj.
            </summary>
        </member>
        <member name="M:X.CommLib.Miscellaneous.ObjectDetailOutput.#ctor(System.Object)">
            <summary>
                Initializes a new instance of the <see cref="T:X.CommLib.Miscellaneous.ObjectDetailOutput" /> class. 需要输出详细信息对象
            </summary>
            <param name="obj">
                The object.
            </param>
        </member>
        <member name="P:X.CommLib.Miscellaneous.ObjectDetailOutput.Propertys">
            <summary>
                返回对象的属性
            </summary>
        </member>
        <member name="P:X.CommLib.Miscellaneous.ObjectDetailOutput.Item(System.Reflection.PropertyInfo)">
            <summary>
                返回指定对象的值
            </summary>
            <value>
                The <see cref="T:System.Object" />.
            </value>
            <param name="property">
                The property.
            </param>
            <returns>
                The <see cref="T:System.Object" />.
            </returns>
        </member>
        <member name="M:X.CommLib.Miscellaneous.ObjectDetailOutput.Convert``1(System.Object,``0)">
            <summary>
                转为指定的类型
            </summary>
            <typeparam name="T">
                值类型
            </typeparam>
            <param name="value">
                The obj.
            </param>
            <param name="defaultValue">
                The default value.
            </param>
            <returns>
                The <see cref="!:T" />.
            </returns>
        </member>
        <member name="M:X.CommLib.Miscellaneous.ObjectDetailOutput.ConvertToVersion(System.Object)">
            <summary>
                转为version值
            </summary>
            <param name="value">
                The value.
            </param>
            <returns>
                The <see cref="T:System.Object" />.
            </returns>
        </member>
        <member name="M:X.CommLib.Miscellaneous.ObjectDetailOutput.GetAttribute``1(System.Reflection.MemberInfo)">
            <summary>
                返回指定方法的属性，如果不存在返回null
            </summary>
            <typeparam name="T">
                值类型
            </typeparam>
            <param name="member">
                The member.
            </param>
            <returns>
                The <see cref="!:T" />.
            </returns>
        </member>
        <member name="M:X.CommLib.Miscellaneous.ObjectDetailOutput.GetDisplayName(System.Reflection.PropertyInfo)">
            <summary>
                返回指定属性的display名称
            </summary>
            <param name="property">
                The property.
            </param>
            <returns>
                The <see cref="T:System.String" />.
            </returns>
        </member>
        <member name="M:X.CommLib.Miscellaneous.ObjectDetailOutput.HasObsoleteAttribute(System.Object)">
            <summary>
                判断对象是否具有 ObsoleteAttribute 属性
            </summary>
            <param name="obj">The object.</param>
            <returns>System.Boolean.</returns>
        </member>
        <member name="M:X.CommLib.Miscellaneous.ObjectDetailOutput.LoadEncryptedStream``1(System.IO.Stream,System.Byte[],System.Byte[],System.Security.Cryptography.SymmetricAlgorithm)">
            <summary>
                从加密流中解密对象
            </summary>
            <typeparam name="T">
                值类型
            </typeparam>
            <param name="stream">
                The stream.
            </param>
            <param name="key">
                The key.
            </param>
            <param name="iv">
                The iv.
            </param>
            <param name="provider">
                使用的解密算法，默认使用TripleDESCryptoServiceProvider算法
            </param>
            <returns>
                The <see cref="!:T" />.
            </returns>
        </member>
        <member name="M:X.CommLib.Miscellaneous.ObjectDetailOutput.LoadFromBinaryFile``1(System.String)">
            <summary>
                根据二进制序列化文件创建对象
            </summary>
            <typeparam name="T">
                值类型
            </typeparam>
            <param name="filePat">
                The file pat.
            </param>
            <returns>
                The <see cref="!:T" />.
            </returns>
        </member>
        <member name="M:X.CommLib.Miscellaneous.ObjectDetailOutput.LoadFromBinaryStream``1(System.IO.Stream)">
            <summary>
                将对象从二进制流中载入
            </summary>
            <typeparam name="T">
                返回值类型
            </typeparam>
            <param name="stream">
                The stream.
            </param>
            <returns>
                The <see cref="!:T" />.
            </returns>
        </member>
        <member name="M:X.CommLib.Miscellaneous.ObjectDetailOutput.LoadFromJsonFile``1(System.String,``0,System.Text.Encoding)">
            <summary>
                从指定的文件中载入
            </summary>
            <typeparam name="T">
                返回值类型
            </typeparam>
            <param name="filePath">
                The file path.
            </param>
            <param name="defaultObject">
                The default object.
            </param>
            <param name="encoding">
                The encoding.
            </param>
            <returns>
                The <see cref="!:T" />.
            </returns>
        </member>
        <member name="M:X.CommLib.Miscellaneous.ObjectDetailOutput.LoadFromJsonFile``1(System.String,System.Text.Encoding)">
            <summary>
                从指定的文件中载入
            </summary>
            <typeparam name="T">
                返回值类型
            </typeparam>
            <param name="filePath">
                The file path.
            </param>
            <param name="encoding">
                The encoding.
            </param>
            <returns>
                The <see cref="!:T" />.
            </returns>
        </member>
        <member name="M:X.CommLib.Miscellaneous.ObjectDetailOutput.LoadFromJsonString``1(System.String)">
            <summary>
                从json 字符串中反序列化
            </summary>
            <typeparam name="T">
                返回值类型
            </typeparam>
            <param name="json">
                The json.
            </param>
            <returns>
                The <see cref="!:T" />.
            </returns>
        </member>
        <member name="M:X.CommLib.Miscellaneous.ObjectDetailOutput.LoadFromJsonString(System.String,System.Type)">
            <summary>
                从 json 字符串中创建指定的类型对象
            </summary>
            <param name="json">
                The json.
            </param>
            <param name="type">
                The type.
            </param>
            <returns>
                The <see cref="T:System.Object" />.
            </returns>
        </member>
        <member name="M:X.CommLib.Miscellaneous.ObjectDetailOutput.LoadFromXmlFile``1(System.String)">
            <summary>
                从指定的xml文件中反序列化对象
            </summary>
            <typeparam name="T">
                值类型
            </typeparam>
            <param name="filePath">
                The file path.
            </param>
            <returns>
                The <see cref="!:T" />.
            </returns>
        </member>
        <member name="M:X.CommLib.Miscellaneous.ObjectDetailOutput.LoadFromXmlFile(System.String,System.Type)">
            <summary>
                从文件中载入对象
            </summary>
            <param name="filePath">
                The file path.
            </param>
            <param name="type">
                The type.
            </param>
            <returns>
                The <see cref="T:System.Object" />.
            </returns>
        </member>
        <member name="M:X.CommLib.Miscellaneous.ObjectDetailOutput.LoadFromXmlStream``1(System.IO.TextReader)">
            <summary>
                从流中载入指定类型的对象
            </summary>
            <typeparam name="T">
                值类型
            </typeparam>
            <param name="stream">
                The stream.
            </param>
            <returns>
                The <see cref="!:T" />.
            </returns>
        </member>
        <member name="M:X.CommLib.Miscellaneous.ObjectDetailOutput.LoadFromXmlStream(System.IO.TextReader,System.Type)">
            <summary>
                xml 流中载入对象
            </summary>
            <param name="stream">
                The stream.
            </param>
            <param name="type">
                The type.
            </param>
            <returns>
                The <see cref="T:System.Object" />.
            </returns>
        </member>
        <member name="M:X.CommLib.Miscellaneous.ObjectDetailOutput.LoadFromXmlString``1(System.String)">
            <summary>
                从xml字符串中返回序列化对象
            </summary>
            <typeparam name="T">
                值类型
            </typeparam>
            <param name="content">
                The content.
            </param>
            <returns>
                The <see cref="!:T" />.
            </returns>
        </member>
        <member name="M:X.CommLib.Miscellaneous.ObjectDetailOutput.ToString(System.Object)">
            <summary>
                tostring 的简化函数
            </summary>
            <param name="obj">
                The object.
            </param>
            <returns>
                A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="M:X.CommLib.Miscellaneous.ObjectDetailOutput.TryLoadFromXmlFile``1(System.String,``0)">
            <summary>
                尝试从配置文件中载入对象，如果文件不存在或是文件大小为0,则返回默认值
            </summary>
            <typeparam name="T">
                值类型
            </typeparam>
            <param name="filePath">
                The file path.
            </param>
            <param name="defaultValue">
                The default value.
            </param>
            <returns>
                The <see cref="!:T" />.
            </returns>
        </member>
        <member name="M:X.CommLib.Miscellaneous.ObjectDetailOutput.Convert``1">
            <summary>
                转为指定的类型
            </summary>
            <typeparam name="T">
                值类型
            </typeparam>
            <returns>
                The <see cref="!:T" />.
            </returns>
        </member>
        <member name="M:X.CommLib.Miscellaneous.ObjectDetailOutput.CopyValueTo(System.Object,System.Type,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
                复制内置对象的属性值至obj中
            </summary>
            <param name="obj">The object.</param>
            <param name="targetType">目标的类型值，属性及字段的复制在该类型下进行，如果不设置则默认为源对象类型</param>
            <param name="ignore">复制时需要ignore的属性名</param>
            <exception cref="T:System.ArgumentNullException">obj;@不能使用空对象接收属性值</exception>
            <exception cref="T:System.NotSupportedException">
                目标对象类型与复制类型不匹配
                or
                源对象类型与复制类型不匹配
            </exception>
        </member>
        <member name="M:X.CommLib.Miscellaneous.ObjectDetailOutput.GetDescription">
            <summary>
                返回对象的Description描述，如果描述的对象不存在，返回null
            </summary>
            <returns>
                The <see cref="T:System.String" />.
            </returns>
        </member>
        <member name="M:X.CommLib.Miscellaneous.ObjectDetailOutput.GetDescription(System.String)">
            <summary>
                返回指定描述的Description属性
            </summary>
            <param name="propertyName">
                Name of the property.
            </param>
            <returns>
                The <see cref="T:System.String" />.
            </returns>
        </member>
        <member name="M:X.CommLib.Miscellaneous.ObjectDetailOutput.GetDisplayName(System.String)">
            <summary>
                返回指定属性的display名称，如果不存在返回 null
            </summary>
            <param name="propertyName">
                Name of the property.
            </param>
            <returns>
                The <see cref="T:System.String" />.
            </returns>
        </member>
        <member name="M:X.CommLib.Miscellaneous.ObjectDetailOutput.GetPropertyInfo(System.String)">
            <summary>
                返回指定名称的属性对象，如果不存在返回 null
            </summary>
            <param name="propertyName">
                Name of the property.
            </param>
            <returns>
                The <see cref="T:System.Reflection.PropertyInfo" />.
            </returns>
        </member>
        <member name="M:X.CommLib.Miscellaneous.ObjectDetailOutput.GetPropertyValue(System.String,System.Object[])">
            <summary>
                返回指定属性的值
            </summary>
            <param name="propertyName">
                Name of the property.
            </param>
            <param name="index">
                如果是索引属性，指定索引值，如果非索引属性则需要使用null.
            </param>
            <returns>
                The <see cref="T:System.Object" />.
            </returns>
        </member>
        <member name="M:X.CommLib.Miscellaneous.ObjectDetailOutput.GetPropertyValue``1(System.String,``0,System.Object[])">
            <summary>
                返回指定属性的值，并转为指定的属性
            </summary>
            <typeparam name="T">
                值类型
            </typeparam>
            <param name="propertyName">
                Name of the property.
            </param>
            <param name="defaultValue">
                The default value.
            </param>
            <param name="index">
                The index.
            </param>
            <returns>
                The <see cref="!:T" />.
            </returns>
        </member>
        <member name="M:X.CommLib.Miscellaneous.ObjectDetailOutput.SaveToBinaryFile(System.String)">
            <summary>
                将数据保存到二进制流文件中
            </summary>
            <param name="filePath">
                The file path.
            </param>
        </member>
        <member name="M:X.CommLib.Miscellaneous.ObjectDetailOutput.SaveToBinaryStream(System.IO.Stream)">
            <summary>
                将数据保存到二进制流中
            </summary>
            <param name="stream">
                The stream.
            </param>
        </member>
        <member name="M:X.CommLib.Miscellaneous.ObjectDetailOutput.SaveToEncryptedStream(System.IO.Stream,System.Byte[],System.Byte[],System.Security.Cryptography.SymmetricAlgorithm)">
            <summary>
                将数据加密，然后保存至淤中
            </summary>
            <param name="stream">
                The stream.
            </param>
            <param name="key">
                The key.
            </param>
            <param name="iv">
                The iv.
            </param>
            <param name="provider">
                解密算法，默认使用TripleDESCryptoServiceProvider算法
            </param>
        </member>
        <member name="M:X.CommLib.Miscellaneous.ObjectDetailOutput.SaveToJsonFile(System.String,System.Text.Encoding)">
            <summary>
                保存到json格式文件
            </summary>
            <param name="filePath">
                The file path.
            </param>
            <param name="encoding">
                The encoding.
            </param>
        </member>
        <member name="M:X.CommLib.Miscellaneous.ObjectDetailOutput.SaveToJsonString">
            <summary>
                序列化为 json 字符串
            </summary>
            <returns>
                The <see cref="T:System.String" />.
            </returns>
        </member>
        <member name="M:X.CommLib.Miscellaneous.ObjectDetailOutput.SaveToXmlFile(System.String)">
            <summary>
                将对象序列化到xml文件中
            </summary>
            <param name="filePath">
                The file Path.
            </param>
        </member>
        <member name="M:X.CommLib.Miscellaneous.ObjectDetailOutput.SaveToXmlStream(System.IO.TextWriter)">
            <summary>
                将对象序列化到流中
            </summary>
            <param name="stream">
                The stream.
            </param>
        </member>
        <member name="M:X.CommLib.Miscellaneous.ObjectDetailOutput.SaveToXmlString">
            <summary>
                将对象序列化到string中
            </summary>
            <returns>
                The <see cref="T:System.String" />.
            </returns>
        </member>
        <member name="M:X.CommLib.Miscellaneous.ObjectDetailOutput.ToString(System.String[])">
            <summary>
                返回文字表示，可以指定哪些属性不显示出来
            </summary>
            <param name="hiddenProperties">
                The hidden properties.
            </param>
            <returns>
                A <see cref="T:System.String" /> that represents this instance.
            </returns>
            <exception cref="T:System.NotSupportedException">
                集合为只读。
            </exception>
        </member>
        <member name="M:X.CommLib.Miscellaneous.ObjectDetailOutput.ToString">
            <summary>
                输出包装对象的的详细信息
            </summary>
            <returns>
                A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="M:X.CommLib.Miscellaneous.ObjectDetailOutput.Test">
            <summary>
                内部测试
            </summary>
        </member>
        <member name="M:X.CommLib.Miscellaneous.ObjectDetailOutput.TestConvert">
            <summary>
                类型转换
            </summary>
        </member>
        <member name="M:X.CommLib.Miscellaneous.ObjectDetailOutput.TestEncryptedData">
            <summary>
                对加密数据进行处理
            </summary>
        </member>
        <member name="M:X.CommLib.Miscellaneous.ObjectDetailOutput.FilterDefaultMemberPropertys(System.Type,System.Reflection.PropertyInfo[])">
            <summary>
                从属性列表中过滤过滤器就是this[0]之类的属性
            </summary>
            <param name="type">
            </param>
            <param name="propertyInfos">
            </param>
            <returns>
                The <see cref="!:PropertyInfo[]" />.
            </returns>
        </member>
        <member name="M:X.CommLib.Miscellaneous.ObjectDetailOutput.FormatOutputValue(System.Object)">
            <summary>
                格式化需要输出的值
            </summary>
            <param name="value">
                The value.
            </param>
            <returns>
                The <see cref="T:System.String" />.
            </returns>
        </member>
        <member name="M:X.CommLib.Miscellaneous.ObjectDetailOutput.GetDescription(System.Reflection.MemberInfo)">
            <summary>
                返回指定描述的Description属性
            </summary>
            <param name="property">
                The property info.
            </param>
            <returns>
                The <see cref="T:System.String" />.
            </returns>
        </member>
        <member name="M:X.CommLib.Miscellaneous.ObjectDetailOutput.GetDescriptionAttribute(System.Reflection.MemberInfo)">
            <summary>
                返回对象的描述属性
            </summary>
            <param name="memberInfo">
                The type.
            </param>
            <returns>
                The <see cref="T:System.ComponentModel.DescriptionAttribute" />.
            </returns>
        </member>
        <member name="T:X.CommLib.Miscellaneous.ObjectDetailOutput.TestClass">
            <summary>
                用来进行测试的类
            </summary>
        </member>
        <member name="P:X.CommLib.Miscellaneous.ObjectDetailOutput.TestClass.TestString">
            <summary>Gets the test string.</summary>
        </member>
        <member name="T:X.CommLib.Miscellaneous.ProductAppInfo">
            <summary>
                产品信息
            </summary>
        </member>
        <member name="T:X.CommLib.Miscellaneous.ProductAppInfo.MachineType">
            <summary>
                pe头类型
            </summary>
        </member>
        <member name="F:X.CommLib.Miscellaneous.ProductAppInfo.MachineType.ImageFileMachineUnknown">
            <summary>
                The IMAG e_ FIL e_ MACHIN e_ UNKNOWN
            </summary>
        </member>
        <member name="F:X.CommLib.Miscellaneous.ProductAppInfo.MachineType.ImageFileMachineAm33">
            <summary>
                The IMAG e_ FIL e_ MACHIN e_ A M33
            </summary>
        </member>
        <member name="F:X.CommLib.Miscellaneous.ProductAppInfo.MachineType.ImageFileMachineAmd64">
            <summary>
                The IMAG e_ FIL e_ MACHIN e_ AM D64
            </summary>
        </member>
        <member name="F:X.CommLib.Miscellaneous.ProductAppInfo.MachineType.ImageFileMachineArm">
            <summary>
                The IMAG e_ FIL e_ MACHIN e_ ARM
            </summary>
        </member>
        <member name="F:X.CommLib.Miscellaneous.ProductAppInfo.MachineType.ImageFileMachineEbc">
            <summary>
                The IMAG e_ FIL e_ MACHIN e_ EBC
            </summary>
        </member>
        <member name="F:X.CommLib.Miscellaneous.ProductAppInfo.MachineType.ImageFileMachineI386">
            <summary>
                The IMAG e_ FIL e_ MACHIN e_ i386
            </summary>
        </member>
        <member name="F:X.CommLib.Miscellaneous.ProductAppInfo.MachineType.ImageFileMachineIa64">
            <summary>
                The IMAG e_ FIL e_ MACHIN e_ I a64
            </summary>
        </member>
        <member name="F:X.CommLib.Miscellaneous.ProductAppInfo.MachineType.ImageFileMachineM32R">
            <summary>
                The IMAG e_ FIL e_ MACHIN e_ M32 R
            </summary>
        </member>
        <member name="F:X.CommLib.Miscellaneous.ProductAppInfo.MachineType.ImageFileMachineMips16">
            <summary>
                The IMAG e_ FIL e_ MACHIN e_ MIP S16
            </summary>
        </member>
        <member name="F:X.CommLib.Miscellaneous.ProductAppInfo.MachineType.ImageFileMachineMipsfpu">
            <summary>
                The IMAG e_ FIL e_ MACHIN e_ MIPSFPU
            </summary>
        </member>
        <member name="F:X.CommLib.Miscellaneous.ProductAppInfo.MachineType.ImageFileMachineMipsfpu16">
            <summary>
                The IMAG e_ FIL e_ MACHIN e_ MIPSFP u16
            </summary>
        </member>
        <member name="F:X.CommLib.Miscellaneous.ProductAppInfo.MachineType.ImageFileMachinePowerpc">
            <summary>
                The IMAG e_ FIL e_ MACHIN e_ POWERPC
            </summary>
        </member>
        <member name="F:X.CommLib.Miscellaneous.ProductAppInfo.MachineType.ImageFileMachinePowerpcfp">
            <summary>
                The IMAG e_ FIL e_ MACHIN e_ POWERPCFP
            </summary>
        </member>
        <member name="F:X.CommLib.Miscellaneous.ProductAppInfo.MachineType.ImageFileMachineR4000">
            <summary>
                The IMAG e_ FIL e_ MACHIN e_ R4000
            </summary>
        </member>
        <member name="F:X.CommLib.Miscellaneous.ProductAppInfo.MachineType.ImageFileMachineSh3">
            <summary>
                The IMAG e_ FIL e_ MACHIN e_ S h3
            </summary>
        </member>
        <member name="F:X.CommLib.Miscellaneous.ProductAppInfo.MachineType.ImageFileMachineSh3Dsp">
            <summary>
                The IMAG e_ FIL e_ MACHIN e_ S h3 DSP
            </summary>
        </member>
        <member name="F:X.CommLib.Miscellaneous.ProductAppInfo.MachineType.ImageFileMachineSh4">
            <summary>
                The IMAG e_ FIL e_ MACHIN e_ S h4
            </summary>
        </member>
        <member name="F:X.CommLib.Miscellaneous.ProductAppInfo.MachineType.ImageFileMachineSh5">
            <summary>
                The IMAG e_ FIL e_ MACHIN e_ S h5
            </summary>
        </member>
        <member name="F:X.CommLib.Miscellaneous.ProductAppInfo.MachineType.ImageFileMachineThumb">
            <summary>
                The IMAG e_ FIL e_ MACHIN e_ THUMB
            </summary>
        </member>
        <member name="F:X.CommLib.Miscellaneous.ProductAppInfo.MachineType.ImageFileMachineWcemipsv2">
            <summary>
                The IMAG e_ FIL e_ MACHIN e_ WCEMIPS v2
            </summary>
        </member>
        <member name="F:X.CommLib.Miscellaneous.ProductAppInfo.innerAssembly">
            <summary>
                需要查询信息的程序集
            </summary>
        </member>
        <member name="M:X.CommLib.Miscellaneous.ProductAppInfo.GetFileInternalName(System.String)">
            <summary>
                返回文件的内部名称
            </summary>
            <param name="filePath">The file path.</param>
            <returns></returns>
        </member>
        <member name="T:X.CommLib.Miscellaneous.ProductAppInfo.GetAssemblyAttributeValueFunc`1">
            <summary>获取属性值的函数定义</summary>
            <typeparam name="T">返回类型</typeparam>
            <param name="assemblyAttribute">The assembly attribute.</param>
            <returns></returns>
        </member>
        <member name="M:X.CommLib.Miscellaneous.ProductAppInfo.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:X.CommLib.Miscellaneous.ProductAppInfo" /> class.
                使用当前运行的程序集进行初始化
            </summary>
        </member>
        <member name="M:X.CommLib.Miscellaneous.ProductAppInfo.#ctor(System.Reflection.Assembly)">
            <summary>Initializes a new instance of the <see cref="T:X.CommLib.Miscellaneous.ProductAppInfo" /> class. 使用指定的程序集进行初始化</summary>
            <param name="assembly">The assembly.</param>
        </member>
        <member name="M:X.CommLib.Miscellaneous.ProductAppInfo.#ctor(System.String)">
            <summary>
                Initializes a new instance of the <see cref="T:X.CommLib.Miscellaneous.ProductAppInfo" /> class.
            </summary>
            <param name="assemblyFile">The assembly file.</param>
        </member>
        <member name="M:X.CommLib.Miscellaneous.ProductAppInfo.Test">
            <summary>
                进行测试
            </summary>
        </member>
        <member name="P:X.CommLib.Miscellaneous.ProductAppInfo.Configurations">
            <summary>
                返回 Configurationses属性，并按空格进行分隔
            </summary>
            <returns></returns>
        </member>
        <member name="M:X.CommLib.Miscellaneous.ProductAppInfo.LoadAssembly(System.String)">
            <summary>
                Loads the assembly.
            </summary>
            <param name="assemblyFile">The assembly file.</param>
            <returns></returns>
        </member>
        <member name="P:X.CommLib.Miscellaneous.ProductAppInfo.AssemblyCompany">
            <summary>
                获取程序集的公司信息
            </summary>
        </member>
        <member name="P:X.CommLib.Miscellaneous.ProductAppInfo.AssemblyCopyright">
            <summary>
                获取程序集的版本
            </summary>
        </member>
        <member name="P:X.CommLib.Miscellaneous.ProductAppInfo.AssemblyDescription">
            <summary>
                程序集说明
            </summary>
        </member>
        <member name="P:X.CommLib.Miscellaneous.ProductAppInfo.AssemblyProduct">
            <summary>
                获取产品名称
            </summary>
        </member>
        <member name="P:X.CommLib.Miscellaneous.ProductAppInfo.AssemblyTitle">
            <summary>
                返回程序集标题
            </summary>
        </member>
        <member name="P:X.CommLib.Miscellaneous.ProductAppInfo.AssemblyVersion">
            <summary>
                返回程序集版本
            </summary>
        </member>
        <member name="P:X.CommLib.Miscellaneous.ProductAppInfo.FileName">
            <summary>
                Gets the name of the file.
            </summary>
            <value>
                The name of the file.
            </value>
        </member>
        <member name="P:X.CommLib.Miscellaneous.ProductAppInfo.FilePath">
            <summary>
                执行程序的路径
            </summary>
            <value>
                The file path.
            </value>
        </member>
        <member name="P:X.CommLib.Miscellaneous.ProductAppInfo.FileVersion">
            <summary>
                返回当前产品的文件版本
            </summary>
            <value> The file version. </value>
        </member>
        <member name="P:X.CommLib.Miscellaneous.ProductAppInfo.ProductVersion">
            <summary>
                返回当前产品的版本
            </summary>
        </member>
        <member name="P:X.CommLib.Miscellaneous.ProductAppInfo.IsTrial">
            <summary>
                当前在 Configurations 中是否设置了TRIAL
            </summary>
            <value>
                当前是否设置了试用属性
            </value>
        </member>
        <member name="M:X.CommLib.Miscellaneous.ProductAppInfo.GetDllMachineType(System.String)">
            <summary>返回程序的类型(32/64之类的)</summary>
            <param name="dllPath">The DLL path.</param>
            <returns></returns>
            <exception cref="T:System.Exception">Can't find PE header</exception>
        </member>
        <member name="M:X.CommLib.Miscellaneous.ProductAppInfo.GetFileVersion(System.String)">
            <summary>返回指定文件的文件版本</summary>
            <param name="filePath">The file path. </param>
            <returns></returns>
        </member>
        <member name="M:X.CommLib.Miscellaneous.ProductAppInfo.GetProductVersion(System.String)">
            <summary>返回指定文件的产品版本</summary>
            <param name="filePath">The file path. </param>
            <returns></returns>
        </member>
        <member name="M:X.CommLib.Miscellaneous.ProductAppInfo.CreateAppInfoControl">
            <summary>
                返回一个通用的描述程序信息的界面
            </summary>
            <returns> </returns>
        </member>
        <member name="M:X.CommLib.Miscellaneous.ProductAppInfo.ToString">
            <summary>
                Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
                A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="M:X.CommLib.Miscellaneous.ProductAppInfo.GetAssemblyAttribute``1(System.Reflection.Assembly)">
            <summary>返回指定类型的特点属性，如果不存在返回null</summary>
            <typeparam name="T">返回类型</typeparam>
            <param name="assembly">The assembly.</param>
            <returns></returns>
        </member>
        <member name="M:X.CommLib.Miscellaneous.ProductAppInfo.GetAssemblyAttributeValue``1(System.Reflection.Assembly,X.CommLib.Miscellaneous.ProductAppInfo.GetAssemblyAttributeValueFunc{``0})">
            <summary>返回指定属性值</summary>
            <typeparam name="T">返回类型</typeparam>
            <param name="assembly">The assembly.</param>
            <param name="func">The function.</param>
            <returns></returns>
        </member>
        <member name="T:X.CommLib.Miscellaneous.SingleInstance">
            <summary>
                只启动一个应用程序实例控制类
            </summary>
        </member>
        <member name="F:X.CommLib.Miscellaneous.SingleInstance.WS_SHOWNORMAL">
            <summary>
                以默认状态显示窗口
            </summary>
        </member>
        <member name="F:X.CommLib.Miscellaneous.SingleInstance.mutex">
            <summary>The mutex.</summary>
        </member>
        <member name="F:X.CommLib.Miscellaneous.SingleInstance.runFlagFullname">
            <summary>
                The run flag fullname
            </summary>
        </member>
        <member name="P:X.CommLib.Miscellaneous.SingleInstance.RunFlag">
            <summary>
                获取或设置程序运行标志，必须符合Windows文件命名规范
                实现生成临时文件为依据，如果修改成设置注册表，那就不需要符合文件命名规范。
            </summary>
        </member>
        <member name="M:X.CommLib.Miscellaneous.SingleInstance.CreateMutex">
            <summary>
                创建应用程序进程Mutex
            </summary>
            <returns>返回创建结果，true表示创建成功，false创建失败。</returns>
        </member>
        <member name="M:X.CommLib.Miscellaneous.SingleInstance.CreateMutex(System.String)">
            <summary>创建应用程序进程Mutex</summary>
            <param name="name">Mutex名称</param>
            <returns>返回创建结果，true表示创建成功，false创建失败。</returns>
        </member>
        <member name="M:X.CommLib.Miscellaneous.SingleInstance.DisposeRunFlag">
            <summary>
                释放初始化程序运行标志，如果释放失败将抛出异常
            </summary>
        </member>
        <member name="M:X.CommLib.Miscellaneous.SingleInstance.GetRunningInstance">
            <summary>
                获取应用程序进程实例,如果没有匹配进程，返回Null
            </summary>
            <returns>返回当前Process实例</returns>
        </member>
        <member name="M:X.CommLib.Miscellaneous.SingleInstance.HandleRunningInstance(System.Diagnostics.Process)">
            <summary>获取应用程序句柄，设置应用程序前台运行，并返回bool值</summary>
            <param name="instance">The instance.</param>
        </member>
        <member name="M:X.CommLib.Miscellaneous.SingleInstance.HandleRunningInstance">
            <summary>
                获取窗口句柄，设置应用程序前台运行，并返回bool值，重载方法
            </summary>
            <returns></returns>
        </member>
        <member name="M:X.CommLib.Miscellaneous.SingleInstance.InitRunFlag">
            <summary>
                初始化程序运行标志，设置成功，返回true，已经设置返回false，设置失败将抛出异常
            </summary>
            <returns>返回设置结果</returns>
        </member>
        <member name="M:X.CommLib.Miscellaneous.SingleInstance.IsVsHostMode">
            <summary>
                当前是否在vs的宿主模式下
            </summary>
            <returns>
                <c>true</c> if [is vs host mode]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:X.CommLib.Miscellaneous.SingleInstance.ReleaseMutex">
            <summary>
                释放Mutex
            </summary>
        </member>
        <member name="M:X.CommLib.Miscellaneous.SingleInstance.SetForegroundWindow(System.IntPtr)">
            <summary>设置窗口置前</summary>
            <param name="hWnd">The h WND.</param>
            <returns></returns>
        </member>
        <member name="M:X.CommLib.Miscellaneous.SingleInstance.SetWindowTop(System.IntPtr)">
            <summary>设置窗口到最前端</summary>
            <param name="hWnd"></param>
        </member>
        <member name="M:X.CommLib.Miscellaneous.SingleInstance.SetWindowTop(System.Windows.Forms.Form)">
            <summary>将窗口设置至最前端</summary>
            <param name="form">The form.</param>
            <returns></returns>
        </member>
        <member name="M:X.CommLib.Miscellaneous.SingleInstance.ShowWindowAsync(System.IntPtr,System.Int32)">
            <summary>设置窗口状态</summary>
            <param name="hWnd">The h WND.</param>
            <param name="cmdShow">The CMD show.</param>
            <returns></returns>
        </member>
        <member name="T:X.CommLib.Miscellaneous.HashSet`1">
            <summary>
            为了 .net 2.0 实现的 hashset 类
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:X.CommLib.Miscellaneous.HashSet`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:X.CommLib.Miscellaneous.HashSet`1" /> class.
            </summary>
        </member>
        <member name="M:X.CommLib.Miscellaneous.HashSet`1.#ctor(System.Collections.Generic.IEqualityComparer{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:X.CommLib.Miscellaneous.HashSet`1"/> class.
            </summary>
            <param name="comparer">The comparer.</param>
        </member>
        <member name="M:X.CommLib.Miscellaneous.HashSet`1.Add(`0)">
            <summary>
                添加一个项
            </summary>
            <param name="item">The email.</param>
        </member>
        <member name="M:X.CommLib.Miscellaneous.HashSet`1.ToArray">
            <summary>
            转为数组 
            </summary>
            <returns></returns>
        </member>
        <member name="T:X.CommLib.Net.IeWebControls.IeStarter">
            <summary>
                ie启动器
            </summary>
        </member>
        <member name="F:X.CommLib.Net.IeWebControls.IeStarter.IexploreName">
            <summary>
                ie 浏览器的程序名称
            </summary>
        </member>
        <member name="T:X.CommLib.Net.IeWebControls.IeStarter.StartIeMode">
            <summary>
                启动ie的方式
            </summary>
        </member>
        <member name="F:X.CommLib.Net.IeWebControls.IeStarter.StartIeMode.Auto">
            <summary>
                自动模式
            </summary>
        </member>
        <member name="F:X.CommLib.Net.IeWebControls.IeStarter.StartIeMode.X86">
            <summary>
                X86格式Ie
            </summary>
        </member>
        <member name="F:X.CommLib.Net.IeWebControls.IeStarter.StartIeMode.X64">
            <summary>
                X64格式Ie
            </summary>
        </member>
        <member name="M:X.CommLib.Net.IeWebControls.IeStarter.TestShowInternetExplorerInfo">
            <summary>
            Tests the tao bao.
            </summary>
        </member>
        <member name="M:X.CommLib.Net.IeWebControls.IeStarter.OutputInternetExplorerInfo(SHDocVw.InternetExplorer)">
            <summary>
                在控制台显示浏览器信息
            </summary>
            <param name="iExplorer">The i explorer.</param>
        </member>
        <member name="M:X.CommLib.Net.IeWebControls.IeStarter.GetAllShellWindows">
            <summary>
            返回当前所有的浏览器对象
            </summary>
            <returns>InternetExplorer[].</returns>
        </member>
        <member name="M:X.CommLib.Net.IeWebControls.IeStarter.CreateIExplorer">
            <summary>
            创建一个浏览器对象，失败返回null
            </summary>
            <returns>InternetExplorer.</returns>
        </member>
        <member name="M:X.CommLib.Net.IeWebControls.IeStarter.GetAllIeWebControls">
            <summary>
            返回所有的ie控制器
            </summary>
            <returns>IIeWebControl[].</returns>
        </member>
        <member name="M:X.CommLib.Net.IeWebControls.IeStarter.GetAllInternetExplorers">
            <summary>
            返回
            </summary>
            <returns>InternetExplorer[].</returns>
        </member>
        <member name="M:X.CommLib.Net.IeWebControls.IeStarter.GetIePath(X.CommLib.Net.IeWebControls.IeStarter.StartIeMode)">
            <summary>
            返回ie浏览器的路径 ，如果获取失败或是文件不存在抛出异常
            </summary>
            <param name="ieMode">The ie mode.</param>
            <returns>System.String.</returns>
            <exception cref="T:System.NotSupportedException"></exception>
            <exception cref="T:System.IO.FileNotFoundException">没有找到ie浏览器</exception>
        </member>
        <member name="M:X.CommLib.Net.IeWebControls.IeStarter.GetIeVersion(X.CommLib.Net.IeWebControls.IeStarter.StartIeMode)">
            <summary>
                返回ie的版本号
            </summary>
            <param name="ieMode">The ie mode.</param>
            <returns></returns>
        </member>
        <member name="M:X.CommLib.Net.IeWebControls.IeStarter.StartBrowser(System.String,System.Boolean,System.Int32,System.String)">
            <summary>
                启动浏览器
            </summary>
            <param name="browserPath">浏览器的路径.</param>
            <param name="hiddenIe">启动时是否隐藏浏览器.</param>
            <param name="maxWaitTime">启动时最大等待时间，超时则抛出异常.（秒）</param>
            <param name="startArg">启动参数.</param>
            <returns></returns>
        </member>
        <member name="M:X.CommLib.Net.IeWebControls.IeStarter.StartIe(System.Boolean)">
            <summary>
                启动ie浏览器，内部选择一个适当的方式创建浏览器对象
                StartIExplorer 的简化函数
            </summary>
            <returns></returns>
        </member>
        <member name="M:X.CommLib.Net.IeWebControls.IeStarter.StartIExplorer(System.Boolean,System.Int32,X.CommLib.Net.IeWebControls.IeStarter.StartIeMode,System.String[])">
            <summary>
                使用process.Start的办法返回浏览器对象
                如果失败返回null
            </summary>
            <param name="maxWaitTime">等待浏览器启动时间（单位：秒） </param>
            <param name="ieMode"> 使用哪种版本的ie </param>
            <param name="hiddenIe">是否隐藏ie窗口 </param>
            <param name="startArgs">
                启动参数
                "nomerge", // 浏览器之间不相互影响 >= ie8
                "private", // 隐身模式 >= ie8, 应该为保护模式 ， InPrivate
                "nohome", //  不显示主页 >= ie6
                "extoff", // 不要插件，会看不到flash >= ie6
                "k", // 全屏显示 >= ie6，全屏后无法关闭全屏，F11也没用
                "e", // 在浏览器中显示一个文件浏览界面，好像已经没有用了
            </param>
            <returns></returns>
        </member>
        <member name="M:X.CommLib.Net.IeWebControls.IeStarter.StartInnerBrowser(System.Boolean,System.Int32,System.String)">
            <summary>
                启动内置的浏览器
            </summary>
            <param name="hiddenIe">是否隐藏浏览器</param>
            <param name="maxWaitTime">最大等待时间（秒）</param>
            <param name="startArg">启动参数</param>
            <returns></returns>
        </member>
        <member name="M:X.CommLib.Net.IeWebControls.IeStarter.BuildIeStartArgs(System.String[])">
            <summary>
                构造ie启动参数
            </summary>
            <param name="startArgs">The start args.</param>
            <returns></returns>
        </member>
        <member name="M:X.CommLib.Net.IeWebControls.IeStarter.CombinIePath(System.String)">
            <summary>
                拼接浏览器的路径
            </summary>
            <param name="programFiles"></param>
            <returns></returns>
        </member>
        <member name="M:X.CommLib.Net.IeWebControls.IeStarter.FindNewStartBrowser(System.String,SHDocVw.InternetExplorer[],System.Int32)">
            <summary>
                查找新启动的浏览器
            </summary>
            <param name="browserPath">The browser path.</param>
            <param name="existBrowsers">The exist browsers.</param>
            <param name="maxWaitTime">The max wait time.</param>
            <returns></returns>
        </member>
        <member name="M:X.CommLib.Net.IeWebControls.IeStarter.FindNewStartBrowserCore(System.String,System.Int32[])">
            <summary>
            </summary>
            <param name="browserPath">The browser path.</param>
            <param name="browserHwnds">The browser HWNDS.</param>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:X.CommLib.Net.IeWebControls.IeStarter.FindStartedBrowser(System.String,System.IntPtr)">
            <summary>
                在已经启动的浏览器中指定句柄的的浏览器
                如果没有定位到返回null
            </summary>
            <param name="browserPath">The browser path.</param>
            <param name="mainWindowHandle">The main window handle.</param>
            <returns></returns>
        </member>
        <member name="M:X.CommLib.Net.IeWebControls.IeStarter.GetAllBrowser(System.String)">
            <summary>
                返回所有的浏览器路径
            </summary>
            <param name="browserPath">The browser path.</param>
            <returns></returns>
        </member>
        <member name="M:X.CommLib.Net.IeWebControls.IeStarter.GetDefaultIePath">
            <summary>
                返回默认的ie路径
            </summary>
            <returns></returns>
        </member>
        <member name="M:X.CommLib.Net.IeWebControls.IeStarter.GetX64IePath">
            <summary>
                返回64位ie的路径
            </summary>
            <returns></returns>
        </member>
        <member name="M:X.CommLib.Net.IeWebControls.IeStarter.GetX86IePath">
            <summary>
                返回32位ie的路径
            </summary>
            <returns></returns>
        </member>
        <member name="M:X.CommLib.Net.IeWebControls.IeStarter.StartBrowserCore(System.String,System.String,System.Boolean,System.Int32)">
            <summary>
                启动浏览器
            </summary>
            <param name="browserPath">浏览器的路径.</param>
            <param name="startArg">启动参数.</param>
            <param name="hiddenIe">是否隐藏浏览器.</param>
            <param name="maxWaitTime">启动时最大的等待时间 （秒）.</param>
            <returns></returns>
            <exception cref="T:System.ApplicationException">启动浏览器失败</exception>
        </member>
        <member name="M:X.CommLib.Net.IeWebControls.IeStarter.StartBrowserProcess(System.String,System.String,System.Boolean)">
            <summary>
                启动浏览器进程
            </summary>
            <param name="browserPath">The browser path.</param>
            <param name="startArg">The start arg.</param>
            <param name="hiddenIe">
                if set to <c>true</c> [hidden ie].
            </param>
            <returns></returns>
            <exception cref="T:System.ApplicationException">启动浏览器失败</exception>
        </member>
        <member name="M:X.CommLib.Net.IeWebControls.IeStarter.Test">
            <summary>
                内部测试启动浏览器
            </summary>
        </member>
        <member name="M:X.CommLib.Net.IeWebControls.IeStarter.TestBrowser(SHDocVw.InternetExplorer)">
            <summary>
                测试浏览器
            </summary>
            <param name="iexplorer">The iexplorer.</param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:X.CommLib.Net.IeWebControls.IeStarter.TestMyBrowser">
            <summary>
                对本地浏览器的支持测试
            </summary>
        </member>
        <member name="M:X.CommLib.Net.IeWebControls.IeStarter.WaitBrowserStarted(System.String,System.Diagnostics.Process,System.Int32)">
            <summary>
                等待ie浏览器启动，如果没有启动返回null
            </summary>
            <param name="browserPath">浏览器路径.</param>
            <param name="process">当前启动的进程.</param>
            <param name="maxWaitTime">最多等待时间.(秒)</param>
            <returns></returns>
        </member>
        <member name="T:X.CommLib.Net.IeWebControls.IeWebControl">
            <summary>
                浏览器通用接口
            </summary>
        </member>
        <member name="P:X.CommLib.Net.IeWebControls.IeWebControl.ClientSize">
            <summary>
                返回客户区的大小
            </summary>
            <value>
                The size of the client.
            </value>
            <exception cref="T:System.ApplicationException">获取窗口大小失败</exception>
            <exception cref="T:System.ComponentModel.Win32Exception"></exception>
        </member>
        <member name="P:X.CommLib.Net.IeWebControls.IeWebControl.IeWinHandle">
            <summary>
                当前操作的页面对象的句柄,一般为WinHandle的子窗口
                一般为ie浏览器专用，如果有多个，则抛出异常，　"对应于Internet Explorer_Server"窗口句柄
            </summary>
            <value>
                The ie win handle.
            </value>
        </member>
        <member name="P:X.CommLib.Net.IeWebControls.IeWebControl.IeWinHandlers">
            <summary>
                返回所有Internet Explorer_Server窗口句柄
            </summary>
            <value>
                The ie win handlers.
            </value>
        </member>
        <member name="P:X.CommLib.Net.IeWebControls.IeWebControl.Size">
            <summary>
                主窗口大小
            </summary>
            <value>
                The size of the win.
            </value>
        </member>
        <member name="P:X.CommLib.Net.IeWebControls.IeWebControl.WinHandle">
            <summary>
                窗口句柄
            </summary>
        </member>
        <member name="E:X.CommLib.Net.IeWebControls.IeWebControl.OnFileDownloadEvent">
            <summary>
                文件下载完成事件
            </summary>
        </member>
        <member name="E:X.CommLib.Net.IeWebControls.IeWebControl.OnIeWebControlNavigateEvent">
            <summary>
                浏览器导航事件定义
            </summary>
        </member>
        <member name="P:X.CommLib.Net.IeWebControls.IeWebControl.HtmlDocument2">
            <summary>
                返回IHTMLDocument2接口
            </summary>
        </member>
        <member name="P:X.CommLib.Net.IeWebControls.IeWebControl.HtmlDocument3">
            <summary>
                返回IHTMLDocument3接口
            </summary>
        </member>
        <member name="P:X.CommLib.Net.IeWebControls.IeWebControl.HtmlSource">
            <summary>
                返回页面源代码，如果不存在返回null
            </summary>
            <value>
                The HTML source.
            </value>
        </member>
        <member name="P:X.CommLib.Net.IeWebControls.IeWebControl.HtmlWindow">
            <summary>
                对应的htmlwindow接口
            </summary>
        </member>
        <member name="P:X.CommLib.Net.IeWebControls.IeWebControl.IsClosed">
            <summary>
                浏览器当前是否已经关闭
            </summary>
        </member>
        <member name="P:X.CommLib.Net.IeWebControls.IeWebControl.ReadyState">
            <summary>
                当前工作的完成状态
                complete The object is completely loaded.
                interactive The object can be interacted with even though it is not fully loaded.
                loading The object is currently being loaded.
                unitialized The object is not created. Usually when the object is being downloaded.
                可能值 READYSTATE_UNINITIALIZED, READYSTATE_LOADING, READYSTATE_LOADED, READYSTATE_INTERACTIVE, READYSTATE_COMPLETE,
            </summary>
            <value>The state of the ready.</value>
        </member>
        <member name="P:X.CommLib.Net.IeWebControls.IeWebControl.Url">
            <summary>
                当前访问的地址
            </summary>
            <value>
                The URL.
            </value>
        </member>
        <member name="P:X.CommLib.Net.IeWebControls.IeWebControl.Visible">
            <summary>
                浏览器是否可见
                如果浏览器已经不存在，返回null
            </summary>
        </member>
        <member name="M:X.CommLib.Net.IeWebControls.IeWebControl.Close">
            <summary>
                关闭内容的浏览器
            </summary>
        </member>
        <member name="M:X.CommLib.Net.IeWebControls.IeWebControl.ExecJsScript(System.String)">
            <summary>
                运行指定的js脚本
            </summary>
            <param name="script"></param>
            <returns></returns>
        </member>
        <member name="M:X.CommLib.Net.IeWebControls.IeWebControl.FindChild(System.Func{mshtml.IHTMLElement,System.Boolean},mshtml.IHTMLElement,System.Boolean)">
            <summary>
                根据指定条件查找子元素，并返回找到的第一个子元素
            </summary>
            <param name="findFunc">The find function.</param>
            <param name="element">The element.</param>
            <param name="allElements">所有子元素还是第一级子元素</param>
            <returns>IEnumerable&lt;IHTMLElement&gt;.</returns>
        </member>
        <member name="M:X.CommLib.Net.IeWebControls.IeWebControl.FindChildren(System.Func{mshtml.IHTMLElement,System.Boolean},mshtml.IHTMLElement,System.Boolean)">
            <summary>
                根据 findFunc 从 element 的子元素中查找所有的符合条件的子元素
            </summary>
            <param name="findFunc">The find function.</param>
            <param name="element">The element.</param>
            <param name="allElements">所有子元素还是子级子元素.</param>
            <returns>IEnumerable&lt;IHTMLElement&gt;.</returns>
        </member>
        <member name="M:X.CommLib.Net.IeWebControls.IeWebControl.FindFlashWindowHandles">
            <summary>返回所有的flash窗口句柄</summary>
            <returns>
                The
                <see>
                    <cref>IntPtr[]</cref>
                </see>
                .
            </returns>
        </member>
        <member name="M:X.CommLib.Net.IeWebControls.IeWebControl.FindSubWindowHandles(System.String)">
            <summary>查找所有浏览器中的子窗口</summary>
            <param name="className"></param>
            <returns>
                The
                <see>
                    <cref>IntPtr[]</cref>
                </see>
                .
            </returns>
        </member>
        <member name="M:X.CommLib.Net.IeWebControls.IeWebControl.GetAttribute(mshtml.IHTMLElement,System.String,System.Boolean)">
            <summary>
                以字符串形式返回 attribute, 如果不存在，返回 null
            </summary>
            <param name="element">The element.</param>
            <param name="keyName">Name of the key.</param>
            <param name="trim">The trim.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:X.CommLib.Net.IeWebControls.IeWebControl.GetAttributeDictionary(mshtml.IHTMLElement)">
            <summary>
                返回字典形式的属性集合
            </summary>
            <param name="element">The element.</param>
            <returns>System.Collections.Generic.IDictionary&lt;System.String, System.Object&gt;.</returns>
        </member>
        <member name="M:X.CommLib.Net.IeWebControls.IeWebControl.GetAttributes(mshtml.IHTMLElement)">
            <summary>
                返回一个元素的所有属性
            </summary>
            <param name="element">The element.</param>
            <returns>System.Collections.Generic.IDictionary&lt;System.String, System.Object&gt;.</returns>
        </member>
        <member name="M:X.CommLib.Net.IeWebControls.IeWebControl.GetChildren(mshtml.IHTMLElement)">
            <summary>
                返回指定节点的子节点
            </summary>
            <param name="element">The element.</param>
            <returns>System.Collections.Generic.IEnumerable&lt;IHTMLElement&gt;.</returns>
        </member>
        <member name="M:X.CommLib.Net.IeWebControls.IeWebControl.GetCookies">
            <summary>
                返回当前的 Cookies 信息
            </summary>
            <returns>System.String.</returns>
        </member>
        <member name="M:X.CommLib.Net.IeWebControls.IeWebControl.GetElementByClassName(System.String,System.String)">
            <summary>根据类名及tag类型来查找html控件,先找tag再找classname</summary>
            <param name="className">Name of the class.</param>
            <param name="tagName">Name of the tag.</param>
            <returns>
                The
                <see>
                    <cref>IHTMLElement[]</cref>
                </see>
                E:\Apps\X.Codes\CommLib\X.CommLib.Net\Ftps\
                .
            </returns>
        </member>
        <member name="M:X.CommLib.Net.IeWebControls.IeWebControl.GetElementByClassName(mshtml.IHTMLDocument3,System.String,System.String)">
            <summary>
                Gets the name of the element by class.
            </summary>
            <param name="document">The document.</param>
            <param name="className">Name of the class.</param>
            <param name="tagName">Name of the tag.</param>
            <returns>mshtml.IHTMLElement[].</returns>
        </member>
        <member name="M:X.CommLib.Net.IeWebControls.IeWebControl.GetElementByClassName(mshtml.IHTMLElement,System.String,System.Boolean)">
            <summary>
                返回指定节点的子节点中指定 className 的第一个元素
            </summary>
            <param name="htmlElement">The HTML element.</param>
            <param name="className">Name of the class.</param>
            <param name="allChild">All child.</param>
            <returns>mshtml.IHTMLElement.</returns>
        </member>
        <member name="M:X.CommLib.Net.IeWebControls.IeWebControl.GetElementById(System.String)">
            <summary>返回对应的id的控件</summary>
            <param name="id">The id.</param>
            <returns>The <see cref="T:mshtml.IHTMLElement" />.</returns>
        </member>
        <member name="M:X.CommLib.Net.IeWebControls.IeWebControl.GetElementById(mshtml.IHTMLDocument3,System.String)">
            <summary>
                Gets the element by identifier.
            </summary>
            <param name="document">The document.</param>
            <param name="id">The identifier.</param>
            <returns>mshtml.IHTMLElement.</returns>
        </member>
        <member name="M:X.CommLib.Net.IeWebControls.IeWebControl.GetElementByPoint(System.Int32,System.Int32)">
            <summary>返回某个点上对应的html控件</summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <returns>The <see cref="T:mshtml.IHTMLElement" />.</returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:X.CommLib.Net.IeWebControls.IeWebControl.GetElementByTagName(mshtml.IHTMLElement,System.String,System.Boolean)">
            <summary>
                返回指定节点的指定tag的第一个元素
            </summary>
            <param name="htmlElement">The HTML element.</param>
            <param name="tagName">Name of the tag.</param>
            <param name="allChild">All child.</param>
            <returns>mshtml.IHTMLElement.</returns>
        </member>
        <member name="M:X.CommLib.Net.IeWebControls.IeWebControl.GetElementByTagName(System.String)">
            <summary>返回指定Tag名称的html控件</summary>
            <param name="tagName">Name of the tag.</param>
            <returns>
                The
                <see>
                    <cref>IHTMLElement[]</cref>
                </see>
                .
            </returns>
            <exception cref="T:System.ApplicationException">无效的文档接口</exception>
        </member>
        <member name="M:X.CommLib.Net.IeWebControls.IeWebControl.GetElementByTagName(mshtml.IHTMLDocument3,System.String)">
            <summary>
                返回指定节点类型的元素集合
            </summary>
            <param name="htmlDocument3">The HTML document3.</param>
            <param name="tagName">Name of the tag.</param>
            <returns>mshtml.IHTMLElement[].</returns>
        </member>
        <member name="M:X.CommLib.Net.IeWebControls.IeWebControl.GetElementsByClassName(mshtml.IHTMLElement,System.String,System.Boolean)">
            <summary>
                返回指定节点的子节点中指定 className 的元素集合
            </summary>
            <param name="htmlElement">The HTML element.</param>
            <param name="className">Name of the class.</param>
            <param name="allChild">是否指搜索子级的子级</param>
            <returns>mshtml.IHTMLElement[].</returns>
        </member>
        <member name="M:X.CommLib.Net.IeWebControls.IeWebControl.GetElementsByTagName(mshtml.IHTMLElement,System.String,System.Boolean)">
            <summary>
                返回指定节点的指定tag的元素的集合
            </summary>
            <param name="htmlElement">The HTML element.</param>
            <param name="tagName">Name of the tag.</param>
            <param name="allChild">All child.</param>
            <returns>mshtml.IHTMLElement[].</returns>
        </member>
        <member name="M:X.CommLib.Net.IeWebControls.IeWebControl.GetFrameElements">
            <summary>
                返回框架元素
            </summary>
            <returns>mshtml.IHTMLElement[].</returns>
        </member>
        <member name="M:X.CommLib.Net.IeWebControls.IeWebControl.GetHtmlAbsoluteRectangle(mshtml.IHTMLElement)">
            <summary>计算一个html对象在相对于html页面位置及大小（相对于body左上角为0, 0）</summary>
            <param name="element">The element.</param>
            <returns>The <see cref="T:System.Drawing.Rectangle" />.</returns>
            <exception cref="T:System.EntryPointNotFoundException">需要计算的控件不存在</exception>
        </member>
        <member name="M:X.CommLib.Net.IeWebControls.IeWebControl.GetImageElementData(mshtml.IHTMLImgElement,System.Drawing.Imaging.ImageFormat)">
            <summary>
                复制图像对象到本地
            </summary>
            <param name="imgElement">The img element.</param>
            <param name="format">The format.</param>
            <returns>System.Byte[].</returns>
        </member>
        <member name="M:X.CommLib.Net.IeWebControls.IeWebControl.CopyImageElementToClipboard(mshtml.IHTMLImgElement)">
            <summary>
                复制图像对象到剪贴板
            </summary>
            <param name="imgElement">The img element.</param>
        </member>
        <member name="M:X.CommLib.Net.IeWebControls.IeWebControl.IsElemeitVisible(mshtml.IHTMLElement)">
            <summary>
                对象是否可见
            </summary>
            <param name="element">The element.</param>
            <returns>System.Boolean.</returns>
        </member>
        <member name="M:X.CommLib.Net.IeWebControls.IeWebControl.KeepWidnowSize(System.Drawing.Size)">
            <summary>
                维持窗口的最小尺寸
            </summary>
            <param name="size">The size.</param>
        </member>
        <member name="M:X.CommLib.Net.IeWebControls.IeWebControl.Navigate(System.Uri,X.CommLib.Net.IeWebControls.ShDocVwIeWebControl.NaviagteFlage,System.String,System.Byte[],System.String[])">
            <summary>导航到指定的站点</summary>
            <param name="uri"></param>
            <param name="flages"></param>
            <param name="targetFrameName">_blank _parent _self _top</param>
            <param name="postData">如果需要post数据 headers中必须带有 Content-Type: application/x-www-form-urlencoded</param>
            <param name="headers"></param>
        </member>
        <member name="M:X.CommLib.Net.IeWebControls.IeWebControl.Refresh">
            <summary>
                进行刷新
            </summary>
        </member>
        <member name="M:X.CommLib.Net.IeWebControls.IeWebControl.Save(System.String)">
            <summary>保存文件至指定的文件路径</summary>
            <param name="filePath">The file path.</param>
        </member>
        <member name="M:X.CommLib.Net.IeWebControls.IeWebControl.ScrollElementIntoViewIfNeed(mshtml.IHTMLElement,System.Boolean)">
            <summary>
                移到指定的元素到可见区域， 如果已经在可见区，则不改支
            </summary>
            <param name="element">The element.</param>
            <param name="scrollToBottom">if set to <c>true</c> [scroll to bottom].</param>
        </member>
        <member name="M:X.CommLib.Net.IeWebControls.IeWebControl.TryGetElementByName(System.String)">
            <summary>
                根据名称指定的输入框
            </summary>
            <param name="name">The name.</param>
            <returns>mshtml.IHTMLElement[].</returns>
        </member>
        <member name="M:X.CommLib.Net.IeWebControls.IeWebControl.GetFlashVersion">
            <summary>返回当前的Flash版本，如果不存在返回null</summary>
            <returns>The <see cref="T:System.String" />.</returns>
        </member>
        <member name="M:X.CommLib.Net.IeWebControls.IeWebControl.GetWindowRect(System.IntPtr,ManagedWinapi.Windows.RECT@)">
            <summary>返回窗口相对于屏幕的大小</summary>
            <param name="hwnd">The HWND.</param>
            <param name="lpRect">The lp rect.</param>
            <returns>The <see cref="T:System.Boolean" />.</returns>
        </member>
        <member name="M:X.CommLib.Net.IeWebControls.IeWebControl.CopyElementArray(mshtml.IHTMLElementCollection)">
            <summary>
                复制 collection 到数组
            </summary>
            <param name="collection">The collection.</param>
            <returns>mshtml.IHTMLElement[].</returns>
        </member>
        <member name="M:X.CommLib.Net.IeWebControls.IeWebControl.FindIShockwaveFlashs">
            <summary>返回所有的flash接口</summary>
            <returns>
                The
                <see>
                    <cref>IShockwaveFlash[]</cref>
                </see>
                .
            </returns>
        </member>
        <member name="M:X.CommLib.Net.IeWebControls.IeWebControl.GetElementByClassName(System.String)">
            <summary>
                根据Classname返回指定的元素集合
            </summary>
            <param name="className">Name of the class.</param>
            <returns>mshtml.IHTMLElement[].</returns>
        </member>
        <member name="M:X.CommLib.Net.IeWebControls.IeWebControl.GetHtmlClientRectangle(mshtml.IHTMLElement)">
            <summary>返回一个html相对于iehandler的路径(浏览器视图左上角为0, 0)</summary>
            <param name="element"></param>
            <returns>The <see cref="T:System.Drawing.Rectangle" />.</returns>
        </member>
        <member name="M:X.CommLib.Net.IeWebControls.IeWebControl.GetIeWinHandle">
            <summary>返回Internet Explorer_Server"窗口句柄,如果未找到返回 0</summary>
            <returns>The <see cref="T:System.IntPtr" />.</returns>
        </member>
        <member name="M:X.CommLib.Net.IeWebControls.IeWebControl.Highlight(mshtml.IHTMLElement)">
            <summary>高亮指定的控件</summary>
            <param name="element">The element.</param>
        </member>
        <member name="M:X.CommLib.Net.IeWebControls.IeWebControl.NextElementSibling(mshtml.IHTMLElement)">
            <summary>
                返回下一个兄弟节点，如果不存在，返回 null
            </summary>
            <param name="htmlElement">The HTML element.</param>
            <returns>mshtml.IHTMLElement.</returns>
        </member>
        <member name="M:X.CommLib.Net.IeWebControls.IeWebControl.TryGetElementById(System.String)">
            <summary>尝试返回对应id的控件，如果不存在或是发生错误返回null</summary>
            <param name="id">The id.</param>
            <returns>The <see cref="T:mshtml.IHTMLElement" />.</returns>
        </member>
        <member name="M:X.CommLib.Net.IeWebControls.IeWebControl.FindInternetExplorerServerHandlers">
            <summary>返回对应Internet Explorer_Server的句柄</summary>
            <returns>
                The
                <see>
                    <cref>IntPtr[]</cref>
                </see>
                .
            </returns>
        </member>
        <member name="M:X.CommLib.Net.IeWebControls.IeWebControl.SendFileDownloadEvent">
            <summary>
                发送文件下载完成事件
            </summary>
        </member>
        <member name="M:X.CommLib.Net.IeWebControls.IeWebControl.SendIeWebNavigateEvent(X.CommLib.Net.IeWebControls.IeWebNavigateEventArgs.NavigateType,System.String,System.String,System.Exception)">
            <summary>发送浏览器导航事件</summary>
            <param name="navigateType">导航事件的类型 </param>
            <param name="url">导航事件相关的url</param>
            <param name="message">相关的描述</param>
            <param name="error">相关发生的错误</param>
        </member>
        <member name="M:X.CommLib.Net.IeWebControls.IeWebControl.SendIeWebNavigateEvent(X.CommLib.Net.IeWebControls.IeWebNavigateEventArgs)">
            <summary>发送浏览器导航事件</summary>
            <param name="e"></param>
        </member>
        <member name="M:X.CommLib.Net.IeWebControls.IeWebControl.GetClientRect(System.IntPtr,ManagedWinapi.Windows.RECT@)">
            <summary>返回窗口客户区大小</summary>
            <param name="hWnd">The h WND.</param>
            <param name="lpRect">The lp rect.</param>
            <returns>The <see cref="T:System.Boolean" />.</returns>
        </member>
        <member name="M:X.CommLib.Net.IeWebControls.IeWebControl.IsFindSubWindow(ManagedWinapi.Windows.SystemWindow,System.String)">
            <summary>指定的窗口是包括指定的窗口类</summary>
            <param name="systemWindow">The system window.</param>
            <param name="className">Name of the class.</param>
            <returns><c>true</c> if [is find sub window] [the specified system window]; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:X.CommLib.Net.IeWebControls.IeWebControl.IsIeHandle(System.IntPtr)">
            <summary>判断一个class = 'Internet Explorer_Server'是不是浏览器窗口</summary>
            <param name="ieHandler">The ie handler.</param>
            <returns><c>true</c> if [is ie handle] [the specified ie handler]; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:X.CommLib.Net.IeWebControls.IeWebControl.IsWindow(System.IntPtr)">
            <summary>是否是一个有效的win窗口</summary>
            <param name="hWnd">The h WND.</param>
            <returns>The <see cref="T:System.Boolean" />.</returns>
        </member>
        <member name="M:X.CommLib.Net.IeWebControls.IeWebControl.ElementIsInView(mshtml.IHTMLElement)">
            <summary>
                元素是否在可见区域内， 只要有一部分不在可见区域就返回 false
            </summary>
            <param name="element">The element.</param>
            <returns></returns>
        </member>
        <member name="T:X.CommLib.Net.IeWebControls.IeWebHelper">
            <summary>
                Ie辅助对象
            </summary>
        </member>
        <member name="M:X.CommLib.Net.IeWebControls.IeWebHelper.CloseAllIes">
            <summary>
                关闭所有的id浏览器
            </summary>
        </member>
        <member name="M:X.CommLib.Net.IeWebControls.IeWebHelper.CloseIeProcess(System.Diagnostics.Process[])">
            <summary>关闭当前所有的ie进程</summary>
            <param name="keepIes">需要保持的ie进程.</param>
        </member>
        <member name="M:X.CommLib.Net.IeWebControls.IeWebHelper.CopyElementArray(mshtml.IHTMLElementCollection)">
            <summary>
                复制 htmlelement 数组
            </summary>
            <param name="collection">The collection.</param>
            <returns>IHTMLElement[].</returns>
        </member>
        <member name="M:X.CommLib.Net.IeWebControls.IeWebHelper.CopyElementArray(mshtml.FramesCollection)">
            <summary>
                返回 frames 数组
            </summary>
            <param name="collection">The collection.</param>
            <returns>IHTMLElement[].</returns>
        </member>
        <member name="M:X.CommLib.Net.IeWebControls.IeWebHelper.FindHtmlElementChildren(mshtml.IHTMLElement,System.Predicate{mshtml.IHTMLElement},System.Boolean)">
            <summary>
                使用指定的查找规则查找符合条件的元素
                如果没有找到返回null
            </summary>
            <param name="element">The element.</param>
            <param name="predicate">The predicate.</param>
            <param name="recursive">是否遍历子级的子元素.</param>
            <returns>The <see cref="T:mshtml.IHTMLElement" />.</returns>
        </member>
        <member name="M:X.CommLib.Net.IeWebControls.IeWebHelper.FindHtmlElementChildrenByClassName(mshtml.IHTMLElement,System.String)">
            <summary>
                从指定的元素中指到指定class名称的子对象
                如果不存在返回null
            </summary>
            <param name="element"></param>
            <param name="className"></param>
            <returns>The <see cref="T:mshtml.IHTMLElement" />.</returns>
        </member>
        <member name="M:X.CommLib.Net.IeWebControls.IeWebHelper.HtmlElementChildren(mshtml.IHTMLElement)">
            <summary>返回指定元素的子元素</summary>
            <param name="element">The element.</param>
            <returns>
                The
                <see>
                    <cref>IHTMLElement[]</cref>
                </see>
                .
            </returns>
        </member>
        <member name="M:X.CommLib.Net.IeWebControls.IeWebHelper.CacheIeProcess">
            <summary>缓存ie进程</summary>
            <returns>
                The
                <see>
                    <cref>IEnumerable</cref>
                </see>
                .
            </returns>
        </member>
        <member name="T:X.CommLib.Net.IeWebControls.IeWebNavigateEventHandler">
            <summary>
                浏览器导航事件参数定义
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:X.CommLib.Net.IeWebControls.IeWebNavigateEventArgs">
            <summary>
                导航事件
            </summary>
        </member>
        <member name="M:X.CommLib.Net.IeWebControls.IeWebNavigateEventArgs.#ctor(X.CommLib.Net.IeWebControls.IeWebNavigateEventArgs.NavigateType,System.String,System.String,System.Exception)">
            <summary>
                使用参数进行初始化
            </summary>
            <param name="url">导航事件相关的url</param>
            <param name="message">相关的描述</param>
            <param name="error">相关发生的错误</param>
            <param name="navigateType">导航事件的类型 </param>
        </member>
        <member name="T:X.CommLib.Net.IeWebControls.IeWebNavigateEventArgs.NavigateType">
            <summary>
                导航事件的类型
            </summary>
        </member>
        <member name="F:X.CommLib.Net.IeWebControls.IeWebNavigateEventArgs.NavigateType.BeforeNavigate">
            <summary>
                开始导航
            </summary>
        </member>
        <member name="F:X.CommLib.Net.IeWebControls.IeWebNavigateEventArgs.NavigateType.NavigateComplete">
            <summary>
                导航完成
            </summary>
        </member>
        <member name="F:X.CommLib.Net.IeWebControls.IeWebNavigateEventArgs.NavigateType.NavigateError">
            <summary>
                导航发生错误
            </summary>
        </member>
        <member name="F:X.CommLib.Net.IeWebControls.IeWebNavigateEventArgs.NavigateType.DocumentComplete">
            <summary>
                文档载入完成
            </summary>
        </member>
        <member name="F:X.CommLib.Net.IeWebControls.IeWebNavigateEventArgs.NavigateType.Quit">
            <summary>
                退出
            </summary>
        </member>
        <member name="P:X.CommLib.Net.IeWebControls.IeWebNavigateEventArgs.Error">
            <summary>
                相关发生的错误
            </summary>
        </member>
        <member name="P:X.CommLib.Net.IeWebControls.IeWebNavigateEventArgs.Message">
            <summary>
                相关描述
            </summary>
        </member>
        <member name="P:X.CommLib.Net.IeWebControls.IeWebNavigateEventArgs.NavigatedType">
            <summary>
                导航事件的类型
            </summary>
        </member>
        <member name="P:X.CommLib.Net.IeWebControls.IeWebNavigateEventArgs.Url">
            <summary>
                当前访问的url
            </summary>
        </member>
        <member name="T:X.CommLib.Net.IeWebControls.UniversalEventHandle">
            <summary>
            通用事件定义
            </summary>
            <param name="sendler">The sendler.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="T:X.CommLib.Net.IeWebControls.IIeWebControl">
            <summary>
                ie浏览器控制接口
            </summary>
        </member>
        <member name="E:X.CommLib.Net.IeWebControls.IIeWebControl.OnIeWebControlNavigateEvent">
            <summary>
                浏览器导航事件
            </summary>
        </member>
        <member name="E:X.CommLib.Net.IeWebControls.IIeWebControl.OnFileDownloadEvent">
            <summary>
            文件下载完成事件
            </summary>
        </member>
        <member name="P:X.CommLib.Net.IeWebControls.IIeWebControl.HtmlDocument2">
            <summary>
                返回IHTMLDocument2接口
            </summary>
        </member>
        <member name="P:X.CommLib.Net.IeWebControls.IIeWebControl.HtmlDocument3">
            <summary>
                返回IHTMLDocument3接口
            </summary>
        </member>
        <member name="P:X.CommLib.Net.IeWebControls.IIeWebControl.HtmlSource">
            <summary>
                返回页面源代码，如果不存在返回null
            </summary>
            <value>
                The HTML source.
            </value>
        </member>
        <member name="P:X.CommLib.Net.IeWebControls.IIeWebControl.HtmlWindow">
            <summary>
                获取html窗口
            </summary>
        </member>
        <member name="P:X.CommLib.Net.IeWebControls.IIeWebControl.IsClosed">
            <summary>
                浏览器当前是否已经关闭
            </summary>
        </member>
        <member name="P:X.CommLib.Net.IeWebControls.IIeWebControl.ReadyState">
            <summary>
                当前工作的完成状态
                complete The object is completely loaded.
                interactive The object can be interacted with even though it is not fully loaded.
                loading The object is currently being loaded.
                unitialized The object is not created. Usually when the object is being downloaded.
            </summary>
            <value>The state of the ready.</value>
        </member>
        <member name="P:X.CommLib.Net.IeWebControls.IIeWebControl.Url">
            <summary>
                当前访问的地址
            </summary>
            <value>
                The URL.
            </value>
        </member>
        <member name="P:X.CommLib.Net.IeWebControls.IIeWebControl.Visible">
            <summary>
                浏览器是否可见
                如果浏览器已经不存在，返回null
            </summary>
        </member>
        <member name="M:X.CommLib.Net.IeWebControls.IIeWebControl.Close">
            <summary>
                关闭浏览器
            </summary>
        </member>
        <member name="M:X.CommLib.Net.IeWebControls.IIeWebControl.ExecJsScript(System.String)">
            <summary>运行指定的js脚本</summary>
            <param name="script"></param>
            <returns></returns>
        </member>
        <member name="M:X.CommLib.Net.IeWebControls.IIeWebControl.FindChild(System.Func{mshtml.IHTMLElement,System.Boolean},mshtml.IHTMLElement,System.Boolean)">
            <summary>
                根据指定条件查找子元素，并返回找到的第一个子元素
            </summary>
            <param name="findFunc">The find function.</param>
            <param name="element">The element.</param>
            <param name="allElements">所有子元素还是第一级子元素</param>
            <returns>IEnumerable&lt;IHTMLElement&gt;.</returns>
        </member>
        <member name="M:X.CommLib.Net.IeWebControls.IIeWebControl.FindChildren(System.Func{mshtml.IHTMLElement,System.Boolean},mshtml.IHTMLElement,System.Boolean)">
            <summary>
                根据 findFunc 从 element 的子元素中查找所有的符合条件的子元素
            </summary>
            <param name="findFunc">The find function.</param>
            <param name="element">The element.</param>
            <param name="allElements">所有子元素还是子级子元素.</param>
            <returns>IEnumerable&lt;IHTMLElement&gt;.</returns>
        </member>
        <member name="M:X.CommLib.Net.IeWebControls.IIeWebControl.FindFlashWindowHandles">
            <summary>
                返回所有的flash窗口句柄
            </summary>
            <returns></returns>
        </member>
        <member name="M:X.CommLib.Net.IeWebControls.IIeWebControl.FindSubWindowHandles(System.String)">
            <summary>查找所有浏览器中的子窗口</summary>
            <param name="className"></param>
            <returns></returns>
        </member>
        <member name="M:X.CommLib.Net.IeWebControls.IIeWebControl.GetAttribute(mshtml.IHTMLElement,System.String,System.Boolean)">
            <summary>
                以字符串形式返回 attribute, 如果不存在，返回 null
            </summary>
            <param name="element">The element.</param>
            <param name="keyName">Name of the key.</param>
            <param name="trim">The trim.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:X.CommLib.Net.IeWebControls.IIeWebControl.GetAttributeDictionary(mshtml.IHTMLElement)">
            <summary>
                返回字典形式的属性集合
            </summary>
            <param name="element">The element.</param>
            <returns>System.Collections.Generic.IDictionary&lt;System.String, System.Object&gt;.</returns>
        </member>
        <member name="M:X.CommLib.Net.IeWebControls.IIeWebControl.GetAttributes(mshtml.IHTMLElement)">
            <summary>
                返回一个元素的所有属性
            </summary>
            <param name="element">The element.</param>
            <returns>System.Collections.Generic.IDictionary&lt;System.String, System.Object&gt;.</returns>
        </member>
        <member name="M:X.CommLib.Net.IeWebControls.IIeWebControl.GetChildren(mshtml.IHTMLElement)">
            <summary>
                返回指定节点的子节点
            </summary>
            <param name="element">The element.</param>
            <returns>System.Collections.Generic.IEnumerable&lt;IHTMLElement&gt;.</returns>
        </member>
        <member name="M:X.CommLib.Net.IeWebControls.IIeWebControl.GetCookies">
            <summary>
                返回当前的 Cookies 信息
            </summary>
            <returns>System.String.</returns>
        </member>
        <member name="M:X.CommLib.Net.IeWebControls.IIeWebControl.GetElementByClassName(System.String,System.String)">
            <summary>根据类名及tag类型来查找html控件</summary>
            <param name="className">Name of the class.</param>
            <param name="tagName">Name of the tag.</param>
            <returns></returns>
        </member>
        <member name="M:X.CommLib.Net.IeWebControls.IIeWebControl.GetElementByClassName(mshtml.IHTMLElement,System.String,System.Boolean)">
            <summary>
                返回指定节点的子节点中指定 className 的第一个元素
            </summary>
            <param name="htmlElement">The HTML element.</param>
            <param name="className">Name of the class.</param>
            <param name="allChild">All child.</param>
            <returns>mshtml.IHTMLElement.</returns>
        </member>
        <member name="M:X.CommLib.Net.IeWebControls.IIeWebControl.GetElementById(System.String)">
            <summary>返回对应的id的控件</summary>
            <param name="id">The id.</param>
            <returns></returns>
        </member>
        <member name="M:X.CommLib.Net.IeWebControls.IIeWebControl.GetElementByPoint(System.Int32,System.Int32)">
            <summary>返回某个点上对应的html控件</summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <returns></returns>
        </member>
        <member name="M:X.CommLib.Net.IeWebControls.IIeWebControl.GetElementByTagName(System.String)">
            <summary>返回指定Tag名称的html控件</summary>
            <param name="tagName">Name of the tag.</param>
            <returns></returns>
            <exception cref="T:System.ApplicationException">无效的文档接口</exception>
        </member>
        <member name="M:X.CommLib.Net.IeWebControls.IIeWebControl.GetElementByTagName(mshtml.IHTMLElement,System.String,System.Boolean)">
            <summary>
                返回指定节点的指定tag的第一个元素
            </summary>
            <param name="htmlElement">The HTML element.</param>
            <param name="tagName">Name of the tag.</param>
            <param name="allChild">All child.</param>
            <returns>mshtml.IHTMLElement.</returns>
        </member>
        <member name="M:X.CommLib.Net.IeWebControls.IIeWebControl.GetElementsByClassName(mshtml.IHTMLElement,System.String,System.Boolean)">
            <summary>
                返回指定节点的子节点中指定 className 的元素集合
            </summary>
            <param name="htmlElement">The HTML element.</param>
            <param name="className">Name of the class.</param>
            <param name="allChild">是否指搜索子级的子级</param>
            <returns>mshtml.IHTMLElement[].</returns>
        </member>
        <member name="M:X.CommLib.Net.IeWebControls.IIeWebControl.GetElementsByTagName(mshtml.IHTMLElement,System.String,System.Boolean)">
            <summary>
                返回指定节点的指定tag的元素的集合
            </summary>
            <param name="htmlElement">The HTML element.</param>
            <param name="tagName">Name of the tag.</param>
            <param name="allChild">All child.</param>
            <returns>mshtml.IHTMLElement[].</returns>
        </member>
        <member name="M:X.CommLib.Net.IeWebControls.IIeWebControl.GetFrameElements">
            <summary>
                返回框架元素
            </summary>
            <returns>mshtml.IHTMLElement[].</returns>
        </member>
        <member name="M:X.CommLib.Net.IeWebControls.IIeWebControl.GetHtmlAbsoluteRectangle(mshtml.IHTMLElement)">
            <summary>计算一个html对象在相对于html页面位置及大小（相对于IeWinHandle）</summary>
            <param name="element">The element.</param>
            <returns></returns>
            <exception cref="T:System.ApplicationException">需要计算的控制不存在</exception>
        </member>
        <member name="M:X.CommLib.Net.IeWebControls.IIeWebControl.IsElemeitVisible(mshtml.IHTMLElement)">
            <summary>
                对象是否可见
            </summary>
            <param name="element">The element.</param>
            <returns>System.Boolean.</returns>
        </member>
        <member name="M:X.CommLib.Net.IeWebControls.IIeWebControl.KeepWidnowSize(System.Drawing.Size)">
            <summary>
                维持窗口的最小尺寸
            </summary>
            <param name="size">The size.</param>
        </member>
        <member name="M:X.CommLib.Net.IeWebControls.IIeWebControl.Navigate(System.Uri,X.CommLib.Net.IeWebControls.ShDocVwIeWebControl.NaviagteFlage,System.String,System.Byte[],System.String[])">
            <summary>导航到指定的站点</summary>
            <param name="uri"></param>
            <param name="flages"></param>
            <param name="targetFrameName">_blank _parent _self _top</param>
            <param name="postData">如果需要post数据 headers中必须带有 Content-Type: application/x-www-form-urlencoded</param>
            <param name="headers"></param>
        </member>
        <member name="M:X.CommLib.Net.IeWebControls.IIeWebControl.Refresh">
            <summary>
                进行刷新
            </summary>
        </member>
        <member name="M:X.CommLib.Net.IeWebControls.IIeWebControl.Save(System.String)">
            <summary>保存文件至指定的文件路径</summary>
            <param name="filePath">The file path.</param>
        </member>
        <member name="M:X.CommLib.Net.IeWebControls.IIeWebControl.ScrollElementIntoViewIfNeed(mshtml.IHTMLElement,System.Boolean)">
            <summary>移到指定的元素到可见区域</summary>
            <param name="element">The element.</param>
            <param name="scrollToBottom">The scroll To Bottom.</param>
        </member>
        <member name="M:X.CommLib.Net.IeWebControls.IIeWebControl.TryGetElementByName(System.String)">
            <summary>
                根据名称指定的输入框
            </summary>
            <param name="name">The name.</param>
            <returns>mshtml.IHTMLElement[].</returns>
        </member>
        <member name="M:X.CommLib.Net.IeWebControls.IIeWebControl.GetElementByClassName(mshtml.IHTMLDocument3,System.String,System.String)">
            <summary>
            Gets the name of the element by class.
            </summary>
            <param name="document">The document.</param>
            <param name="className">Name of the class.</param>
            <param name="tagName">Name of the tag.</param>
            <returns>mshtml.IHTMLElement[].</returns>
        </member>
        <member name="M:X.CommLib.Net.IeWebControls.IIeWebControl.GetElementByTagName(mshtml.IHTMLDocument3,System.String)">
            <summary>
            返回指定节点类型的元素集合
            </summary>
            <param name="htmlDocument3">The HTML document3.</param>
            <param name="tagName">Name of the tag.</param>
            <returns>mshtml.IHTMLElement[].</returns>
        </member>
        <member name="M:X.CommLib.Net.IeWebControls.IIeWebControl.GetElementById(mshtml.IHTMLDocument3,System.String)">
            <summary>
            Gets the element by identifier.
            </summary>
            <param name="document">The document.</param>
            <param name="id">The identifier.</param>
            <returns>mshtml.IHTMLElement.</returns>
        </member>
        <member name="M:X.CommLib.Net.IeWebControls.IIeWebControl.GetImageElementData(mshtml.IHTMLImgElement,System.Drawing.Imaging.ImageFormat)">
            <summary>
                复制图像对象到本地
            </summary>
            <param name="imgElement">The img element.</param>
            <param name="format">The format.</param>
            <returns>System.Byte[].</returns>
        </member>
        <member name="M:X.CommLib.Net.IeWebControls.IIeWebControl.CopyImageElementToClipboard(mshtml.IHTMLImgElement)">
            <summary>
            复制图像对象到剪贴板
            </summary>
            <param name="imgElement">The img element.</param>
        </member>
        <member name="T:X.CommLib.Net.IeWebControls.InternetExplorerDownloadPathGetter">
            <summary>
                internet explorer 下载目录获取器
            </summary>
        </member>
        <member name="M:X.CommLib.Net.IeWebControls.InternetExplorerDownloadPathGetter.GetDownloadFolder">
            <summary>
                返回数据保存目录
            </summary>
            <returns>System.String.</returns>
        </member>
        <member name="T:X.CommLib.Net.IeWebControls.ShDocVwIeWebControl">
            <summary>
                ie浏览器控制接口
            </summary>
        </member>
        <member name="F:X.CommLib.Net.IeWebControls.ShDocVwIeWebControl.iExplorerHWnd">
            <summary>
                浏览器使用的窗口
            </summary>
        </member>
        <member name="F:X.CommLib.Net.IeWebControls.ShDocVwIeWebControl.inneriExplorer">
            <summary>
                内部使用的浏览器对象
            </summary>
        </member>
        <member name="F:X.CommLib.Net.IeWebControls.ShDocVwIeWebControl.newChildWindows">
            <summary>
                新弹出的窗口
            </summary>
        </member>
        <member name="F:X.CommLib.Net.IeWebControls.ShDocVwIeWebControl.ieWinHandle">
            <summary>
                ie浏览器的主窗口
            </summary>
        </member>
        <member name="M:X.CommLib.Net.IeWebControls.ShDocVwIeWebControl.#ctor(System.Nullable{System.Boolean},X.CommLib.Logs.NormalLogginger.PostLoggingMessageFunc)">
            <summary>
                Initializes a new instance of the <see cref="T:X.CommLib.Net.IeWebControls.ShDocVwIeWebControl" /> class.
            </summary>
            <param name="visible">The visible.</param>
            <param name="logFunc">The log func.</param>
        </member>
        <member name="M:X.CommLib.Net.IeWebControls.ShDocVwIeWebControl.#ctor(SHDocVw.InternetExplorer,System.Nullable{System.Boolean},X.CommLib.Logs.NormalLogginger.PostLoggingMessageFunc)">
            <summary>
                使用内置的浏览器进行初始化
            </summary>
            <param name="iExplorer">The ie.</param>
            <param name="visible">浏览器初始化后是否可见，null为不改变当前状态</param>
            <param name="logFunc">The log func.</param>
            <exception cref="T:System.NotSupportedException">浏览器内核没有初始化</exception>
        </member>
        <member name="M:X.CommLib.Net.IeWebControls.ShDocVwIeWebControl.#ctor">
            <summary>
                自动创建一个浏览器进行初始化
            </summary>
        </member>
        <member name="T:X.CommLib.Net.IeWebControls.ShDocVwIeWebControl.NaviagteFlage">
            <summary>
                导航标记
            </summary>
        </member>
        <member name="F:X.CommLib.Net.IeWebControls.ShDocVwIeWebControl.NaviagteFlage.Default">
            <summary>
                The default
            </summary>
        </member>
        <member name="F:X.CommLib.Net.IeWebControls.ShDocVwIeWebControl.NaviagteFlage.navOpenInNewWindow">
            <summary>
                The nav open in new window
            </summary>
        </member>
        <member name="F:X.CommLib.Net.IeWebControls.ShDocVwIeWebControl.NaviagteFlage.navNoHistory">
            <summary>
                The nav no history
            </summary>
        </member>
        <member name="F:X.CommLib.Net.IeWebControls.ShDocVwIeWebControl.NaviagteFlage.navNoReadFromCache">
            <summary>
                The nav no read from cache
            </summary>
        </member>
        <member name="F:X.CommLib.Net.IeWebControls.ShDocVwIeWebControl.NaviagteFlage.navNoWriteToCache">
            <summary>
                The nav no write to cache
            </summary>
        </member>
        <member name="F:X.CommLib.Net.IeWebControls.ShDocVwIeWebControl.NaviagteFlage.navAllowAutosearch">
            <summary>
                The nav allow autosearch
            </summary>
        </member>
        <member name="F:X.CommLib.Net.IeWebControls.ShDocVwIeWebControl.NaviagteFlage.navBrowserBar">
            <summary>
                The nav browser bar
            </summary>
        </member>
        <member name="F:X.CommLib.Net.IeWebControls.ShDocVwIeWebControl.NaviagteFlage.navHyperlink">
            <summary>
                The nav hyperlink
            </summary>
        </member>
        <member name="F:X.CommLib.Net.IeWebControls.ShDocVwIeWebControl.NaviagteFlage.navEnforceRestricted">
            <summary>
                The nav enforce restricted
            </summary>
        </member>
        <member name="F:X.CommLib.Net.IeWebControls.ShDocVwIeWebControl.NaviagteFlage.navNewWindowsManaged">
            <summary>
                The nav new windows managed
            </summary>
        </member>
        <member name="F:X.CommLib.Net.IeWebControls.ShDocVwIeWebControl.NaviagteFlage.navUntrustedForDownload">
            <summary>
                The nav untrusted for download
            </summary>
        </member>
        <member name="F:X.CommLib.Net.IeWebControls.ShDocVwIeWebControl.NaviagteFlage.navTrustedForActiveX">
            <summary>
                The nav trusted for active x
            </summary>
        </member>
        <member name="F:X.CommLib.Net.IeWebControls.ShDocVwIeWebControl.NaviagteFlage.navOpenInNewTab">
            <summary>
                The nav open in new tab
            </summary>
        </member>
        <member name="F:X.CommLib.Net.IeWebControls.ShDocVwIeWebControl.NaviagteFlage.navOpenInBackgroundTab">
            <summary>
                The nav open in background tab
            </summary>
        </member>
        <member name="F:X.CommLib.Net.IeWebControls.ShDocVwIeWebControl.NaviagteFlage.navKeepWordWheelText">
            <summary>
                The nav keep word wheel text
            </summary>
        </member>
        <member name="F:X.CommLib.Net.IeWebControls.ShDocVwIeWebControl.NaviagteFlage.navVirtualTab">
            <summary>
                The nav virtual tab
            </summary>
        </member>
        <member name="F:X.CommLib.Net.IeWebControls.ShDocVwIeWebControl.NaviagteFlage.navBlockRedirectsXDomain">
            <summary>
                The nav block redirects x domain
            </summary>
        </member>
        <member name="F:X.CommLib.Net.IeWebControls.ShDocVwIeWebControl.NaviagteFlage.navOpenNewForegroundTab">
            <summary>
                The nav open new foreground tab
            </summary>
        </member>
        <member name="T:X.CommLib.Net.IeWebControls.ShDocVwIeWebControl.IOleWindow">
            <summary>
                Implemented and used by containers and objects to obtain window handles
                and manage context-sensitive help.
            </summary>
            <remarks>
                The IOleWindow interface provides methods that allow an application to obtain
                the handle to the various windows that participate in in-place activation,
                and also to enter and exit context-sensitive help mode.
            </remarks>
        </member>
        <member name="M:X.CommLib.Net.IeWebControls.ShDocVwIeWebControl.IOleWindow.GetWindow(System.IntPtr@)">
            <summary>
                Returns the window handle to one of the windows participating in in-place activation
                (frame, document, parent, or in-place object window).
            </summary>
            <param name="phwnd">Pointer to where to return the window handle.</param>
        </member>
        <member name="M:X.CommLib.Net.IeWebControls.ShDocVwIeWebControl.IOleWindow.ContextSensitiveHelp(System.Boolean)">
            <summary>
                Determines whether context-sensitive help mode should be entered during an
                in-place activation session.
            </summary>
            <param name="fEnterMode">
                <c>true</c> if help mode should be entered;
                <c>false</c> if it should be exited.
            </param>
        </member>
        <member name="P:X.CommLib.Net.IeWebControls.ShDocVwIeWebControl.HtmlWindow">
            <summary>
                返回IHtmlWindow2接口
                如果浏览器被关闭，则返回null
            </summary>
        </member>
        <member name="P:X.CommLib.Net.IeWebControls.ShDocVwIeWebControl.IeWinHandle">
            <summary>
                当前操作的页面对象的句柄,一般为WinHandle的子窗口
                一般为ie浏览器专用，如果有多个，则抛出异常，　"对应于Internet Explorer_Server"窗口句柄
            </summary>
            <value>
                The ie win handle.
            </value>
        </member>
        <member name="P:X.CommLib.Net.IeWebControls.ShDocVwIeWebControl.IExplorer">
            <summary>
                内部对应的浏览器对象
            </summary>
        </member>
        <member name="P:X.CommLib.Net.IeWebControls.ShDocVwIeWebControl.IsClosed">
            <summary>
                浏览器当前是否已经关闭
            </summary>
        </member>
        <member name="P:X.CommLib.Net.IeWebControls.ShDocVwIeWebControl.LockNavigate">
            <summary>
                锁定导航。当出现导航请求时会被拒绝
            </summary>
            <value>
                <c>true</c> if [lock navigate]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:X.CommLib.Net.IeWebControls.ShDocVwIeWebControl.LockNewWindow">
            <summary>
                锁定新窗口，当要求打开请窗口时会被拒绝
            </summary>
            <value>
                <c>true</c> if [lock new window]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:X.CommLib.Net.IeWebControls.ShDocVwIeWebControl.Visible">
            <summary>
                浏览器是否可见
                如果浏览器已经不存在，返回null
            </summary>
        </member>
        <member name="P:X.CommLib.Net.IeWebControls.ShDocVwIeWebControl.WinHandle">
            <summary>
                返回窗口的句柄
            </summary>
        </member>
        <member name="M:X.CommLib.Net.IeWebControls.ShDocVwIeWebControl.Close">
            <summary>
                关闭浏览器对象
            </summary>
        </member>
        <member name="M:X.CommLib.Net.IeWebControls.ShDocVwIeWebControl.MoveWindow(System.Drawing.Point)">
            <summary>
                移动窗口至指定的
            </summary>
            <param name="location">The location.</param>
        </member>
        <member name="M:X.CommLib.Net.IeWebControls.ShDocVwIeWebControl.Navigate(System.Uri,X.CommLib.Net.IeWebControls.ShDocVwIeWebControl.NaviagteFlage,System.String,System.Byte[],System.String[])">
            <summary>
                导航到指定的站点
            </summary>
            <param name="uri"></param>
            <param name="flages"> </param>
            <param name="targetFrameName">
                _blank _parent _self _top
            </param>
            <param name="postData">如果需要post数据 headers中必须带有 Content-Type: application/x-www-form-urlencoded</param>
            <param name="headers"></param>
        </member>
        <member name="M:X.CommLib.Net.IeWebControls.ShDocVwIeWebControl.Refresh">
            <summary>
                进行刷新
            </summary>
        </member>
        <member name="M:X.CommLib.Net.IeWebControls.ShDocVwIeWebControl.TopWindow">
            <summary>
                将窗口置顶
            </summary>
        </member>
        <member name="M:X.CommLib.Net.IeWebControls.ShDocVwIeWebControl.GetIHTMLDocument2(mshtml.IHTMLWindow2)">
            <summary>
                返回与htmlwin对象的document2接口
            </summary>
            <param name="iHtmlWindow2">The i HTML window2.</param>
            <returns>mshtml.IHTMLDocument2.</returns>
        </member>
        <member name="M:X.CommLib.Net.IeWebControls.ShDocVwIeWebControl.GetInternetExplorerWinInterface(SHDocVw.InternetExplorer)">
            <summary>
                返回对应于InternetExplorer的IHTMLWindow2接口
            </summary>
            <param name="iExplorer"></param>
            <returns></returns>
        </member>
        <member name="M:X.CommLib.Net.IeWebControls.ShDocVwIeWebControl.IsWindow(System.IntPtr)">
            <summary>
                指定的窗口句柄是否还存活着
            </summary>
            <param name="hWnd"></param>
            <returns></returns>
        </member>
        <member name="M:X.CommLib.Net.IeWebControls.ShDocVwIeWebControl.Test">
            <summary>
                内部测试
            </summary>
        </member>
        <member name="M:X.CommLib.Net.IeWebControls.ShDocVwIeWebControl.WindowIsClosed(System.Int32)">
            <summary>
                指定的窗口是否已经被关闭
            </summary>
            <param name="hWnd">The h WND.</param>
            <returns>System.Boolean.</returns>
        </member>
        <member name="M:X.CommLib.Net.IeWebControls.ShDocVwIeWebControl.AttachIExplorerEvents(SHDocVw.InternetExplorer)">
            <summary>
                绑定浏览器消息
            </summary>
            <param name="iExplorer"></param>
        </member>
        <member name="M:X.CommLib.Net.IeWebControls.ShDocVwIeWebControl.Close(System.IntPtr)">
            <summary>
                关闭方法2
            </summary>
            <param name="hWnd">The i explorer H WND.</param>
        </member>
        <member name="M:X.CommLib.Net.IeWebControls.ShDocVwIeWebControl.Close(SHDocVw.InternetExplorer)">
            <summary>
                关闭方法1
            </summary>
            <param name="iExplorer">The i explorer.</param>
            <returns></returns>
        </member>
        <member name="M:X.CommLib.Net.IeWebControls.ShDocVwIeWebControl.GetIeWinHandle(mshtml.IHTMLDocument2)">
            <summary>
                返回窗口句柄
            </summary>
            <param name="htmlDocument2">The HTML document2.</param>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:X.CommLib.Net.IeWebControls.ShDocVwIeWebControl.GetIExplorerHWnd(System.Object)">
            <summary>
                返回浏览器对应的窗口句柄
                如果不存在返回null
            </summary>
            <param name="pdisp"></param>
            <returns></returns>
        </member>
        <member name="M:X.CommLib.Net.IeWebControls.ShDocVwIeWebControl.IExplorerOnBeforeScriptExecute(System.Object)">
            <summary>
                准备运行脚本
            </summary>
            <param name="pDispWindow">The p disp window.</param>
        </member>
        <member name="M:X.CommLib.Net.IeWebControls.ShDocVwIeWebControl.InitIeWebControl(System.Nullable{System.Boolean},X.CommLib.Logs.NormalLogginger.PostLoggingMessageFunc)">
            <summary>
                初始化浏览器控件
            </summary>
            <param name="visible">The visible.</param>
            <param name="logFunc">The log func.</param>
            <returns></returns>
        </member>
        <member name="M:X.CommLib.Net.IeWebControls.ShDocVwIeWebControl.InternetExploreBeforeNavigate2(System.Object,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Boolean@)">
            <summary>
                准备开始导航
            </summary>
            <param name="pdisp"></param>
            <param name="url"></param>
            <param name="flags"></param>
            <param name="targetframename"></param>
            <param name="postdata"></param>
            <param name="headers"></param>
            <param name="cancel"></param>
        </member>
        <member name="M:X.CommLib.Net.IeWebControls.ShDocVwIeWebControl.InternetExploreDocumentComplete(System.Object,System.Object@)">
            <summary>
                文档载入完成
            </summary>
            <param name="pdisp"></param>
            <param name="url"></param>
        </member>
        <member name="M:X.CommLib.Net.IeWebControls.ShDocVwIeWebControl.InternetExploreNavigateComplete2(System.Object,System.Object@)">
            <summary>
                导航完成
            </summary>
            <param name="pdisp"></param>
            <param name="url"></param>
        </member>
        <member name="M:X.CommLib.Net.IeWebControls.ShDocVwIeWebControl.InternetExploreNavigateError(System.Object,System.Object@,System.Object@,System.Object@,System.Boolean@)">
            <summary>
                导航时发生错误
            </summary>
            <param name="pdisp"></param>
            <param name="url"></param>
            <param name="frame"></param>
            <param name="statuscode"></param>
            <param name="cancel"></param>
        </member>
        <member name="M:X.CommLib.Net.IeWebControls.ShDocVwIeWebControl.InternetExploreNewWindow2(System.Object@,System.Boolean@)">
            <summary>
                弹出新窗口
            </summary>
            <param name="ppDisp">The pp disp.</param>
            <param name="cancel">
                if set to <c>true</c> [cancel].
            </param>
        </member>
        <member name="M:X.CommLib.Net.IeWebControls.ShDocVwIeWebControl.InternetExploreNewWindow3(System.Object@,System.Boolean@,System.UInt32,System.String,System.String)">
            <summary>
                弹出新窗口
            </summary>
            <param name="ppdisp"></param>
            <param name="cancel"></param>
            <param name="dwflags"></param>
            <param name="bstrurlcontext">请求弹出窗口的地址</param>
            <param name="bstrurl">准备打开的窗口的地址</param>
        </member>
        <member name="M:X.CommLib.Net.IeWebControls.ShDocVwIeWebControl.InternetExploreOnQuit">
            <summary>
                浏览器退出
            </summary>
        </member>
        <member name="M:X.CommLib.Net.IeWebControls.ShDocVwIeWebControl.InternetExplorerOnFileDownload(System.Boolean,System.Boolean@)">
            <summary>
                文件下载完成
            </summary>
            <param name="activeDocument">The active document.</param>
            <param name="cancel">The cancel.</param>
        </member>
        <member name="M:X.CommLib.Net.IeWebControls.ShDocVwIeWebControl.InternetExploreWindowClosing(System.Boolean,System.Boolean@)">
            <summary>
                窗口准备被关闭
            </summary>
            <param name="ischildwindow"></param>
            <param name="cancel"></param>
        </member>
        <member name="M:X.CommLib.Net.IeWebControls.ShDocVwIeWebControl.IsMainIeHWnd(System.Nullable{System.Int32})">
            <summary>
                当前传入的窗口句柄是不是主窗口的窗口句柄
            </summary>
            <param name="hwnd">The HWND.</param>
            <returns>System.Boolean.</returns>
        </member>
        <member name="M:X.CommLib.Net.IeWebControls.ShDocVwIeWebControl.SendIExplorerEventMessage(System.String,System.Nullable{System.Int32})">
            <summary>
                发送浏览器事件消息
            </summary>
            <param name="msg"></param>
            <param name="hwnd"></param>
        </member>
        <member name="T:X.CommLib.Net.Miscellaneous.HtmlCodeFormater">
            <summary>
                格式化html代码
            </summary>
        </member>
        <member name="T:X.CommLib.Net.Miscellaneous.HtmlCodeFormater.CleanElementType">
            <summary>
                需要清理的节点类型
            </summary>
        </member>
        <member name="F:X.CommLib.Net.Miscellaneous.HtmlCodeFormater.CleanElementType.Script">
            <summary>
                脚本
            </summary>
        </member>
        <member name="F:X.CommLib.Net.Miscellaneous.HtmlCodeFormater.CleanElementType.Style">
            <summary>
                样式
            </summary>
        </member>
        <member name="F:X.CommLib.Net.Miscellaneous.HtmlCodeFormater.CleanElementType.Comment">
            <summary>
                注释
            </summary>
        </member>
        <member name="F:X.CommLib.Net.Miscellaneous.HtmlCodeFormater.CleanElementType.All">
            <summary>
                所有的，包含脚本/样式及注释
            </summary>
        </member>
        <member name="M:X.CommLib.Net.Miscellaneous.HtmlCodeFormater.CleanHtmlDocuemnt(System.String,X.CommLib.Net.Miscellaneous.HtmlCodeFormater.CleanElementType)">
            <summary>
                清除html文档中的指定节点
            </summary>
            <param name="content">The content.</param>
            <param name="elementType">Type of the element.</param>
            <returns></returns>
        </member>
        <member name="M:X.CommLib.Net.Miscellaneous.HtmlCodeFormater.CleanHtmlDocumentNodes(HtmlAgilityPack.HtmlDocument,System.String)">
            <summary>
                根据指定的xpath清理html文档
            </summary>
            <param name="document">The document.</param>
            <param name="xpath">The xpath.</param>
        </member>
        <member name="M:X.CommLib.Net.Miscellaneous.HtmlCodeFormater.GetHtmlDocumentString(HtmlAgilityPack.HtmlDocument)">
            <summary>
                返回 htmldocument的字符串表示
            </summary>
            <param name="document">The document.</param>
            <returns></returns>
        </member>
        <member name="M:X.CommLib.Net.Miscellaneous.HtmlCodeFormater.CreateHtmlDocument(System.String)">
            <summary>
                Creates the HTML document.
            </summary>
            <param name="content">The content.</param>
            <returns></returns>
        </member>
        <member name="M:X.CommLib.Net.Miscellaneous.HtmlCodeFormater.CleanHtmlDocuemnt(System.String,System.String)">
            <summary>
                清除html文档中的指定节点，节点由xpath指定
            </summary>
            <param name="content">The content.</param>
            <param name="xpath">The xpath.</param>
            <returns></returns>
        </member>
        <member name="M:X.CommLib.Net.Miscellaneous.HtmlCodeFormater.TrimJavaScript(System.String)">
            <summary>
                过滤掉html中的javascript代码部分
            </summary>
            <param name="strHtml"></param>
            <returns></returns>
        </member>
        <member name="M:X.CommLib.Net.Miscellaneous.HtmlCodeFormater.TrimTags(System.String)">
            <summary>
            去掉代码中的tag 标签
            </summary>
            <param name="strHtml">The string HTML.</param>
            <returns></returns>
        </member>
        <member name="M:X.CommLib.Net.Miscellaneous.HtmlCodeFormater.FormatHtmlCode(System.String)">
            <summary>
                清理html代码，去掉js及各种tag
            </summary>
            <param name="strHtml"></param>
            <returns></returns>
        </member>
        <member name="M:X.CommLib.Net.Miscellaneous.HtmlCodeFormater.CleanHtmlAttributes(System.String)">
            <summary>
                去除部分hmtl中的值
            </summary>
            <param name="strHtml"></param>
            <returns></returns>
        </member>
        <member name="M:X.CommLib.Net.Miscellaneous.HtmlCodeFormater.FormatTitleHtmlCode(System.String)">
            <summary>
                格式化html标题
            </summary>
            <param name="strHtml"></param>
            <returns></returns>
        </member>
        <member name="M:X.CommLib.Net.Miscellaneous.HtmlCodeFormater.StripHTML(System.String)">
            <summary>
                去除HTML标记
            </summary>
            <param name="strHtml">包括HTML的源码 </param>
            <returns>已经去除后的文字</returns>
        </member>
        <member name="M:X.CommLib.Net.Miscellaneous.HtmlCodeFormater.DecodeUtfString(System.String)">
            <summary>
            转换\uxxxx\uxxxxx格式的
            </summary>
            <param name="html">The HTML.</param>
            <returns></returns>
        </member>
        <member name="T:X.CommLib.Net.Miscellaneous.HtmlDocumentHelper">
            <summary>
                htmlDocument 的辅助函数
            </summary>
        </member>
        <member name="M:X.CommLib.Net.Miscellaneous.HtmlDocumentHelper.Test">
            <summary>
                进行测试
            </summary>
        </member>
        <member name="M:X.CommLib.Net.Miscellaneous.HtmlDocumentHelper.CopyNodeToArray(System.Xml.XPath.XPathNodeIterator)">
            <summary>复制节点至一个数组</summary>
            <param name="linkNodes">The link nodes.</param>
            <returns></returns>
        </member>
        <member name="M:X.CommLib.Net.Miscellaneous.HtmlDocumentHelper.CreateHtmlDocument(System.String)">
            <summary>创建htmlDocument对象</summary>
            <param name="content">The content.</param>
            <returns></returns>
        </member>
        <member name="M:X.CommLib.Net.Miscellaneous.HtmlDocumentHelper.CreateNavigator(System.String)">
            <summary>返回xpath  查询器</summary>
            <param name="content">The content.</param>
            <returns></returns>
        </member>
        <member name="M:X.CommLib.Net.Miscellaneous.HtmlDocumentHelper.CreateNavigatorFromFile(System.String,System.Text.Encoding)">
            <summary>返回 xpath 查询器</summary>
            <param name="filePath">The file path.</param>
            <param name="encoding">The encoding.</param>
            <returns></returns>
        </member>
        <member name="M:X.CommLib.Net.Miscellaneous.HtmlDocumentHelper.GenerateRegexBalancedConstructsRule(System.String,System.String)">
            <summary>创建正则平衡组匹配规则</summary>
            <param name="begin">开始符号.</param>
            <param name="end">结束符号.</param>
            <returns></returns>
        </member>
        <member name="M:X.CommLib.Net.Miscellaneous.HtmlDocumentHelper.GetValueByXPath(System.String,System.String)">
            <summary>
                返回指定 xpath 的节点值，如果找不到返回null
            </summary>
            <param name="webContent">Content of the web.</param>
            <param name="xpath">The xpath.</param>
            <returns></returns>
        </member>
        <member name="M:X.CommLib.Net.Miscellaneous.HtmlDocumentHelper.GetFormInputValues(System.Xml.XPath.XPathNavigator)">
            <summary>
                取出指定form下所有的值
                会过滤 submit
            </summary>
            <param name="formNode">The form node.</param>
            <returns>
                The <see cref="T:System.Collections.Generic.IDictionary`2" />.
            </returns>
            <exception cref="T:System.ArgumentNullException">formNode</exception>
        </member>
        <member name="M:X.CommLib.Net.Miscellaneous.HtmlDocumentHelper.GetFormInputValues(System.String,System.String)">
            <summary>
                返回第一个form下的所有值
                会过滤 submit
            </summary>
            <param name="webContent">Content of the web.</param>
            <param name="formId">The form id.</param>
            <returns>
                The <see cref="T:System.Collections.Generic.IDictionary`2" />.
            </returns>
        </member>
        <member name="M:X.CommLib.Net.Miscellaneous.HtmlDocumentHelper.GetHtmlDocumentString(HtmlAgilityPack.HtmlDocument)">
            <summary>返回htmldocument对象的文本内容</summary>
            <param name="document">The document.</param>
            <returns></returns>
        </member>
        <member name="M:X.CommLib.Net.Miscellaneous.HtmlDocumentHelper.GetNodeValue(System.Xml.XPath.XPathNavigator,System.String,System.String)">
            <summary>根据xpah 返回指定值</summary>
            <param name="navigator">The navigator.</param>
            <param name="xpath">The xpath.</param>
            <param name="defaultValue">The default value.</param>
            <returns>The <see cref="T:System.String" />.</returns>
        </member>
        <member name="M:X.CommLib.Net.Miscellaneous.HtmlDocumentHelper.GetNodeValue(System.String,System.String,System.String)">
            <summary>
                从 html 代码中解析出节点值
            </summary>
            <param name="webcontent">The webcontent.</param>
            <param name="xpath">The xpath.</param>
            <param name="defaultValue">The default value.</param>
            <returns></returns>
        </member>
        <member name="M:X.CommLib.Net.Miscellaneous.HtmlDocumentHelper.GetNodeValue``1(System.Xml.XPath.XPathNavigator,System.String,``0)">
            <summary>读取指定值</summary>
            <typeparam name="T">返回数据类型</typeparam>
            <param name="navigator">The navigator.</param>
            <param name="xpath">The xpath.</param>
            <param name="defaultValue">The default value.</param>
            <returns></returns>
        </member>
        <member name="M:X.CommLib.Net.Miscellaneous.HtmlDocumentHelper.RemoveElementsFlags(System.String[])">
            <summary>从HtmlNode中移除指定的节点类型</summary>
            <param name="flags">The flags.</param>
        </member>
        <member name="M:X.CommLib.Net.Miscellaneous.HtmlDocumentHelper.TryParseInputValueByAttribute(System.String,System.String,System.String,System.String,System.String@)">
            <summary>
                从文件中根据某个属性值解析对应的节点值
            </summary>
            <param name="webContent">Content of the web.</param>
            <param name="keyAttribute">用来定位的属性名.</param>
            <param name="valueAttribute">需要读取的属性名.</param>
            <param name="keyAttributeValue">用来定位的属性名的值.</param>
            <param name="value">The value.</param>
            <returns></returns>
            <exception cref="T:System.ArgumentException">没有指定名称值</exception>
        </member>
        <member name="M:X.CommLib.Net.Miscellaneous.HtmlDocumentHelper.TryParseNodeValueByAttribute(System.String,System.String,System.String,System.String,System.String,System.String@)">
            <summary>
                尝试解析节点值
            </summary>
            <param name="webContent">Content of the web.</param>
            <param name="keyAttribute">The key attribute.</param>
            <param name="valueAttribute">The value attribute.</param>
            <param name="keyAttributeValue">The key attribute value.</param>
            <param name="tagName">Name of the tag.</param>
            <param name="value">The value.</param>
            <returns></returns>
            <exception cref="T:System.ArgumentException"></exception>
        </member>
        <member name="M:X.CommLib.Net.Miscellaneous.HtmlDocumentHelper.ParseNodeValueByAttribute(System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
                解析出某个节点的值
            </summary>
            <param name="webContent">Content of the web.</param>
            <param name="keyAttribute">The key attribute.</param>
            <param name="valueAttribute">The value attribute.</param>
            <param name="keyAttributeValue">The key attribute value.</param>
            <param name="tagName">Name of the tag.</param>
            <param name="defaultValue">The default value.</param>
            <returns></returns>
        </member>
        <member name="M:X.CommLib.Net.Miscellaneous.HtmlDocumentHelper.TryParseInputValueByName(System.String,System.String,System.String@)">
            <summary>从文件中解析出指定  name 的 input value值</summary>
            <param name="webContent">Content of the web.</param>
            <param name="name">The name.</param>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:X.CommLib.Net.Miscellaneous.HtmlDocumentHelper.ParseInputValueByName(System.String,System.String,System.String)">
            <summary>
                解析指定名称的 input 值，
            </summary>
            <param name="webContent">Content of the web.</param>
            <param name="name">The name.</param>
            <param name="defaultValue">The default value.</param>
            <returns></returns>
        </member>
        <member name="M:X.CommLib.Net.Miscellaneous.HtmlDocumentHelper.TryParseInputValueById(System.String,System.String,System.String@)">
            <summary>
            从文件中解析出指定  id 的 input value值
            </summary>
            <param name="webContent">Content of the web.</param>
            <param name="id">The identifier.</param>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="T:X.CommLib.Net.Miscellaneous.HtmlParseForm">
            <summary>
            html 解析器
            </summary>
        </member>
        <member name="M:X.CommLib.Net.Miscellaneous.HtmlParseForm.ShowHtmlParseForm">
            <summary>
                显示分析窗口
            </summary>
        </member>
        <member name="M:X.CommLib.Net.Miscellaneous.HtmlParseForm.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:X.CommLib.Net.Miscellaneous.HtmlParseForm" /> class.
            </summary>
        </member>
        <member name="M:X.CommLib.Net.Miscellaneous.HtmlParseForm.xpathTextBox_TextChanged(System.Object,System.EventArgs)">
            <summary>
            输入了xPath
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs" /> instance containing the event data.</param>
        </member>
        <member name="M:X.CommLib.Net.Miscellaneous.HtmlParseForm.htmlTextBox_TextChanged(System.Object,System.EventArgs)">
            <summary>
            输入了html内容
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs" /> instance containing the event data.</param>
        </member>
        <member name="M:X.CommLib.Net.Miscellaneous.HtmlParseForm.ParseHtml">
            <summary>
            开始解析
            </summary>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:X.CommLib.Net.Miscellaneous.HtmlParseForm.resultComboBox_SelectedIndexChanged(System.Object,System.EventArgs)">
            <summary>
            查看其它匹配结果
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs" /> instance containing the event data.</param>
        </member>
        <member name="M:X.CommLib.Net.Miscellaneous.HtmlParseForm.SetFindResults(System.String[])">
            <summary>
            设置找到的结果
            </summary>
            <param name="results">The results.</param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="T:X.CommLib.Net.Miscellaneous.HtmlParseForm.FindResult">
            <summary>
            查找到的结果
            </summary>
        </member>
        <member name="M:X.CommLib.Net.Miscellaneous.HtmlParseForm.FindResult.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="P:X.CommLib.Net.Miscellaneous.HtmlParseForm.FindResult.Idx">
            <summary>
            结果索引
            </summary>
            <value>
            The idx.
            </value>
        </member>
        <member name="P:X.CommLib.Net.Miscellaneous.HtmlParseForm.FindResult.Result">
            <summary>
            结果内容
            </summary>
            <value>
            The result.
            </value>
        </member>
        <member name="M:X.CommLib.Net.Miscellaneous.HtmlParseForm.FindResult.#ctor(System.Int32,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:X.CommLib.Net.Miscellaneous.HtmlParseForm.FindResult" /> class.
            </summary>
            <param name="idx">The idx.</param>
            <param name="result">The result.</param>
        </member>
        <member name="M:X.CommLib.Net.Miscellaneous.HtmlParseForm.SetStatus(System.String,System.Exception)">
            <summary>
            设置状态 
            </summary>
            <param name="stataus">The stataus.</param>
            <param name="error">The error.</param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:X.CommLib.Net.Miscellaneous.HtmlParseForm.CopyErrorMessage(System.Exception)">
            <summary>
                复制错误信息，如果不存在则不复制
            </summary>
            <param name="error">The error.</param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:X.CommLib.Net.Miscellaneous.HtmlParseForm.FindNodeHtml(System.String,System.String)">
            <summary>
            使用xpath查找节点
            如果没有找到返回null
            如果找到返回节点的内容
            </summary>
            <param name="html">The HTML.</param>
            <param name="xpath">The xpath.</param>
            <returns></returns>
        </member>
        <member name="M:X.CommLib.Net.Miscellaneous.HtmlParseForm.CreateHtmlDocument(System.String)">
            <summary>
                创建html对象
            </summary>
            <param name="html">The HTML.</param>
            <returns></returns>
        </member>
        <member name="F:X.CommLib.Net.Miscellaneous.HtmlParseForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:X.CommLib.Net.Miscellaneous.HtmlParseForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:X.CommLib.Net.Miscellaneous.HtmlParseForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:X.CommLib.Net.Miscellaneous.HtmlTagValue">
            <summary>
                html 定义符分析，解析出tag中的参数，比如<a href='test'>Test</a>
            </summary>
        </member>
        <member name="M:X.CommLib.Net.Miscellaneous.HtmlTagValue.Test">
            <summary>
                进行内部测试
            </summary>
        </member>
        <member name="F:X.CommLib.Net.Miscellaneous.HtmlTagValue._values">
            <summary>
                保存解析出来的键值对
            </summary>
        </member>
        <member name="M:X.CommLib.Net.Miscellaneous.HtmlTagValue.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:X.CommLib.Net.Miscellaneous.HtmlTagValue" /> class.
            </summary>
        </member>
        <member name="M:X.CommLib.Net.Miscellaneous.HtmlTagValue.#ctor(System.String)">
            <summary>
                输入一个需要解析的Tag进行处理
            </summary>
            <param name="tag"></param>
        </member>
        <member name="P:X.CommLib.Net.Miscellaneous.HtmlTagValue.Tag">
            <summary>
                该定义符的类型
            </summary>
        </member>
        <member name="P:X.CommLib.Net.Miscellaneous.HtmlTagValue.Properties">
            <summary>
                属性值
            </summary>
            <value>
                The properties.
            </value>
        </member>
        <member name="P:X.CommLib.Net.Miscellaneous.HtmlTagValue.Item(System.String)">
            <summary>
            </summary>
            <param name="key"></param>
            <returns>如果指定的值未设置，返回null</returns>
        </member>
        <member name="P:X.CommLib.Net.Miscellaneous.HtmlTagValue.Text">
            <summary>
                标签的Text的内容
            </summary>
            <value>
                The text.
            </value>
        </member>
        <member name="M:X.CommLib.Net.Miscellaneous.HtmlTagValue.ToString">
            <summary>
                Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
                A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="M:X.CommLib.Net.Miscellaneous.HtmlTagValue.ParseHtmlTag(System.String)">
            <summary>
                解析html符号
            </summary>
            <param name="tag">The tag.</param>
        </member>
        <member name="M:X.CommLib.Net.Miscellaneous.HtmlTagValue.ParseHtmlTagText(System.String)">
            <summary>
                解析text部分
            </summary>
            <param name="tag">The tag.</param>
        </member>
        <member name="M:X.CommLib.Net.Miscellaneous.HtmlTagValue.ParseHtmlTagFlag(System.String)">
            <summary>
                解析html符号
            </summary>
            <param name="tag">The tag.</param>
        </member>
        <member name="M:X.CommLib.Net.Miscellaneous.HtmlTagValue.ParseHtmlTagAttribs(System.String)">
            <summary>
                解析属性
            </summary>
            <param name="tag">The tag.</param>
        </member>
        <member name="T:X.CommLib.Net.Miscellaneous.JsCodeHelper">
            <summary>
                javascript 代码的辅助函数
            </summary>
        </member>
        <member name="F:X.CommLib.Net.Miscellaneous.JsCodeHelper.JsZeroDateTime">
            <summary>
                js的标准0时时间值
            </summary>
        </member>
        <member name="M:X.CommLib.Net.Miscellaneous.JsCodeHelper.GetDateTime">
            <summary>
                返回当前时间值，对应js代码"var myDate = new Date(); return myDate.getTime();"
            </summary>
            <returns>
                The <see cref="T:System.Int64" />.
            </returns>
        </member>
        <member name="M:X.CommLib.Net.Miscellaneous.JsCodeHelper.GetUtcDateTime">
            <summary>
                返回当前的utc时间值
            </summary>
            <returns>
                The <see cref="T:System.Int64" />.
            </returns>
        </member>
        <member name="M:X.CommLib.Net.Miscellaneous.JsCodeHelper.ParseJsDateTime(System.Int64)">
            <summary>
            将js时间值转为datetime
            </summary>
            <param name="time">
            The time.
            </param>
            <returns>
            The <see cref="T:System.DateTime"/>.
            </returns>
        </member>
        <member name="M:X.CommLib.Net.Miscellaneous.JsCodeHelper.GetDateTime(System.DateTime)">
            <summary>
            返回js对应的时间值
            </summary>
            <param name="dateTime">
            The date time.
            </param>
            <returns>
            The <see cref="T:System.Int64"/>.
            </returns>
        </member>
        <member name="M:X.CommLib.Net.Miscellaneous.JsCodeHelper.Random">
            <summary>
                返回一个随机值，模拟Math.random()
            </summary>
            <returns>
                The <see cref="T:System.Double" />.
            </returns>
        </member>
        <member name="M:X.CommLib.Net.Miscellaneous.JsCodeHelper.TestGetDateTime">
            <summary>
                The test get date time.
            </summary>
        </member>
        <member name="M:X.CommLib.Net.Miscellaneous.JsCodeHelper.Test">
            <summary>
                进行测试
            </summary>
        </member>
        <member name="T:X.CommLib.Net.Miscellaneous.JsonHelper">
            <summary>
                json 辅助函数
            </summary>
        </member>
        <member name="M:X.CommLib.Net.Miscellaneous.JsonHelper.FindJToken(Newtonsoft.Json.Linq.JToken,System.Func{Newtonsoft.Json.Linq.JToken,System.Boolean})">
            <summary>
                返回第一个符合条件的token
            </summary>
            <param name="token">
                The token.
            </param>
            <param name="findFunc">
                The find function.
            </param>
            <returns>
                The <see cref="T:Newtonsoft.Json.Linq.JToken" />.
            </returns>
            <exception cref="T:System.Exception">A delegate callback throws an exception.</exception>
        </member>
        <member name="M:X.CommLib.Net.Miscellaneous.JsonHelper.FindJTokens(Newtonsoft.Json.Linq.JToken,System.Func{Newtonsoft.Json.Linq.JToken,System.Boolean})">
            <summary>
                进行历遍以找到指定的 token
            </summary>
            <param name="token">
                The root token.
            </param>
            <param name="findFunc">
                The fund function.
            </param>
            <returns>
                The
                <see>
                    <cref>JToken[]</cref>
                </see>
                .
            </returns>
            <exception cref="T:System.Exception">A delegate callback throws an exception.</exception>
        </member>
        <member name="M:X.CommLib.Net.Miscellaneous.JsonHelper.ReadJobjectToken(Newtonsoft.Json.Linq.JToken,System.String)">
            <summary>
                返回指定路径的 token　对象， 如果不存在抛出异常
            </summary>
            <param name="jtoken">
                The jtoken.
            </param>
            <param name="path">
                使用 . 分隔的路径
            </param>
            <returns>
                The <see cref="T:Newtonsoft.Json.Linq.JToken" />.
            </returns>
            <exception cref="T:System.Collections.Generic.KeyNotFoundException">指定的路径不存在.</exception>
        </member>
        <member name="M:X.CommLib.Net.Miscellaneous.JsonHelper.ReadJobjectValue``1(System.String,System.String)">
            <summary>
                从 json 字符串中读取指定路径的值
            </summary>
            <typeparam name="T">
                返回值类型
            </typeparam>
            <param name="json">
                The json.
            </param>
            <param name="path">
                路径，使用 . 进行分隔.
            </param>
            <returns>
                The <see cref="!:T" />.
            </returns>
        </member>
        <member name="M:X.CommLib.Net.Miscellaneous.JsonHelper.ReadJobjectValue``1(Newtonsoft.Json.Linq.JToken,System.String)">
            <summary>
                从 jobject 中读取一个指定路径的值
            </summary>
            <typeparam name="T">
                返回的值类型
            </typeparam>
            <param name="jtoken">
                The jtoken.
            </param>
            <param name="path">
                使用 . 分隔的路径.
            </param>
            <returns>
                The <see cref="!:T" />.
            </returns>
        </member>
        <member name="M:X.CommLib.Net.Miscellaneous.JsonHelper.ReadJobjectValues``1(System.String,System.String)">
            <summary>
                从 json 中读取指定类型的数组
            </summary>
            <typeparam name="T">
                返回值类型
            </typeparam>
            <param name="json">
                The json.
            </param>
            <param name="path">
                使用 . 分隔的路径
            </param>
            <returns>
                The
                <see>
                    <cref>IEnumerable</cref>
                </see>
                .
            </returns>
        </member>
        <member name="M:X.CommLib.Net.Miscellaneous.JsonHelper.ReadJobjectValues``1(Newtonsoft.Json.Linq.JToken,System.String)">
            <summary>
                从 json 中读取指定类型的数组
            </summary>
            <typeparam name="T">
                返回值类型
            </typeparam>
            <param name="jtoken">
                The jtoken.
            </param>
            <param name="path">
                使用 . 分隔的路径.
            </param>
            <returns>
                The
                <see>
                    <cref>IEnumerable</cref>
                </see>
                .
            </returns>
        </member>
        <member name="M:X.CommLib.Net.Miscellaneous.JsonHelper.ReadJobjectObjects``1(Newtonsoft.Json.Linq.JToken,System.String)">
            <summary>
                获取数组对象
            </summary>
            <param name="jToken">The j token.</param>
            <param name="path">The path.</param>
            <returns></returns>
        </member>
        <member name="M:X.CommLib.Net.Miscellaneous.JsonHelper.ReadJobjectObjects(Newtonsoft.Json.Linq.JToken,System.String)">
            <summary>
                获致数组对象
            </summary>
            <param name="jToken">The j token.</param>
            <param name="path">The path.</param>
            <returns></returns>
        </member>
        <member name="M:X.CommLib.Net.Miscellaneous.JsonHelper.HasJobjectToken(Newtonsoft.Json.Linq.JToken,System.String)">
            <summary>
                jtoken 对象是否有指定的属性值
            </summary>
            <param name="jtoken">
                The jtoken.
            </param>
            <param name="path">
                The path.
            </param>
            <returns>
                The <see cref="T:System.Boolean" />.
            </returns>
        </member>
        <member name="M:X.CommLib.Net.Miscellaneous.JsonHelper.TryReadJobjectToken(Newtonsoft.Json.Linq.JToken,System.String)">
            <summary>
                返回指定路径的 token　对象， 如果不存在返回null
            </summary>
            <param name="jtoken">
                The jtoken.
            </param>
            <param name="path">
                使用 . 分隔的路径
            </param>
            <returns>
                The <see cref="T:Newtonsoft.Json.Linq.JToken" />.
            </returns>
        </member>
        <member name="M:X.CommLib.Net.Miscellaneous.JsonHelper.TryReadJobjectValue``1(Newtonsoft.Json.Linq.JToken,System.String,``0)">
            <summary>
                从 jobject 中读取一个指定路径的值
            </summary>
            <typeparam name="T">
                返回的值类型
            </typeparam>
            <param name="jtoken">
                The jtoken.
            </param>
            <param name="path">
                使用 . 分隔的路径.
            </param>
            <param name="defaultValue">
                The default Value.
            </param>
            <returns>
                The <see cref="!:T" />.
            </returns>
        </member>
        <member name="T:X.CommLib.Net.Miscellaneous.ParseHtmlException">
            <summary>
            html 格式解析错误
            </summary>
        </member>
        <member name="M:X.CommLib.Net.Miscellaneous.ParseHtmlException.#ctor">
            <summary>
            默认初始化
            </summary>
        </member>
        <member name="M:X.CommLib.Net.Miscellaneous.ParseHtmlException.#ctor(System.String)">
            <summary>
             使用描述进行初始化
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:X.CommLib.Net.Miscellaneous.ParseHtmlException.#ctor(System.String,System.Exception)">
            <summary>
            使用内置错误进行初始化
            </summary>
            <param name="message"></param>
            <param name="inner"></param>
        </member>
        <member name="M:X.CommLib.Net.Miscellaneous.ParseHtmlException.#ctor(System.String,System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:X.CommLib.Net.Miscellaneous.ParseHtmlException" /> class.
            </summary>
            <param name="message">异常描述</param>
            <param name="content">相应的web内容</param>
            <param name="inner">内置的异常</param>
        </member>
        <member name="M:X.CommLib.Net.Miscellaneous.ParseHtmlException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            可能为了能序列化
            </summary>
            <param name="info"></param>
            <param name="context"></param>
        </member>
        <member name="P:X.CommLib.Net.Miscellaneous.ParseHtmlException.HtmlContent">
            <summary>
            进行分析的相关html
            </summary>
        </member>
        <member name="T:X.CommLib.Net.Miscellaneous.RandomNameGenerator">
            <summary>
                随机名称生成器
            </summary>
        </member>
        <member name="F:X.CommLib.Net.Miscellaneous.RandomNameGenerator.random">
            <summary>
                选择改名使用的随机生成器
            </summary>
        </member>
        <member name="M:X.CommLib.Net.Miscellaneous.RandomNameGenerator.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:X.CommLib.Net.Miscellaneous.RandomNameGenerator" /> class.
            </summary>
        </member>
        <member name="P:X.CommLib.Net.Miscellaneous.RandomNameGenerator.FemaleNames">
            <summary>
                可用的女性名
            </summary>
            <value>
                The female names.
            </value>
        </member>
        <member name="P:X.CommLib.Net.Miscellaneous.RandomNameGenerator.LastNames">
            <summary>
                当前可用的 last 名
            </summary>
            <value>
                The last names.
            </value>
        </member>
        <member name="P:X.CommLib.Net.Miscellaneous.RandomNameGenerator.MaleNames">
            <summary>
                可用的男性名
            </summary>
            <value>
                The male names.
            </value>
        </member>
        <member name="M:X.CommLib.Net.Miscellaneous.RandomNameGenerator.GetRandomFirstFemaleName">
            <summary>
                返回随机女性名
            </summary>
            <returns></returns>
        </member>
        <member name="M:X.CommLib.Net.Miscellaneous.RandomNameGenerator.GetRandomFirstMaleName">
            <summary>
                返回随机男性名
            </summary>
            <returns></returns>
        </member>
        <member name="M:X.CommLib.Net.Miscellaneous.RandomNameGenerator.GetRandomFirstName">
            <summary>
                Gets the random name of the first.
            </summary>
            <returns></returns>
        </member>
        <member name="M:X.CommLib.Net.Miscellaneous.RandomNameGenerator.GetRandomLastname">
            <summary>
                Gets the random lastname.
            </summary>
            <returns></returns>
        </member>
        <member name="M:X.CommLib.Net.Miscellaneous.RandomNameGenerator.GetRandomName">
            <summary>
                返回随机名，使用空格分隔
            </summary>
            <returns></returns>
        </member>
        <member name="M:X.CommLib.Net.Miscellaneous.RandomNameGenerator.Test">
            <summary>
                Tests this instance.
            </summary>
        </member>
        <member name="M:X.CommLib.Net.Miscellaneous.RandomNameGenerator.DownloadName">
            <summary>The download name.</summary>
        </member>
        <member name="M:X.CommLib.Net.Miscellaneous.RandomNameGenerator.GetRandomName(System.String[])">
            <summary>从一组名称中返回一个随机名</summary>
            <param name="names">The female names.</param>
            <returns></returns>
        </member>
        <member name="T:X.CommLib.Net.Miscellaneous.RandomWordExtensions">
            <summary>
                随机扩展函数
            </summary>
        </member>
        <member name="F:X.CommLib.Net.Miscellaneous.RandomWordExtensions.Rand">
            <summary>
                The rand.
            </summary>
        </member>
        <member name="M:X.CommLib.Net.Miscellaneous.RandomWordExtensions.Contains(System.Char[],System.Char)">
            <summary>指定的字符是否在数组中</summary>
            <param name="source">The source.</param>
            <param name="c">The c.</param>
            <returns></returns>
        </member>
        <member name="M:X.CommLib.Net.Miscellaneous.RandomWordExtensions.Random(System.String[])">
            <summary>从一组 string 中随机选择一个</summary>
            <param name="source">The source.</param>
            <returns></returns>
        </member>
        <member name="M:X.CommLib.Net.Miscellaneous.RandomWordExtensions.Random(System.Char[])">
            <summary>从一组 char 中随机选择一个</summary>
            <param name="source">The source.</param>
            <returns></returns>
        </member>
        <member name="T:X.CommLib.Net.Miscellaneous.RandomWordGenerator">
            <summary>
                随机单词生成器
            </summary>
        </member>
        <member name="F:X.CommLib.Net.Miscellaneous.RandomWordGenerator.EndConsonantComplex">
            <summary>
                The end consonant complex.
            </summary>
        </member>
        <member name="F:X.CommLib.Net.Miscellaneous.RandomWordGenerator.FinalConsonantsModified">
            <summary>
                The final consonants modified.
            </summary>
        </member>
        <member name="F:X.CommLib.Net.Miscellaneous.RandomWordGenerator.FirstSyllableHasStartConsonant">
            <summary>
                The first syllable has start consonant.
            </summary>
        </member>
        <member name="F:X.CommLib.Net.Miscellaneous.RandomWordGenerator.StartConsonantComplex">
            <summary>
                The start consonant complex.
            </summary>
        </member>
        <member name="F:X.CommLib.Net.Miscellaneous.RandomWordGenerator.SyllableHasEndConsonant">
            <summary>
                The syllable has end consonant.
            </summary>
        </member>
        <member name="F:X.CommLib.Net.Miscellaneous.RandomWordGenerator.SyllableHasStartConsonant">
            <summary>
                The syllable has start consonant.
            </summary>
        </member>
        <member name="F:X.CommLib.Net.Miscellaneous.RandomWordGenerator.VowelComplex">
            <summary>
                The vowel complex.
            </summary>
        </member>
        <member name="F:X.CommLib.Net.Miscellaneous.RandomWordGenerator.CombinedSyllableWeights">
            <summary>
                The combined syllable weights.
            </summary>
        </member>
        <member name="F:X.CommLib.Net.Miscellaneous.RandomWordGenerator.SyllableWeights">
            <summary>
                The syllable weights.
            </summary>
        </member>
        <member name="F:X.CommLib.Net.Miscellaneous.RandomWordGenerator.complexVowels">
            <summary>
                The complex vowels.
            </summary>
        </member>
        <member name="F:X.CommLib.Net.Miscellaneous.RandomWordGenerator.consonantNeverFollows">
            <summary>
                The consonant never follows.
            </summary>
        </member>
        <member name="F:X.CommLib.Net.Miscellaneous.RandomWordGenerator.endConsonants">
            <summary>
                The end consonants.
            </summary>
        </member>
        <member name="F:X.CommLib.Net.Miscellaneous.RandomWordGenerator.endConsonantsModifiable">
            <summary>
                The end consonants modifiable.
            </summary>
        </member>
        <member name="F:X.CommLib.Net.Miscellaneous.RandomWordGenerator.endConsonantsMustBeModified">
            <summary>
                The end consonants must be modified.
            </summary>
        </member>
        <member name="F:X.CommLib.Net.Miscellaneous.RandomWordGenerator.filtered">
            <summary>
                The filtered.
            </summary>
        </member>
        <member name="F:X.CommLib.Net.Miscellaneous.RandomWordGenerator.rand">
            <summary>
                The rand.
            </summary>
        </member>
        <member name="F:X.CommLib.Net.Miscellaneous.RandomWordGenerator.simpleConsonants">
            <summary>
                The simple consonants.
            </summary>
        </member>
        <member name="F:X.CommLib.Net.Miscellaneous.RandomWordGenerator.startConsonants">
            <summary>
                The start consonants.
            </summary>
        </member>
        <member name="F:X.CommLib.Net.Miscellaneous.RandomWordGenerator.vowels">
            <summary>
                The vowels.
            </summary>
        </member>
        <member name="M:X.CommLib.Net.Miscellaneous.RandomWordGenerator.#cctor">
            <summary>
                Initializes static members of the <see cref="T:X.CommLib.Net.Miscellaneous.RandomWordGenerator" /> class.
            </summary>
        </member>
        <member name="M:X.CommLib.Net.Miscellaneous.RandomWordGenerator.Word">
            <summary>生成一个随机单词.</summary>
            <returns></returns>
        </member>
        <member name="M:X.CommLib.Net.Miscellaneous.RandomWordGenerator.Word(System.Int32)">
            <summary>The word.</summary>
            <param name="syllables">The syllables.</param>
            <returns></returns>
        </member>
        <member name="M:X.CommLib.Net.Miscellaneous.RandomWordGenerator.Word(System.Int32,System.Boolean)">
            <summary>The word.</summary>
            <param name="syllables">The syllables.</param>
            <param name="filter">The filter.</param>
            <returns></returns>
            <exception cref="T:System.ArgumentException">Word must have at least 1 syllable.</exception>
            <exception cref="T:System.ArgumentException"></exception>
        </member>
        <member name="M:X.CommLib.Net.Miscellaneous.RandomWordGenerator.Syllable(System.String,System.Boolean,System.Boolean)">
            <summary>The syllable.</summary>
            <param name="previous">The previous.</param>
            <param name="makeItShort">The make it short.</param>
            <param name="isLast">The is last.</param>
            <returns></returns>
        </member>
        <member name="M:X.CommLib.Net.Miscellaneous.RandomWordGenerator.Test">
            <summary>
                The test.
            </summary>
        </member>
        <member name="T:X.CommLib.Net.Miscellaneous.Url">
            <summary>
                url 相关操作
            </summary>
        </member>
        <member name="F:X.CommLib.Net.Miscellaneous.Url.DefaultUrlRegex">
            <summary>
                是否首页判断
            </summary>
        </member>
        <member name="M:X.CommLib.Net.Miscellaneous.Url.BuildFullUrl(System.String,System.String,System.Text.Encoding)">
            <summary>
                格式化链接地址，如果是全链接，或是空值直接返回
                如果是相对链接，则拼接上baseUrl
            </summary>
            <param name="baseUrl">The base URL.</param>
            <param name="url">The URL.</param>
            <param name="encoding">The encoding.</param>
            <returns></returns>
        </member>
        <member name="M:X.CommLib.Net.Miscellaneous.Url.CombinFullUrl(System.String,System.String,System.Collections.Specialized.NameValueCollection,System.String,System.Text.Encoding)">
            <summary>
                Combins the full URL.
            </summary>
            <param name="baseUrl">The base URL.</param>
            <param name="relativeUrl">The relative URL.</param>
            <param name="query">The query.</param>
            <param name="fragment">The fragment.</param>
            <param name="encoding">对 query 中的参数进行编码</param>
            <returns></returns>
        </member>
        <member name="M:X.CommLib.Net.Miscellaneous.Url.CombinFullUrl(System.String,System.String,System.String,System.String)">
            <summary>
                合并一个完整的链接
            </summary>
            <param name="baseUrl">基础连接，必须是一个绝对链接.</param>
            <param name="relativeUrl">The relative URL.</param>
            <param name="query">建议根据需要对参数值进行正确的编码.</param>
            <param name="fragment">The fragment.</param>
            <returns></returns>
        </member>
        <member name="M:X.CommLib.Net.Miscellaneous.Url.CombinUrl(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.Text.Encoding)">
            <summary>合并url 参数</summary>
            <param name="url">The URL.</param>
            <param name="dictionary">The dictionary.</param>
            <param name="fragment">The fragment.</param>
            <param name="encoding">The encoding.</param>
            <returns></returns>
        </member>
        <member name="M:X.CommLib.Net.Miscellaneous.Url.CombinUrl(System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.String,System.Text.Encoding)">
            <summary>合并url地址</summary>
            <param name="url">The URL.</param>
            <param name="dictionary">The dictionary.</param>
            <param name="fragment">The fragment.</param>
            <param name="encoding">对dictionary参数编码时使用的编码，默认为utf8</param>
            <returns></returns>
        </member>
        <member name="M:X.CommLib.Net.Miscellaneous.Url.CombinUrl(System.String,System.Collections.Specialized.NameValueCollection,System.String,System.Text.Encoding)">
            <summary>合并url地址</summary>
            <param name="url">The URL.</param>
            <param name="querys">The querys.</param>
            <param name="fragment">The fragment.</param>
            <param name="encoding">对querys参数编码时使用的编码，默认为当前系统字符编码</param>
            <returns></returns>
        </member>
        <member name="M:X.CommLib.Net.Miscellaneous.Url.Convert(System.Collections.Specialized.NameValueCollection)">
            <summary>
                将NameValueCollection转为IDictionary
                如果有重复值，则使用;进行分隔，这个操作会丢失精度
            </summary>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:X.CommLib.Net.Miscellaneous.Url.Convert(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>将IDictionary转为NameValueCollection</summary>
            <param name="dictionary">The dictionary.</param>
            <returns></returns>
        </member>
        <member name="M:X.CommLib.Net.Miscellaneous.Url.CreateQueryCollection">
            <summary>
                创建查询集合，针对ParseQueryString的封闭
            </summary>
            <returns></returns>
        </member>
        <member name="M:X.CommLib.Net.Miscellaneous.Url.EncodeUrl(System.String,System.Text.Encoding,System.Text.Encoding)">
            <summary>转换链接参数中的编码</summary>
            <param name="url">The URL.</param>
            <param name="encodeEncoding">The encode encoding.</param>
            <param name="decodeEncoding">The decode encoding.</param>
            <returns></returns>
        </member>
        <member name="M:X.CommLib.Net.Miscellaneous.Url.GetRedirectUri(System.Uri,System.String)">
            <summary>
                返回跳转的uri
                如果redirctUrl是完整的url则直接返回redirctUrl，如果不是，则使用baseUri中的base地址加入redirctUrl相对地址
            </summary>
            <param name="baseUri">The URI. </param>
            <param name="redirctUrl">The redirct URL. </param>
            <returns></returns>
        </member>
        <member name="M:X.CommLib.Net.Miscellaneous.Url.HostInDomainList(System.String,System.String[],System.Boolean)">
            <summary>
                指定的host 是否在域名列表中，域名相等或是子域名
            </summary>
            <param name="host">The host.</param>
            <param name="domainList">The domain list.</param>
            <param name="includeSubDomain">是否要比较子域名.</param>
            <returns><c>true</c> if XXXX, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:X.CommLib.Net.Miscellaneous.Url.HostIsSubDomain(System.String,System.String[])">
            <summary>
                指定的host是不是域名列表中的域名的子域名
            </summary>
            <param name="host">The host.</param>
            <param name="domainList">The domain list.</param>
            <returns><c>true</c> if XXXX, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:X.CommLib.Net.Miscellaneous.Url.IsDefaultUrl(System.String)">
            <summary>
                指定的链接是不是 default,index 或是首页地址
            </summary>
            <param name="url">The URL.</param>
            <returns><c>true</c> if [is default URL] [the specified URL]; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:X.CommLib.Net.Miscellaneous.Url.IsSame(System.String,System.String)">
            <summary>是不是相同的地址</summary>
            <param name="url1">The url1.</param>
            <param name="url2">The url2.</param>
            <returns><c>true</c> if the specified url1 is same; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:X.CommLib.Net.Miscellaneous.Url.JoinQueryString(System.Collections.Generic.IDictionary{System.String,System.Object},System.Text.Encoding)">
            <summary>合并url request请求</summary>
            <param name="dictionary">The dictionary.</param>
            <param name="encoding">The encoding.</param>
            <returns></returns>
        </member>
        <member name="M:X.CommLib.Net.Miscellaneous.Url.JoinQueryString(System.Collections.Generic.IDictionary{System.String,System.String},System.Text.Encoding)">
            <summary>合并url request请求</summary>
            <param name="dictionary">The dictionary.</param>
            <param name="encoding">The encoding.</param>
            <returns></returns>
        </member>
        <member name="M:X.CommLib.Net.Miscellaneous.Url.JoinQueryString(System.Collections.Specialized.NameValueCollection,System.Text.Encoding)">
            <summary>合并url request请求</summary>
            <param name="collection">The collection.</param>
            <param name="encoding">The encoding.</param>
            <returns></returns>
        </member>
        <member name="M:X.CommLib.Net.Miscellaneous.Url.OutputQueriesDetail(System.String,System.Text.Encoding,System.String)">
            <summary>输出链接中的查询部分的详细信息</summary>
            <param name="queryStr">The query detail.</param>
            <param name="encoding">The encoding.</param>
            <param name="prefix">输出信息时使用的前缀字符串.</param>
        </member>
        <member name="M:X.CommLib.Net.Miscellaneous.Url.OutputUrlDetail(System.String,System.Text.Encoding,System.String)">
            <summary>在设置窗口输出链接的详细信息</summary>
            <param name="url">The URL.</param>
            <param name="encoding">The encoding.</param>
            <param name="prefix">The prefix.</param>
        </member>
        <member name="M:X.CommLib.Net.Miscellaneous.Url.ParseQueryString(System.String,System.Text.Encoding)">
            <summary>
                解析查询字符串
            </summary>
            <param name="url">如果是完整的url路径，则解析 query 部分，如果非完整的 url路径，则整个作为 query 进行解析</param>
            <param name="encoding">解析时使用的编码，如果不设置，使用本机编码</param>
            <returns></returns>
        </member>
        <member name="M:X.CommLib.Net.Miscellaneous.Url.ParseUrl(System.String,System.String@,System.Collections.Specialized.NameValueCollection@,System.Text.Encoding)">
            <summary>解析url 分成url路径部分及参数部分</summary>
            <param name="url">The URL.</param>
            <param name="urlPath">url路径部分</param>
            <param name="queries">url 参数部分.</param>
            <param name="encoding">url 编码.</param>
        </member>
        <member name="M:X.CommLib.Net.Miscellaneous.Url.ParseUrl(System.String,System.String@,System.String@,System.Collections.Specialized.NameValueCollection@,System.Text.Encoding)">
            <summary>Parses the URL.</summary>
            <param name="url">The URL.</param>
            <param name="urlPath">The URL path.</param>
            <param name="fragment">The fragment.</param>
            <param name="queries">The queries.</param>
            <param name="encoding">The encoding.</param>
        </member>
        <member name="M:X.CommLib.Net.Miscellaneous.Url.ParseUrl(System.String,System.String@,System.String@,System.Text.Encoding)">
            <summary>解析链接参数部分</summary>
            <param name="url">The URL.</param>
            <param name="urlPath">The URL path.</param>
            <param name="query">The query.</param>
            <param name="encoding">The encoding.</param>
        </member>
        <member name="M:X.CommLib.Net.Miscellaneous.Url.ParseUrl(System.String,System.String@,System.String@,System.String@,System.Text.Encoding)">
            <summary>Parses the URL.</summary>
            <param name="url">The URL.</param>
            <param name="urlPath">The URL path.</param>
            <param name="query">The query.</param>
            <param name="fragment">The fragment.</param>
            <param name="encoding">The encoding.</param>
        </member>
        <member name="M:X.CommLib.Net.Miscellaneous.Url.ParseUrl(System.String,System.Text.Encoding)">
            <summary>解析一个url返回参数部分</summary>
            <param name="url">The URL.</param>
            <param name="encoding">The encoding.</param>
            <returns></returns>
        </member>
        <member name="M:X.CommLib.Net.Miscellaneous.Url.ShowCompareUrlQuery(System.String,System.String)">
            <summary>比较两个query的值，请在Debug时使用，查看输出窗口</summary>
            <param name="query1">The query1.</param>
            <param name="query2">The query2.</param>
        </member>
        <member name="M:X.CommLib.Net.Miscellaneous.Url.UrlHasFileName(System.String,System.String)">
            <summary>链接是否包括指定的文件名</summary>
            <param name="url">The URL.</param>
            <param name="fileName">Name of the file.</param>
            <returns></returns>
        </member>
        <member name="M:X.CommLib.Net.Miscellaneous.Url.UrlHasHost(System.String,System.String)">
            <summary>url 是否指定的主机</summary>
            <param name="url">The URL.</param>
            <param name="host">The host.</param>
            <returns><c>true</c> if [is URL host] [the specified URL]; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:X.CommLib.Net.Miscellaneous.Url.UrlHasStartPath(System.String,System.String)">
            <summary>url 路径是否由指定的 path 开始的， path 前要带上 /</summary>
            <param name="url">The URL.</param>
            <param name="path">The path.</param>
            <returns></returns>
        </member>
        <member name="M:X.CommLib.Net.Miscellaneous.Url.UrlInDomainList(System.String,System.String[],System.Boolean)">
            <summary>
                指定的url 是否在域名列表中，域名相等或是子域名
            </summary>
            <param name="url">The URL.</param>
            <param name="domainList">The domain list.</param>
            <param name="includeSubDomain">if set to <c>true</c> [include sub domain].</param>
            <returns><c>true</c> if XXXX, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:X.CommLib.Net.Miscellaneous.Url.VerifyUrlFileName(System.String,System.String)">
            <summary>验证链接文件名，如果失败抛出相应的异常</summary>
            <param name="url">The URL.</param>
            <param name="fileName">Name of the file.</param>
        </member>
        <member name="M:X.CommLib.Net.Miscellaneous.Url.VerifyUrlHost(System.String,System.String)">
            <summary>验证url的主机地址，如果失败抛出相应的异常</summary>
            <param name="url">The URL.</param>
            <param name="host">The host.</param>
        </member>
        <member name="M:X.CommLib.Net.Miscellaneous.Url.Test">
            <summary>
                测试
            </summary>
        </member>
        <member name="M:X.CommLib.Net.Miscellaneous.Url.CombinUrl(System.String,System.String,System.String)">
            <summary>合并url</summary>
            <param name="url">The login URL.</param>
            <param name="queryStr">The query STR.</param>
            <param name="fragment">The fragment.</param>
            <returns></returns>
        </member>
        <member name="T:X.CommLib.Net.Miscellaneous.UserAccessException">
            <summary>
                用户被禁用
            </summary>
        </member>
        <member name="M:X.CommLib.Net.Miscellaneous.UserAccessException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:X.CommLib.Net.Miscellaneous.UserAccessException"/> class.
            </summary>
        </member>
        <member name="M:X.CommLib.Net.Miscellaneous.UserAccessException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:X.CommLib.Net.Miscellaneous.UserAccessException"/> class.
            </summary>
            <param name="message">描述错误的消息。</param>
        </member>
        <member name="M:X.CommLib.Net.Miscellaneous.UserAccessException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:X.CommLib.Net.Miscellaneous.UserAccessException"/> class.
            </summary>
            <param name="message">The message.</param>
            <param name="inner">The inner.</param>
        </member>
        <member name="M:X.CommLib.Net.Miscellaneous.UserAccessException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:X.CommLib.Net.Miscellaneous.UserAccessException"/> class.
            </summary>
            <param name="info"><see cref="T:System.Runtime.Serialization.SerializationInfo" />，它存有有关所引发异常的序列化的对象数据。</param>
            <param name="context"><see cref="T:System.Runtime.Serialization.StreamingContext" />，它包含有关源或目标的上下文信息。</param>
        </member>
        <member name="T:X.CommLib.Net.Miscellaneous.UserLoginException">
            <summary>
                用户登录异常
                因为经常用，所以这里加一个
            </summary>
        </member>
        <member name="M:X.CommLib.Net.Miscellaneous.UserLoginException.#ctor">
            <summary>Initializes a new instance of the <see cref="T:X.CommLib.Net.Miscellaneous.UserLoginException" /> class.</summary>
        </member>
        <member name="M:X.CommLib.Net.Miscellaneous.UserLoginException.#ctor(System.String)">
            <summary>Initializes a new instance of the <see cref="T:X.CommLib.Net.Miscellaneous.UserLoginException"/> class.</summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:X.CommLib.Net.Miscellaneous.UserLoginException.#ctor(System.String,System.Exception)">
            <summary>Initializes a new instance of the <see cref="T:X.CommLib.Net.Miscellaneous.UserLoginException"/> class.</summary>
            <param name="message">The message.</param>
            <param name="inner">The inner.</param>
        </member>
        <member name="M:X.CommLib.Net.Miscellaneous.UserLoginException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Initializes a new instance of the <see cref="T:X.CommLib.Net.Miscellaneous.UserLoginException"/> class.</summary>
            <param name="info">The info.</param>
            <param name="context">The context.</param>
        </member>
        <member name="T:X.CommLib.Net.Miscellaneous.VirtualAccountCreator">
            <summary>
                虚拟账号创建器
            </summary>
        </member>
        <member name="P:X.CommLib.Net.Miscellaneous.VirtualAccountCreator.EmailHosts">
            <summary>
                返回邮箱域名
            </summary>
            <value>
                The email hosts.
            </value>
        </member>
        <member name="M:X.CommLib.Net.Miscellaneous.VirtualAccountCreator.CreateRandom">
            <summary>
                创建一个随机生成器
            </summary>
            <returns></returns>
        </member>
        <member name="M:X.CommLib.Net.Miscellaneous.VirtualAccountCreator.GetRandomBrithday(System.Int32,System.Int32,System.Random)">
            <summary>返回一个随机生日</summary>
            <param name="minyears">最小年龄.</param>
            <param name="maxyears">最大年龄.</param>
            <param name="random">The random.</param>
            <returns></returns>
        </member>
        <member name="M:X.CommLib.Net.Miscellaneous.VirtualAccountCreator.GetRandomHost(System.Random)">
            <summary>返回一个随机的邮件主机</summary>
            <param name="random">The random.</param>
            <returns></returns>
        </member>
        <member name="M:X.CommLib.Net.Miscellaneous.VirtualAccountCreator.GetRandomPass">
            <summary>
                生成一个随机的密码
            </summary>
            <returns></returns>
        </member>
        <member name="M:X.CommLib.Net.Miscellaneous.VirtualAccountCreator.GetRandomEmails(System.Int32,System.Random)">
            <summary>
                生成一批随机邮箱地址
            </summary>
            <param name="number">The number.</param>
            <param name="random">The random.</param>
            <returns></returns>
        </member>
        <member name="M:X.CommLib.Net.Miscellaneous.VirtualAccountCreator.Test">
            <summary>
                进行测试
            </summary>
        </member>
        <member name="T:X.CommLib.Net.Miscellaneous.WebProcessException">
            <summary>The web process exception.</summary>
        </member>
        <member name="M:X.CommLib.Net.Miscellaneous.WebProcessException.#ctor">
            <summary>Initializes a new instance of the <see cref="T:X.CommLib.Net.Miscellaneous.WebProcessException" /> class.</summary>
        </member>
        <member name="M:X.CommLib.Net.Miscellaneous.WebProcessException.#ctor(System.String,System.String)">
            <summary>Initializes a new instance of the <see cref="T:X.CommLib.Net.Miscellaneous.WebProcessException"/> class.</summary>
            <param name="message">The message.</param>
            <param name="webContext">The web context.</param>
        </member>
        <member name="M:X.CommLib.Net.Miscellaneous.WebProcessException.#ctor(System.String,System.String,System.Exception)">
            <summary>Initializes a new instance of the <see cref="T:X.CommLib.Net.Miscellaneous.WebProcessException"/> class.</summary>
            <param name="message">The message.</param>
            <param name="webContext">The web context.</param>
            <param name="inner">The inner.</param>
        </member>
        <member name="M:X.CommLib.Net.Miscellaneous.WebProcessException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Initializes a new instance of the <see cref="T:X.CommLib.Net.Miscellaneous.WebProcessException"/> class.</summary>
            <param name="info">The info.</param>
            <param name="context">The context.</param>
        </member>
        <member name="P:X.CommLib.Net.Miscellaneous.WebProcessException.WebContext">
            <summary>
                相关的web内容
            </summary>
        </member>
        <member name="M:X.CommLib.Net.Miscellaneous.WebProcessException.ToString">
            <summary>The to string.</summary>
            <returns></returns>
        </member>
        <member name="T:X.CommLib.Net.Miscellaneous.WebProcessHelper">
            <summary>
                web处理辅助函数
            </summary>
        </member>
        <member name="M:X.CommLib.Net.Miscellaneous.WebProcessHelper.GetPostData(System.String,System.Text.Encoding)">
            <summary>
                将提交数据转为二进制
            </summary>
            <param name="data"></param>
            <param name="coding"></param>
            <returns></returns>
        </member>
        <member name="M:X.CommLib.Net.Miscellaneous.WebProcessHelper.DetectHtmlCharset(System.String,System.Text.Encoding)">
            <summary>
                检测html中定义的字符集
            </summary>
            <param name="webContent">Content of the web.</param>
            <param name="defaultEncoding">The default encoding.</param>
            <returns></returns>
        </member>
        <member name="T:X.CommLib.Net.Miscellaneous.AggregateException">
            <summary>
            表示一个异常集合
            </summary>
        </member>
        <member name="P:X.CommLib.Net.Miscellaneous.AggregateException.Exceptions">
            <summary>
            子异常集合
            </summary>
            <value>
            The exceptions.
            </value>
        </member>
        <member name="M:X.CommLib.Net.Miscellaneous.AggregateException.#ctor(System.String,System.Collections.Generic.IEnumerable{System.Exception})">
            <summary>
            Initializes a new instance of the <see cref="T:X.CommLib.Net.Miscellaneous.AggregateException" /> class.
            </summary>
            <param name="message">The message.</param>
            <param name="exceptions">The exceptions.</param>
        </member>
        <member name="T:X.CommLib.Net.WebRequestHelper.CookiesHelper">
            <summary>
                cookies 的辅助函数
            </summary>
        </member>
        <member name="P:X.CommLib.Net.WebRequestHelper.CookiesHelper.ShowInfoSeparate">
            <summary>
                输出信息时的分隔符
            </summary>
            <value>
                The show info separate.
            </value>
        </member>
        <member name="M:X.CommLib.Net.WebRequestHelper.CookiesHelper.AddCookies(System.Net.CookieContainer,System.String,System.Uri)">
            <summary>
                为cookie 窗口添加cookie值
                note: 该方法发现会丢cookie
            </summary>
            <param name="cookieCollection">The cookie collection.</param>
            <param name="cookies">The cookies.</param>
            <param name="uri">The uri.</param>
        </member>
        <member name="M:X.CommLib.Net.WebRequestHelper.CookiesHelper.CombinCookies(System.Net.WebResponse,System.String)">
            <summary>合并cookies</summary>
            <param name="webResponse"></param>
            <param name="oldCookies"></param>
            <returns></returns>
        </member>
        <member name="M:X.CommLib.Net.WebRequestHelper.CookiesHelper.CombinCookies(System.Net.WebRequest,System.String)">
            <summary>合并cookies</summary>
            <param name="webRequest">The web request. </param>
            <param name="oldCookies">The old cookies. </param>
            <returns></returns>
        </member>
        <member name="M:X.CommLib.Net.WebRequestHelper.CookiesHelper.CombinCookies(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})">
            <summary>将数组中的Cookie值合并为字符串</summary>
            <param name="cookieDictionary">The cookie dictionary.</param>
            <returns></returns>
        </member>
        <member name="M:X.CommLib.Net.WebRequestHelper.CookiesHelper.CombinCookies(System.String,System.String)">
            <summary>合并两个Cookies</summary>
            <param name="cookies">旧的cookie </param>
            <param name="appendCookies">新的cookie </param>
            <returns></returns>
        </member>
        <member name="M:X.CommLib.Net.WebRequestHelper.CookiesHelper.FormatCookie(System.String)">
            <summary>格式化cookie值</summary>
            <param name="cookieString">The cookieString. </param>
            <returns></returns>
        </member>
        <member name="M:X.CommLib.Net.WebRequestHelper.CookiesHelper.FormatCookie(System.Collections.Specialized.NameValueCollection)">
            <summary>去掉cookie中无用的数据</summary>
            <param name="header"></param>
            <returns></returns>
        </member>
        <member name="M:X.CommLib.Net.WebRequestHelper.CookiesHelper.GetResponseCookies(System.Net.WebResponse)">
            <summary>
                读取 webresponse 中的 cookie 数据
            </summary>
            <param name="webResponse">The web response.</param>
            <returns></returns>
        </member>
        <member name="M:X.CommLib.Net.WebRequestHelper.CookiesHelper.LoadPostCookiesFromFiddlerFile(System.String,System.Text.Encoding)">
            <summary>从文件中载入Cookie:部分的cookie值</summary>
            <param name="filePath">The file path. </param>
            <param name="encoding"></param>
            <returns></returns>
        </member>
        <member name="M:X.CommLib.Net.WebRequestHelper.CookiesHelper.LoadSetCookiesFromFiddlerFile(System.String,System.Text.Encoding)">
            <summary>从文件中载入Set-Cookie: 部分的cookie值</summary>
            <param name="filePath">The file path. </param>
            <param name="encoding">The encoding. </param>
            <returns></returns>
        </member>
        <member name="M:X.CommLib.Net.WebRequestHelper.CookiesHelper.ParseCookiesFromChromeCookieString(System.String)">
            <summary>
                从 chrome 中复制的 cookies 中解析出 cookies
            </summary>
            <param name="cookieString">The cookie string.</param>
            <returns></returns>
        </member>
        <member name="M:X.CommLib.Net.WebRequestHelper.CookiesHelper.ReadCookiesFromChromeCookieFile(System.String)">
            <summary>
                读取从 chrome 中取出的 cookie 值
                在 chrome 控制台(F12) -&gt; Resources -&gt; cookies 中，全选，复制，然后保存到文本文件中
            </summary>
            <param name="filePath">The file path.</param>
            <returns></returns>
        </member>
        <member name="M:X.CommLib.Net.WebRequestHelper.CookiesHelper.SaveCookiesToChromeCookieFile(System.String,System.String)">
            <summary>
                将cookies 保存以从Chrome中复制出来的格式保存到文件中
            </summary>
            <param name="filePath">The file path.</param>
            <param name="cookies">The cookies.</param>
        </member>
        <member name="M:X.CommLib.Net.WebRequestHelper.CookiesHelper.ShowCompareCookiesKey(System.String,System.String)">
            <summary>比较两个cookie的key值，请在Debug时使用，查看输出窗口</summary>
            <param name="cookies1"></param>
            <param name="cookies2"></param>
        </member>
        <member name="M:X.CommLib.Net.WebRequestHelper.CookiesHelper.ShowFiddlerGetUrls(System.String,System.String,System.Text.Encoding)">
            <summary>载入两个fiddler文件，返回两个文件中的url的不同</summary>
            <param name="file1">The file1.</param>
            <param name="file2">The file2.</param>
            <param name="encoding">The encoding.</param>
        </member>
        <member name="M:X.CommLib.Net.WebRequestHelper.CookiesHelper.ShowFiddlerInfo(System.String,System.String,System.Text.Encoding)">
            <summary>载入两个Fiddler文件，并比较其中的不同</summary>
            <param name="file1">The file1.</param>
            <param name="file2">The file2.</param>
            <param name="encoding">The encoding.</param>
        </member>
        <member name="M:X.CommLib.Net.WebRequestHelper.CookiesHelper.ShowFiddlerPostCooKies(System.String,System.String,System.Text.Encoding)">
            <summary>载入两个fiddler文件，返回两个文件中post的cookies的不同</summary>
            <param name="file1">The file1.</param>
            <param name="file2">The file2.</param>
            <param name="encoding">The encoding.</param>
        </member>
        <member name="M:X.CommLib.Net.WebRequestHelper.CookiesHelper.ShowFiddlerPostParams(System.String,System.String,System.Text.Encoding)">
            <summary>载入两个fiddler文件，返回两个文件中post的数据的不同</summary>
            <param name="file1">The file1.</param>
            <param name="file2">The file2.</param>
            <param name="encoding">The encoding.</param>
        </member>
        <member name="M:X.CommLib.Net.WebRequestHelper.CookiesHelper.ShowFiddlerSetCookies(System.String,System.String,System.Text.Encoding)">
            <summary>载入两个fiddler文件，返回两个文件中set的cookies的不同</summary>
            <param name="file1">The file1.</param>
            <param name="file2">The file2.</param>
            <param name="encoding">The encoding.</param>
        </member>
        <member name="M:X.CommLib.Net.WebRequestHelper.CookiesHelper.SplitCookies(System.String)">
            <summary>拆分cookie</summary>
            <param name="cookies"></param>
            <returns></returns>
        </member>
        <member name="M:X.CommLib.Net.WebRequestHelper.CookiesHelper.OutputCookieInfos(System.String)">
            <summary>在输出窗口输出cookie的信息</summary>
            <param name="cookies">The cookies.</param>
        </member>
        <member name="M:X.CommLib.Net.WebRequestHelper.CookiesHelper.ShowCompareDictionary(System.Collections.Generic.IDictionary{System.String,System.String},System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>在Debug窗口中显示两个dictionary 不同之处</summary>
            <param name="cookieDic1">The dic1.</param>
            <param name="cookieDic2">The dic2.</param>
        </member>
        <member name="M:X.CommLib.Net.WebRequestHelper.CookiesHelper.Test">
            <summary>
                仅内部测试使用
            </summary>
        </member>
        <member name="M:X.CommLib.Net.WebRequestHelper.CookiesHelper.LoadUrlFromFiddlerFile(System.String,System.Text.Encoding)">
            <summary>从fiddler的日志文件中提取出post的url文件</summary>
            <param name="filePath">The file path.</param>
            <param name="encoding">The encoding.</param>
            <returns></returns>
        </member>
        <member name="M:X.CommLib.Net.WebRequestHelper.CookiesHelper.LoadValueFromFiddlerFile(System.String,System.String,System.Text.Encoding)">
            <summary>从文件中载入指定值，该值则key:值，终成</summary>
            <param name="keyName">The cookie key. </param>
            <param name="filePath">The file path. </param>
            <param name="encoding">The encoding. </param>
            <returns></returns>
        </member>
        <member name="M:X.CommLib.Net.WebRequestHelper.CookiesHelper.OutputCookieInfo(System.String,System.String,System.String)">
            <summary>在输出窗口输出cookie的信息</summary>
            <param name="key">The key.</param>
            <param name="cookie">The cookie.</param>
            <param name="format">The format.</param>
        </member>
        <member name="M:X.CommLib.Net.WebRequestHelper.CookiesHelper.OutputCookieInfos(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}},System.String)">
            <summary>在deboug窗口中输出cookies的信息</summary>
            <param name="cookies">The cookies.</param>
            <param name="format">The format.</param>
        </member>
        <member name="M:X.CommLib.Net.WebRequestHelper.CookiesHelper.OutputDifferentCookieInfo(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}},System.Collections.Generic.IDictionary{System.String,System.String},System.String)">
            <summary>输出cookies 在 standardCookies中不存在的值</summary>
            <param name="cookies">The cookies.</param>
            <param name="standardCookies">The standard cookies.</param>
            <param name="format">The format.</param>
        </member>
        <member name="M:X.CommLib.Net.WebRequestHelper.CookiesHelper.OutputSameCookieInfo(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}},System.Collections.Generic.IDictionary{System.String,System.String},System.String)">
            <summary>输出cookies1, 与cookies2中有相同key的值</summary>
            <param name="cookies1">The cookies1.</param>
            <param name="cookies2">The cookies2.</param>
            <param name="format">The format.</param>
        </member>
        <member name="M:X.CommLib.Net.WebRequestHelper.CookiesHelper.SplitCookie(System.String,System.String@,System.String@)">
            <summary>解析一个cookie为key与value</summary>
            <param name="cookie"></param>
            <param name="key"></param>
            <param name="value"></param>
        </member>
        <member name="M:X.CommLib.Net.WebRequestHelper.CookiesHelper.TestLoadPostParamsFromChromeFile(System.String,System.Text.Encoding)">
            <summary>从fiddler文件中载入post的参数</summary>
            <param name="filePath">The file path.</param>
            <param name="encoding">The encoding.</param>
            <returns></returns>
        </member>
        <member name="T:X.CommLib.Net.WebRequestHelper.SynchronousWebClient">
            <summary>
                同步的web上传下载对象
                封闭了对webclient的UploadDataAsync及UploadFileAsync及DownloadFileAsync的操作。
                因为webclient在同步操作时无法接收到进度事件。
                请调用  Download/Upload/PostData/PostString函数进行调用
            </summary>
        </member>
        <member name="F:X.CommLib.Net.WebRequestHelper.SynchronousWebClient.completedEventArgs">
            <summary>
                事件处理完成后的状态
            </summary>
        </member>
        <member name="T:X.CommLib.Net.WebRequestHelper.SynchronousWebClient.WebProcessFunc">
            <summary>
                进行web操作时的回调函数
            </summary>
        </member>
        <member name="M:X.CommLib.Net.WebRequestHelper.SynchronousWebClient.DetectFileExist(System.String)">
            <summary>检测一个链接地址，如果有问题抛出异常</summary>
            <param name="url">The URL.</param>
            <returns></returns>
        </member>
        <member name="M:X.CommLib.Net.WebRequestHelper.SynchronousWebClient.Download(System.String,System.String)">
            <summary>下载文件至指定的路径</summary>
            <param name="address">The address. </param>
            <param name="fileName">Name of the file. </param>
            <returns>如果成功返回true，如果被取消返回false，如果出错抛出异常 </returns>
        </member>
        <member name="M:X.CommLib.Net.WebRequestHelper.SynchronousWebClient.PostData(System.String,System.Byte[])">
            <summary>post 数据</summary>
            <param name="address">The address.</param>
            <param name="data">The datas.</param>
            <returns></returns>
            <exception cref="T:System.OperationCanceledException">操作被取消</exception>
        </member>
        <member name="M:X.CommLib.Net.WebRequestHelper.SynchronousWebClient.PostString(System.String,System.String,System.Text.Encoding)">
            <summary>Posts the string.</summary>
            <param name="address">The address. </param>
            <param name="data">The datas. </param>
            <param name="encoding">The encoding. </param>
            <returns></returns>
        </member>
        <member name="M:X.CommLib.Net.WebRequestHelper.SynchronousWebClient.Upload(System.String,System.String)">
            <summary>上传文件</summary>
            <param name="address">上传地址 </param>
            <param name="fileName">本地文件路径. </param>
            <returns></returns>
        </member>
        <member name="M:X.CommLib.Net.WebRequestHelper.SynchronousWebClient.GetWebRequest(System.Uri)">
            <summary>为指定资源返回一个 <see cref="T:System.Net.WebRequest" /> 对象。</summary>
            <param name="address">一个 <see cref="T:System.Uri" /> ，用于标识要请求的资源。</param>
            <returns>一个新的 <see cref="T:System.Net.WebRequest" /> 对象，用于指定的资源。</returns>
        </member>
        <member name="M:X.CommLib.Net.WebRequestHelper.SynchronousWebClient.TestDownload">
            <summary>
                上载测试
            </summary>
        </member>
        <member name="M:X.CommLib.Net.WebRequestHelper.SynchronousWebClient.TestUpload">
            <summary>
                上传测试
            </summary>
        </member>
        <member name="M:X.CommLib.Net.WebRequestHelper.SynchronousWebClient.TestFieIsExist">
            <summary>
                测试文件是否存在
            </summary>
        </member>
        <member name="M:X.CommLib.Net.WebRequestHelper.SynchronousWebClient.WebProcess(X.CommLib.Net.WebRequestHelper.SynchronousWebClient.WebProcessFunc)">
            <summary>web操作处理函数</summary>
            <param name="func">The func. </param>
            <returns></returns>
            <exception cref="T:System.NotSupportedException">当前正在运行中，无法再次进行新的操作</exception>
            <exception cref="T:System.ApplicationException">无法获取当前操作完成状态</exception>
            <exception cref="T:System.IO.FileNotFoundException">11无法获取当前操作完成状111态</exception>
        </member>
        <member name="M:X.CommLib.Net.WebRequestHelper.SynchronousWebClient.WebProcessCompleted(System.Object,System.ComponentModel.AsyncCompletedEventArgs)">
            <summary>Handles the DownloadFileCompleted event of the SynchronousWebClient control.</summary>
            <param name="sender">The source of the event. </param>
            <param name="e">The <see cref="T:System.ComponentModel.AsyncCompletedEventArgs" /> instance containing the event data.</param>
        </member>
        <member name="T:X.CommLib.Net.WebRequestHelper.WebRequestCtrl">
            <summary>
                webrequest辅助类
            </summary>
        </member>
        <member name="T:X.CommLib.Net.WebRequestHelper.WebRequestCtrl.GetWebContentHandler`1">
            <summary>获取web内容函数定义</summary>
            <typeparam name="T"></typeparam>
            <param name="url">The URL.</param>
            <param name="opstData">The opst data.</param>
            <param name="cookies">The cookies.</param>
            <param name="param">The param.</param>
            <returns></returns>
        </member>
        <member name="E:X.CommLib.Net.WebRequestHelper.WebRequestCtrl.OnWebRequestCtrlFinishedEvent">
            <summary>
                访问完成事件
            </summary>
            public event WebRequestCtrlFinishedHandle OnWebRequestCtrlFinishedEvent;
        </member>
        <member name="M:X.CommLib.Net.WebRequestHelper.WebRequestCtrl.BuildPostDatas(System.Collections.Generic.IDictionary{System.String,System.String},System.Text.Encoding)">
            <summary>构建post数据</summary>
            <param name="postData">The post data.</param>
            <param name="encoding">The encoding.</param>
            <returns>
                The
                <see>
                    <cref>byte[]</cref>
                </see>
                .
            </returns>
        </member>
        <member name="M:X.CommLib.Net.WebRequestHelper.WebRequestCtrl.BuildPostDatas(System.String,System.Collections.Generic.IEnumerable{X.CommLib.Net.WebRequestHelper.WebRequestCtrl.PostContent},System.Text.Encoding)">
            <summary>
                构建上传数据，基于 RFC 1867 协议
            </summary>
            <param name="boundary">分隔符，将被设置为到.</param>
            <param name="contents">The contents.</param>
            <param name="encoding">The encoding.</param>
            <returns>System.Byte[].</returns>
        </member>
        <member name="M:X.CommLib.Net.WebRequestHelper.WebRequestCtrl.BuildPostDatas(System.Collections.Specialized.NameValueCollection,System.Text.Encoding)">
            <summary>
                构造 post 数据
            </summary>
            <param name="collection">The collection.</param>
            <param name="encoding">The encoding.</param>
            <returns></returns>
        </member>
        <member name="M:X.CommLib.Net.WebRequestHelper.WebRequestCtrl.BuildPostDatas(System.String,System.Text.Encoding)">
            <summary>使用指定的字符集编码指定的字符串至二进制数据</summary>
            <param name="postData"></param>
            <param name="encoding">编码格式，如果为空则使用当前系统值</param>
            <returns>
                The
                <see>
                    <cref>byte[]</cref>
                </see>
                .
            </returns>
        </member>
        <member name="M:X.CommLib.Net.WebRequestHelper.WebRequestCtrl.ConvertToPostContent(System.Collections.Generic.Dictionary{System.String,System.String},System.Text.Encoding)">
            <summary>
                将传转为符合 rtf 1867 的上传数据
            </summary>
            <param name="postValue">The post value.</param>
            <param name="encoding">The encoding.</param>
            <returns>System.Collections.Generic.IEnumerable&lt;X.CommLib.Net.WebRequestHelper.WebRequestCtrl.PostContent&gt;.</returns>
        </member>
        <member name="M:X.CommLib.Net.WebRequestHelper.WebRequestCtrl.CreateBoundary">
            <summary>
                创建一个分隔符 ，基于 RFC 1867 协议 使用
            </summary>
            <returns>System.String.</returns>
        </member>
        <member name="M:X.CommLib.Net.WebRequestHelper.WebRequestCtrl.DetectFile(System.String,System.Net.ICredentials)">
            <summary>检测一个链接地址，如果有问题抛出异常</summary>
            <param name="url">The URL.</param>
            <param name="credentials">The credentials.</param>
        </member>
        <member name="M:X.CommLib.Net.WebRequestHelper.WebRequestCtrl.DetectFileExist(System.String,System.Net.ICredentials)">
            <summary>检测文件是否存在，如果发生错误抛出异常</summary>
            <param name="url">The URL.</param>
            <param name="credentials">The credentials.</param>
            <returns>The <see cref="T:System.Boolean" />.</returns>
        </member>
        <member name="M:X.CommLib.Net.WebRequestHelper.WebRequestCtrl.GetHeadString(System.Net.WebResponse)">
            <summary>将 http 头数据转为字符串</summary>
            <param name="response">The response.</param>
            <returns></returns>
        </member>
        <member name="M:X.CommLib.Net.WebRequestHelper.WebRequestCtrl.GetIeWebProxy(System.String)">
            <summary>
                返回当前的ie代理
            </summary>
            <param name="proxy">The proxy.</param>
            <returns>
                The <see cref="T:System.Net.IWebProxy" />.
            </returns>
        </member>
        <member name="M:X.CommLib.Net.WebRequestHelper.WebRequestCtrl.GetRedirctUrl(System.String)">
            <summary>
                根据一个url 返回对应的跳转地址
                如果失败抛出异常
            </summary>
            <param name="url">The URL.</param>
            <returns>The <see cref="T:System.String" />.</returns>
            <exception cref="T:System.NotSupportedException">
                无法获取服务器响应
                or
                无法获取跳转链接
                or
                获取跳转链接失败
            </exception>
        </member>
        <member name="M:X.CommLib.Net.WebRequestHelper.WebRequestCtrl.GetResponse(X.CommLib.Net.WebRequestHelper.WebRequestCtrl.WebRequestCtrlSetting,System.Int32)">
            <summary>同步获取页面内容 请手工调用返回值的response.Close</summary>
            <param name="setting">The setting.</param>
            <param name="tryCount">The try count.</param>
            <returns></returns>
        </member>
        <member name="M:X.CommLib.Net.WebRequestHelper.WebRequestCtrl.GetResponse(X.CommLib.Net.WebRequestHelper.WebRequestCtrl.WebRequestCtrlSetting)">
            <summary>同步获取页面内容 请手工调用返回值的response.Close</summary>
            <param name="setting">The setting.</param>
            <returns>The <see cref="T:X.CommLib.Net.WebRequestHelper.WebRequestCtrl.WebRequestCtrlEventArgs" />.</returns>
        </member>
        <member name="M:X.CommLib.Net.WebRequestHelper.WebRequestCtrl.GetResponse(System.String,System.Byte[],System.Boolean,System.String,System.String,System.Boolean)">
            <summary>同步获取页面内容 请手工调用返回值的response.Close</summary>
            <param name="url">数据链接</param>
            <param name="postData">post的数据值</param>
            <param name="autoCombinCookie">是否自动合并cookies</param>
            <param name="cookies">处理时的cookies值</param>
            <param name="refere">引用页</param>
            <param name="autoRedirect">是否是系统自动跳转</param>
            <returns>The <see cref="T:X.CommLib.Net.WebRequestHelper.WebRequestCtrl.WebRequestCtrlEventArgs" />.</returns>
        </member>
        <member name="M:X.CommLib.Net.WebRequestHelper.WebRequestCtrl.GetResponse(System.String,System.Byte[],System.Boolean,System.String,X.CommLib.Net.WebRequestHelper.WebRequestCtrl.GetWebContentParam)">
            <summary>
                同步获取页面内容 请手工调用返回值的response.Close
            </summary>
            <param name="url">The URL.</param>
            <param name="postData">The post data.</param>
            <param name="autoCombinCookie">if set to <c>true</c> [auto combin cookie].</param>
            <param name="cookies">The cookies.</param>
            <param name="param">The param.</param>
            <returns>The <see cref="T:X.CommLib.Net.WebRequestHelper.WebRequestCtrl.WebRequestCtrlEventArgs" />.</returns>
        </member>
        <member name="M:X.CommLib.Net.WebRequestHelper.WebRequestCtrl.GetResponseData(System.Net.WebResponse)">
            <summary>返回Data 数据</summary>
            <param name="response">The response.</param>
            <returns>
                The
                <see>
                    <cref>byte[]</cref>
                </see>
                .
            </returns>
            <exception cref="T:System.ArgumentNullException">response;@无效的的WebResponse返回值</exception>
        </member>
        <member name="M:X.CommLib.Net.WebRequestHelper.WebRequestCtrl.GetResponseHead(System.String,System.Net.ICredentials)">
            <summary>使用 method = head， 返回对应的</summary>
            <param name="url">The URL.</param>
            <param name="credentials">The credentials.</param>
            <returns>The <see cref="T:System.Net.WebResponse" />.</returns>
        </member>
        <member name="M:X.CommLib.Net.WebRequestHelper.WebRequestCtrl.GetResponseHead(System.String,System.Boolean,System.Net.ICredentials)">
            <summary>不返回内容，仅返回头信息</summary>
            <param name="url">The URL.</param>
            <param name="autoRedirect">if set to <c>true</c> [automatic redirect].</param>
            <param name="credentials">The credentials.</param>
            <returns>The <see cref="T:System.Net.WebResponse" />.</returns>
        </member>
        <member name="M:X.CommLib.Net.WebRequestHelper.WebRequestCtrl.GetResponseHead(System.String,System.Boolean,System.String,System.Net.ICredentials)">
            <summary>不返回内容，仅返回头信息</summary>
            <param name="url">The URL.</param>
            <param name="autoRedirect">if set to <c>true</c> [automatic redirect].</param>
            <param name="useragent">The useragent.</param>
            <param name="credentials">The credentials.</param>
            <returns>The <see cref="T:System.Net.WebResponse" />.</returns>
        </member>
        <member name="M:X.CommLib.Net.WebRequestHelper.WebRequestCtrl.GetResponseString(System.Net.WebResponse,System.String)">
            <summary>使用指定编码页返回文字内容</summary>
            <param name="respones">The respones.</param>
            <param name="charset">Name of the encoding.</param>
            <returns>The <see cref="T:System.String" />.</returns>
        </member>
        <member name="M:X.CommLib.Net.WebRequestHelper.WebRequestCtrl.GetResponseString(System.Net.WebResponse,System.Text.Encoding)">
            <summary>使用指定编码页返回文字内容</summary>
            <param name="respones">The respones.</param>
            <param name="encoding">The encoding.</param>
            <returns>The <see cref="T:System.String" />.</returns>
        </member>
        <member name="M:X.CommLib.Net.WebRequestHelper.WebRequestCtrl.GetUrlHttpStatusCode(System.String,System.String,System.String@)">
            <summary>返回指定链接的状态码</summary>
            <param name="url">The URL.</param>
            <param name="useragent">The useragent.</param>
            <param name="statusMessage">状态说明.</param>
            <returns></returns>
            <exception cref="T:System.NotSupportedException">查询时返回非 HttpWebResponse</exception>
        </member>
        <member name="M:X.CommLib.Net.WebRequestHelper.WebRequestCtrl.GetWebContent(System.String,System.Byte[],System.String@,System.Int32,X.CommLib.Net.WebRequestHelper.WebRequestCtrl.GetWebContentParam)">
            <summary>同步获取页面文字内容，可以指定出现多少次错误后才失败</summary>
            <param name="url">The URL.</param>
            <param name="postData">The post data.</param>
            <param name="cookies">如果为null，不需要获取cookies</param>
            <param name="maxErr">允许出现的错误次数，只有1-7次</param>
            <param name="param">The param.</param>
            <returns>The <see cref="T:System.String" />.</returns>
        </member>
        <member name="M:X.CommLib.Net.WebRequestHelper.WebRequestCtrl.GetWebContent(System.String,System.Byte[],System.String@,System.String,System.Int32,X.CommLib.Net.WebRequestHelper.WebRequestCtrl.GetWebContentParam)">
            <summary>
                Gets the content of the web.
            </summary>
            <param name="url">The URL.</param>
            <param name="postData">The post data.</param>
            <param name="cookies">The cookies.</param>
            <param name="refere">The refere.</param>
            <param name="maxErr">The max err.</param>
            <param name="param">The param.</param>
            <returns>The <see cref="T:System.String" />.</returns>
        </member>
        <member name="M:X.CommLib.Net.WebRequestHelper.WebRequestCtrl.GetWebContentBuffer(System.String,System.Byte[],System.String@,System.Int32,X.CommLib.Net.WebRequestHelper.WebRequestCtrl.GetWebContentParam)">
            <summary>同步获取页面内容的二进制流</summary>
            <param name="url">The URL.</param>
            <param name="postData">The post data.</param>
            <param name="cookies">The cookies.</param>
            <param name="maxErr">允许出现的错误次数，只有1-7次</param>
            <param name="param">The param.</param>
            <returns>
                The
                <see>
                    <cref>byte[]</cref>
                </see>
                .
            </returns>
        </member>
        <member name="M:X.CommLib.Net.WebRequestHelper.WebRequestCtrl.GetWebContexts(System.String,System.Byte[],System.String@,System.Int32)">
            <summary>同步获取页面文字内容，可以指定出现多少次错误后才失败</summary>
            <param name="url">The URL.</param>
            <param name="postData">The post data.</param>
            <param name="cookies">如果为null，不需要获取cookies</param>
            <param name="maxErr">允许出现的错误次数，只有1-7次</param>
            <returns>The <see cref="T:System.String" />.</returns>
        </member>
        <member name="M:X.CommLib.Net.WebRequestHelper.WebRequestCtrl.GetWebRequest(X.CommLib.Net.WebRequestHelper.WebRequestCtrl.WebRequestCtrlSetting)">
            <summary>返回一个浏览器对象</summary>
            <param name="setting">生成参数</param>
            <returns>The <see cref="T:System.Net.HttpWebRequest" />.</returns>
        </member>
        <member name="M:X.CommLib.Net.WebRequestHelper.WebRequestCtrl.IsFileNotFoundException(System.Net.WebException)">
            <summary>是否是文件不存在异常的（404）</summary>
            <param name="error">The error.</param>
            <returns><c>true</c> if [is file not found exception] [the specified error]; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:X.CommLib.Net.WebRequestHelper.WebRequestCtrl.JoinQueryString(System.Collections.Specialized.NameValueCollection,System.Text.Encoding)">
            <summary>合并url request请求</summary>
            <param name="collection">The collection.</param>
            <param name="encoding">The encoding.</param>
            <returns>The <see cref="T:System.String" />.</returns>
        </member>
        <member name="M:X.CommLib.Net.WebRequestHelper.WebRequestCtrl.ParseHttpStatusCode(System.Net.WebException)">
            <summary>
                WebException 从异常中解析出错误状态 ，如果 不存在则返回 null
            </summary>
            <param name="error">The error.</param>
            <returns>
                The <see cref="T:System.Net.HttpStatusCode" />.
            </returns>
        </member>
        <member name="M:X.CommLib.Net.WebRequestHelper.WebRequestCtrl.ParseHttpStatusCode(System.Net.WebException,System.String@)">
            <summary>
                解析一个web错误中的statusCode
            </summary>
            <param name="error">The error.</param>
            <param name="description">The description.</param>
            <returns></returns>
        </member>
        <member name="M:X.CommLib.Net.WebRequestHelper.WebRequestCtrl.ParseQueryString(System.String,System.Text.Encoding)">
            <summary>Parses the query string.</summary>
            <param name="url">The URL.</param>
            <param name="encoding"></param>
            <returns>The <see cref="T:System.Collections.Specialized.NameValueCollection" />.</returns>
        </member>
        <member name="M:X.CommLib.Net.WebRequestHelper.WebRequestCtrl.SetRequestCookies(System.Net.HttpWebRequest,System.String)">
            <summary>设置http头中的cookie值</summary>
            <param name="httpReq">The HTTP req.</param>
            <param name="cookies">The cookies.</param>
        </member>
        <member name="M:X.CommLib.Net.WebRequestHelper.WebRequestCtrl.TryDetectProxySpeed(System.String,System.String)">
            <summary>
                测试代理的地址
            </summary>
            <param name="proxy">需要测试的代码.</param>
            <param name="url">用来测试的地址</param>
            <returns></returns>
        </member>
        <member name="M:X.CommLib.Net.WebRequestHelper.WebRequestCtrl.TryParseEncodingFromContentTypeNode(System.String)">
            <summary>
                从 html 的 meta content-type 节点解析出字符编码
            </summary>
            <param name="html">The HTML.</param>
            <returns></returns>
        </member>
        <member name="M:X.CommLib.Net.WebRequestHelper.WebRequestCtrl.BeginGetResponse(X.CommLib.Net.WebRequestHelper.WebRequestCtrl.WebRequestCtrlSetting)">
            <summary>异步获取web返回值</summary>
            <param name="requestSetting"></param>
        </member>
        <member name="M:X.CommLib.Net.WebRequestHelper.WebRequestCtrl.BeginGetResponse(System.String,System.Byte[],System.Boolean,System.String)">
            <summary>异步获取web返回值</summary>
            <param name="url"></param>
            <param name="postData"></param>
            <param name="autoCombinCookie"></param>
            <param name="cookies"></param>
        </member>
        <member name="M:X.CommLib.Net.WebRequestHelper.WebRequestCtrl.Test">
            <summary>
                Tests this instance.
            </summary>
        </member>
        <member name="M:X.CommLib.Net.WebRequestHelper.WebRequestCtrl.TestFieIsExist">
            <summary>
                测试文件是否存在
            </summary>
        </member>
        <member name="M:X.CommLib.Net.WebRequestHelper.WebRequestCtrl.GetEncodingFromCharset(System.String)">
            <summary>
                根据 http (html） 中的 charset 返回对应的 encoding
            </summary>
            <param name="charset">The charset.</param>
            <returns></returns>
        </member>
        <member name="M:X.CommLib.Net.WebRequestHelper.WebRequestCtrl.GetProxyDetails">
            <summary>
                返回当前的ie使用的端口
            </summary>
            <returns>
                The <see cref="T:X.CommLib.Net.WebRequestHelper.WebRequestCtrl.WinhttpCurrentUserIeProxyConfig" />.
            </returns>
            <exception cref="T:System.ComponentModel.Win32Exception">对应的win32错误</exception>
        </member>
        <member name="M:X.CommLib.Net.WebRequestHelper.WebRequestCtrl.GetResponse(System.String,System.Byte[],System.Boolean,System.String,X.CommLib.Net.WebRequestHelper.WebRequestCtrl.GetWebContentParam,System.Int32,System.Int32)">
            <summary>
                同步获取页面内容 请手工调用返回值的response.Close
            </summary>
            <param name="url">数据链接</param>
            <param name="postData">post的数据值</param>
            <param name="autoCombinCookie">是否自动合并cookies</param>
            <param name="cookies">处理时的cookies值</param>
            <param name="param">The param.</param>
            <param name="redirect">调用次数，如果在内部引发了递归调用，则每次调用时会自动+1</param>
            <param name="maxRedirect">最大递归跳转次数.</param>
            <returns>The <see cref="T:X.CommLib.Net.WebRequestHelper.WebRequestCtrl.WebRequestCtrlEventArgs" />.</returns>
            <exception cref="T:System.ApplicationException">尝试自动重定向的次数太多</exception>
            <exception cref="T:System.FormatException">服务器设置了跳转，但是没有设置跳转地址</exception>
        </member>
        <member name="M:X.CommLib.Net.WebRequestHelper.WebRequestCtrl.GetResponseCookies(System.Net.WebResponse)">
            <summary>
                返回 webResponse 中的 cookies 值
            </summary>
            <param name="webResponse">The web response.</param>
            <returns></returns>
        </member>
        <member name="M:X.CommLib.Net.WebRequestHelper.WebRequestCtrl.GetResponseRealData(System.Net.WebResponse)">
            <summary>
                获取响应中二进制数据
            </summary>
            <param name="response">The response.</param>
            <returns></returns>
        </member>
        <member name="M:X.CommLib.Net.WebRequestHelper.WebRequestCtrl.GetResponseString(System.Net.WebResponse,System.Byte[],System.Text.Encoding)">
            <summary>
                解析响应内容的字符表示
            </summary>
            <param name="respones">The respones.</param>
            <param name="responseData">The response data.</param>
            <param name="encoding">The encoding.</param>
            <returns></returns>
        </member>
        <member name="M:X.CommLib.Net.WebRequestHelper.WebRequestCtrl.GetStreamData(System.IO.Stream)">
            <summary>
                读取 stream 中的数据到二进制数组中
            </summary>
            <param name="stream">The stream.</param>
            <returns></returns>
        </member>
        <member name="M:X.CommLib.Net.WebRequestHelper.WebRequestCtrl.GetWebContent``1(X.CommLib.Net.WebRequestHelper.WebRequestCtrl.GetWebContentHandler{``0},System.String,System.Byte[],System.String@,X.CommLib.Net.WebRequestHelper.WebRequestCtrl.GetWebContentParam,System.Int32)">
            <summary>
                返回web内容辅助函数
            </summary>
            <typeparam name="T">返回数据类型</typeparam>
            <param name="func">The func.</param>
            <param name="url">The URL.</param>
            <param name="postData">The post data.</param>
            <param name="cookies">The cookies.</param>
            <param name="param">The param.</param>
            <param name="maxErr">The max err.</param>
            <returns>The <see cref="!:T" />.</returns>
        </member>
        <member name="M:X.CommLib.Net.WebRequestHelper.WebRequestCtrl.GetWebContentBufferCore(System.String,System.Byte[],System.String@,X.CommLib.Net.WebRequestHelper.WebRequestCtrl.GetWebContentParam)">
            <summary>获取指定页面内容的核心函数</summary>
            <param name="url">The URL.</param>
            <param name="postData">The post data.</param>
            <param name="cookies">The cookies.</param>
            <param name="param">The param.</param>
            <returns>
                The
                <see>
                    <cref>byte[]</cref>
                </see>
                .
            </returns>
        </member>
        <member name="M:X.CommLib.Net.WebRequestHelper.WebRequestCtrl.GetWebContentCore(System.String,System.Byte[],System.String@,X.CommLib.Net.WebRequestHelper.WebRequestCtrl.GetWebContentParam)">
            <summary>获取指定页面内容的核心函数</summary>
            <param name="url">The URL.</param>
            <param name="postData">The post data.</param>
            <param name="cookies">The cookies.</param>
            <param name="param">The param.</param>
            <returns>The <see cref="T:System.String" />.</returns>
        </member>
        <member name="M:X.CommLib.Net.WebRequestHelper.WebRequestCtrl.ParseEncodingFromContentBuffer(System.Byte[])">
            <summary>
                尝试将内容解析为html格式，从内容中推测文件编码
            </summary>
            <param name="bytes">The bytes.</param>
            <returns></returns>
        </member>
        <member name="M:X.CommLib.Net.WebRequestHelper.WebRequestCtrl.ParseEncodingFromRespones(System.Net.WebResponse)">
            <summary>返回respones的字符编码 如果respones中没有指定的话null</summary>
            <param name="respones"></param>
            <returns>The <see cref="T:System.Text.Encoding" />.</returns>
        </member>
        <member name="M:X.CommLib.Net.WebRequestHelper.WebRequestCtrl.ParseEncodingFromStreamBuffer(System.Byte[])">
            <summary>判断二进制流的字符串编码 如果判断失败则返回null</summary>
            <param name="bytes"></param>
            <returns>The <see cref="T:System.Text.Encoding" />.</returns>
        </member>
        <member name="M:X.CommLib.Net.WebRequestHelper.WebRequestCtrl.ParseHttpStatusCode(System.Net.WebResponse,System.String@)">
            <summary>
                返回http协议的状态值
            </summary>
            <param name="response">The response.</param>
            <param name="description">The description.</param>
            <returns></returns>
        </member>
        <member name="M:X.CommLib.Net.WebRequestHelper.WebRequestCtrl.SetRequestCookies(System.Net.HttpWebRequest,X.CommLib.Net.WebRequestHelper.WebRequestCtrl.WebRequestCtrlSetting)">
            <summary>设置请求的Cookie值</summary>
            <param name="httpReq">The HTTP req.</param>
            <param name="setting">The setting.</param>
        </member>
        <member name="M:X.CommLib.Net.WebRequestHelper.WebRequestCtrl.TryParseEncodingFromContentValue(System.String)">
            <summary>
                从 Content 描述中解析出编码值
            </summary>
            <param name="content">The content.</param>
            <returns></returns>
        </member>
        <member name="M:X.CommLib.Net.WebRequestHelper.WebRequestCtrl.WinHttpGetIEProxyConfigForCurrentUser(X.CommLib.Net.WebRequestHelper.WebRequestCtrl.WinhttpCurrentUserIeProxyConfig@)">
            <summary>从浏览器中获取代理信息</summary>
            <param name="pProxyConfig">The p proxy config.</param>
            <returns>The <see cref="T:System.Boolean" />.</returns>
        </member>
        <member name="M:X.CommLib.Net.WebRequestHelper.WebRequestCtrl.OnWebRequestCtrlFinished(X.CommLib.Net.WebRequestHelper.WebRequestCtrl.WebRequestCtrlEventArgs)">
            <summary>发送访问完成通知</summary>
            <param name="e"></param>
        </member>
        <member name="M:X.CommLib.Net.WebRequestHelper.WebRequestCtrl.RespCallback(System.IAsyncResult)">
            <summary>页面获取结束</summary>
            <param name="asynchronousResult"></param>
        </member>
        <member name="T:X.CommLib.Net.WebRequestHelper.WebRequestCtrl.WinhttpCurrentUserIeProxyConfig">
            <summary>
                代码信息
            </summary>
        </member>
        <member name="F:X.CommLib.Net.WebRequestHelper.WebRequestCtrl.WinhttpCurrentUserIeProxyConfig.AutoDetect">
            <summary>
                The auto detect
            </summary>
        </member>
        <member name="F:X.CommLib.Net.WebRequestHelper.WebRequestCtrl.WinhttpCurrentUserIeProxyConfig.AutoConfigUrl">
            <summary>
                The auto config URL
            </summary>
        </member>
        <member name="F:X.CommLib.Net.WebRequestHelper.WebRequestCtrl.WinhttpCurrentUserIeProxyConfig.Proxy">
            <summary>
                The proxy
            </summary>
        </member>
        <member name="F:X.CommLib.Net.WebRequestHelper.WebRequestCtrl.WinhttpCurrentUserIeProxyConfig.ProxyBypass">
            <summary>
                The proxy bypass
            </summary>
        </member>
        <member name="T:X.CommLib.Net.WebRequestHelper.WebRequestCtrl.GetWebContentParam">
            <summary>
                获取web内容的参数
            </summary>
        </member>
        <member name="P:X.CommLib.Net.WebRequestHelper.WebRequestCtrl.GetWebContentParam.Default">
            <summary>
                返回一个默认设置
            </summary>
        </member>
        <member name="P:X.CommLib.Net.WebRequestHelper.WebRequestCtrl.GetWebContentParam.AutoRedirect">
            <summary>
                是否使用系统自带的跳转
            </summary>
            <value>
                <c>true</c> if [auto redirect]; otherwise, <c>false</c> .
            </value>
        </member>
        <member name="P:X.CommLib.Net.WebRequestHelper.WebRequestCtrl.GetWebContentParam.Boundary">
            <summary>
                rfc 1867 分隔符
            </summary>
            <value>The boundary.</value>
        </member>
        <member name="P:X.CommLib.Net.WebRequestHelper.WebRequestCtrl.GetWebContentParam.Charset">
            <summary>
                解析为文本时使用的字符集，如果为null则自动检测
            </summary>
            <value>
                The charset.
            </value>
        </member>
        <member name="P:X.CommLib.Net.WebRequestHelper.WebRequestCtrl.GetWebContentParam.ContentType">
            <summary>
                提交的数据类型
            </summary>
            <value>
                The type of the content.
            </value>
        </member>
        <member name="P:X.CommLib.Net.WebRequestHelper.WebRequestCtrl.GetWebContentParam.IsAjax">
            <summary>
                是否是ajax请求
            </summary>
            <value>
                <c>true</c> if this instance is ajax; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:X.CommLib.Net.WebRequestHelper.WebRequestCtrl.GetWebContentParam.MaxRedirect">
            <summary>
                最大跳转次数
            </summary>
            <value>The maximum redirect.</value>
        </member>
        <member name="P:X.CommLib.Net.WebRequestHelper.WebRequestCtrl.GetWebContentParam.Origin">
            <summary>
                文件头中的Origin部分
            </summary>
            <value>
                The origin.
            </value>
        </member>
        <member name="P:X.CommLib.Net.WebRequestHelper.WebRequestCtrl.GetWebContentParam.Proxy">
            <summary>
                设置代理
                格式： https://user@pass:localhost:port
            </summary>
            <value>
                The proxy.
            </value>
        </member>
        <member name="P:X.CommLib.Net.WebRequestHelper.WebRequestCtrl.GetWebContentParam.Refere">
            <summary>
                页面引用页
            </summary>
            <value> The refere. </value>
        </member>
        <member name="P:X.CommLib.Net.WebRequestHelper.WebRequestCtrl.GetWebContentParam.Useragent">
            <summary>
                访问时使用的 useragent
            </summary>
            <value>
                The useragent.
            </value>
        </member>
        <member name="T:X.CommLib.Net.WebRequestHelper.WebRequestCtrl.PostContent">
            <summary>
                需要上传的部分
            </summary>
        </member>
        <member name="P:X.CommLib.Net.WebRequestHelper.WebRequestCtrl.PostContent.ContentType">
            <summary>
                该部分的类型（可选）
            </summary>
            <value>The type of the content.</value>
        </member>
        <member name="P:X.CommLib.Net.WebRequestHelper.WebRequestCtrl.PostContent.Data">
            <summary>
                对应的数据内容
            </summary>
            <value>The data.</value>
        </member>
        <member name="P:X.CommLib.Net.WebRequestHelper.WebRequestCtrl.PostContent.FileName">
            <summary>
                该部分对应的文件名(可选)
            </summary>
            <value>The name of the file.</value>
        </member>
        <member name="P:X.CommLib.Net.WebRequestHelper.WebRequestCtrl.PostContent.Name">
            <summary>
                该部分的名称
            </summary>
            <value>The name.</value>
        </member>
        <member name="M:X.CommLib.Net.WebRequestHelper.WebRequestCtrl.PostContent.AddString(System.String,System.Text.Encoding)">
            <summary>
                添加文件内容
            </summary>
            <param name="str">The string.</param>
            <param name="encoding">The encoding.</param>
        </member>
        <member name="T:X.CommLib.Net.WebRequestHelper.WebRequestCtrl.WebRequestCtrlEventArgs">
            <summary>
                返回结果参数
            </summary>
        </member>
        <member name="F:X.CommLib.Net.WebRequestHelper.WebRequestCtrl.WebRequestCtrlEventArgs.contentDataBuffer">
            <summary>
                服务器返回内容的缓存
            </summary>
        </member>
        <member name="F:X.CommLib.Net.WebRequestHelper.WebRequestCtrl.WebRequestCtrlEventArgs.contentStringBuffer">
            <summary>
                返回的文字内容的缓存
            </summary>
        </member>
        <member name="M:X.CommLib.Net.WebRequestHelper.WebRequestCtrl.WebRequestCtrlEventArgs.#ctor(System.Boolean,System.String,System.Net.WebRequest,System.Net.WebResponse,System.Net.HttpStatusCode,System.String,System.Exception)">
            <summary>Initializes a new instance of the <see cref="T:X.CommLib.Net.WebRequestHelper.WebRequestCtrl.WebRequestCtrlEventArgs" /> class.</summary>
            <param name="success">成功还是失败</param>
            <param name="message">相关消息内容</param>
            <param name="webRequest">提交值</param>
            <param name="webResponse">返回值</param>
            <param name="statusCode">返回代码</param>
            <param name="cookies">返回生成的cookie值，可能为空</param>
            <param name="err">处理过程产生的异常</param>
        </member>
        <member name="M:X.CommLib.Net.WebRequestHelper.WebRequestCtrl.WebRequestCtrlEventArgs.Finalize">
            <summary>
                Finalizes an instance of the <see cref="T:X.CommLib.Net.WebRequestHelper.WebRequestCtrl.WebRequestCtrlEventArgs" /> class.
            </summary>
        </member>
        <member name="P:X.CommLib.Net.WebRequestHelper.WebRequestCtrl.WebRequestCtrlEventArgs.Cookies">
            <summary>
                返回生成的cookie值，可能为空
            </summary>
        </member>
        <member name="P:X.CommLib.Net.WebRequestHelper.WebRequestCtrl.WebRequestCtrlEventArgs.Error">
            <summary>
                处理过程产生的异常
            </summary>
        </member>
        <member name="P:X.CommLib.Net.WebRequestHelper.WebRequestCtrl.WebRequestCtrlEventArgs.HasResponse">
            <summary>
                是否有响应内容
            </summary>
            <value>
                <c>true</c> if this instance has response; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:X.CommLib.Net.WebRequestHelper.WebRequestCtrl.WebRequestCtrlEventArgs.Message">
            <summary>
                相关消息内容
            </summary>
        </member>
        <member name="P:X.CommLib.Net.WebRequestHelper.WebRequestCtrl.WebRequestCtrlEventArgs.StatusCode">
            <summary>
                返回响应状态码，只有服务器正常返回时才会设置为正确的值。
                如果访问服务器发生错误，则该值不正确
            </summary>
        </member>
        <member name="P:X.CommLib.Net.WebRequestHelper.WebRequestCtrl.WebRequestCtrlEventArgs.Success">
            <summary>
                成功还是失败
            </summary>
        </member>
        <member name="P:X.CommLib.Net.WebRequestHelper.WebRequestCtrl.WebRequestCtrlEventArgs.WebRequest">
            <summary>
                提交值
            </summary>
        </member>
        <member name="P:X.CommLib.Net.WebRequestHelper.WebRequestCtrl.WebRequestCtrlEventArgs.WebResponse">
            <summary>
                返回值
            </summary>
        </member>
        <member name="M:X.CommLib.Net.WebRequestHelper.WebRequestCtrl.WebRequestCtrlEventArgs.Close">
            <summary>
                关闭占用的资源
            </summary>
        </member>
        <member name="M:X.CommLib.Net.WebRequestHelper.WebRequestCtrl.WebRequestCtrlEventArgs.Dispose">
            <summary>
                执行与释放或重置非托管资源相关的应用程序定义的任务。
            </summary>
        </member>
        <member name="M:X.CommLib.Net.WebRequestHelper.WebRequestCtrl.WebRequestCtrlEventArgs.GetHeadString">
            <summary>
                将 hreader 值转为 string
            </summary>
            <returns></returns>
        </member>
        <member name="M:X.CommLib.Net.WebRequestHelper.WebRequestCtrl.WebRequestCtrlEventArgs.GetHeadValue(System.String)">
            <summary>返回头部的值,  如果不存在返回null</summary>
            <param name="key">The key.</param>
            <returns>The <see cref="T:System.String" />.</returns>
        </member>
        <member name="M:X.CommLib.Net.WebRequestHelper.WebRequestCtrl.WebRequestCtrlEventArgs.GetRequestUri">
            <summary>
                返回请求的地址
            </summary>
            <returns></returns>
        </member>
        <member name="M:X.CommLib.Net.WebRequestHelper.WebRequestCtrl.WebRequestCtrlEventArgs.GetRequestUrl">
            <summary>
                返回请求的地址
            </summary>
            <returns></returns>
        </member>
        <member name="M:X.CommLib.Net.WebRequestHelper.WebRequestCtrl.WebRequestCtrlEventArgs.GetResponseCookies">
            <summary>
                从 response 中获取 cookie 值
            </summary>
            <returns></returns>
        </member>
        <member name="M:X.CommLib.Net.WebRequestHelper.WebRequestCtrl.WebRequestCtrlEventArgs.GetResponseUri">
            <summary>
                返回响应的 url 地址
            </summary>
            <returns></returns>
        </member>
        <member name="M:X.CommLib.Net.WebRequestHelper.WebRequestCtrl.WebRequestCtrlEventArgs.GetResponseUrl">
            <summary>
                返回相应的 url 地址
            </summary>
            <returns></returns>
        </member>
        <member name="M:X.CommLib.Net.WebRequestHelper.WebRequestCtrl.WebRequestCtrlEventArgs.GetStatusCode">
            <summary>
                从返回的响应中获取返回状态码
                会尝试从异常中解析出返回状态码
                如果没有响应头返回 null
            </summary>
            <returns></returns>
        </member>
        <member name="M:X.CommLib.Net.WebRequestHelper.WebRequestCtrl.WebRequestCtrlEventArgs.GetWebContentData">
            <summary>
                返回页面的二进制内容，如果没有返回值，则返回 null;
            </summary>
            <returns></returns>
        </member>
        <member name="M:X.CommLib.Net.WebRequestHelper.WebRequestCtrl.WebRequestCtrlEventArgs.GetWebContentString">
            <summary>
                将内部转为字符串，如果没有响应体，返回 null
            </summary>
            <returns>
                The <see cref="T:System.String" />.
            </returns>
        </member>
        <member name="M:X.CommLib.Net.WebRequestHelper.WebRequestCtrl.WebRequestCtrlEventArgs.GetWebResponse">
            <summary>
                返回响应内容
                如果是正常返回直接返回webresponse,
                如果发生异常，则尝试从异常中获取webresponse
                如果都没有，返回 null
            </summary>
            <returns></returns>
        </member>
        <member name="M:X.CommLib.Net.WebRequestHelper.WebRequestCtrl.WebRequestCtrlEventArgs.UpdateCookies(System.String)">
            <summary>更新cookie值</summary>
            <param name="newCookies">The new cookies.</param>
        </member>
        <member name="M:X.CommLib.Net.WebRequestHelper.WebRequestCtrl.WebRequestCtrlEventArgs.Dispose(System.Boolean)">
            <summary>Releases unmanaged and - optionally - managed resources.</summary>
            <param name="isDisposing">
                <c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only
                unmanaged resources.
            </param>
        </member>
        <member name="M:X.CommLib.Net.WebRequestHelper.WebRequestCtrl.WebRequestCtrlEventArgs.GetUrlOfUri(System.Uri)">
            <summary>
                返回 uri 中的 url 地址
            </summary>
            <param name="uri">The URI.</param>
            <returns></returns>
        </member>
        <member name="T:X.CommLib.Net.WebRequestHelper.WebRequestCtrl.WebRequestCtrlSetting">
            <summary>
                设置对象
            </summary>
        </member>
        <member name="F:X.CommLib.Net.WebRequestHelper.WebRequestCtrl.WebRequestCtrlSetting.innerUseragent">
            <summary>
                代理头
            </summary>
        </member>
        <member name="M:X.CommLib.Net.WebRequestHelper.WebRequestCtrl.WebRequestCtrlSetting.#ctor(System.Uri,System.Byte[],System.Boolean,System.String,System.String,System.Int32,System.Boolean,System.Boolean,System.String,System.Boolean)">
            <summary>Initializes a new instance of the <see cref="T:X.CommLib.Net.WebRequestHelper.WebRequestCtrl.WebRequestCtrlSetting" /> class.</summary>
            <param name="uri">目标地址</param>
            <param name="postData">提交数据</param>
            <param name="autoCombinCookie">自动合并cookie</param>
            <param name="cookieHeader">Cookie值</param>
            <param name="refere">上一次的引用</param>
            <param name="timeOut">超时参数</param>
            <param name="keepAlive">是否保持连接</param>
            <param name="autoRedirect">是否支持自动跳转</param>
            <param name="useragent">代理头</param>
            <param name="acceptGZip">是否支持GZip压缩</param>
        </member>
        <member name="P:X.CommLib.Net.WebRequestHelper.WebRequestCtrl.WebRequestCtrlSetting.Accept">
            <summary>
                接收的内容信息
            </summary>
            <value>
                The accept.
            </value>
        </member>
        <member name="P:X.CommLib.Net.WebRequestHelper.WebRequestCtrl.WebRequestCtrlSetting.AcceptGZip">
            <summary>
                是否支持GZip压缩
            </summary>
        </member>
        <member name="P:X.CommLib.Net.WebRequestHelper.WebRequestCtrl.WebRequestCtrlSetting.AutoCombinCookie">
            <summary>
                自动合并cookie
            </summary>
        </member>
        <member name="P:X.CommLib.Net.WebRequestHelper.WebRequestCtrl.WebRequestCtrlSetting.AutoRedirect">
            <summary>
                是否支持自动跳转
            </summary>
        </member>
        <member name="P:X.CommLib.Net.WebRequestHelper.WebRequestCtrl.WebRequestCtrlSetting.Boundary">
            <summary>
                文件上传编码分隔符 RFC 1867中应用
                但是如果设置过 ContentType，该参数将被忽略
            </summary>
            <value>The boundary.</value>
        </member>
        <member name="P:X.CommLib.Net.WebRequestHelper.WebRequestCtrl.WebRequestCtrlSetting.ContentType">
            <summary>
                自定义 ContentType 内容
            </summary>
            <value>
                The type of the content.
            </value>
        </member>
        <member name="P:X.CommLib.Net.WebRequestHelper.WebRequestCtrl.WebRequestCtrlSetting.Cookies">
            <summary>
                Cookie值
            </summary>
        </member>
        <member name="P:X.CommLib.Net.WebRequestHelper.WebRequestCtrl.WebRequestCtrlSetting.Credentials">
            <summary>
                登录验证信息
            </summary>
            <value>
                The credentials.
            </value>
        </member>
        <member name="P:X.CommLib.Net.WebRequestHelper.WebRequestCtrl.WebRequestCtrlSetting.CustomeHeader">
            <summary>
                扩展头文件
            </summary>
            <value>
                The custome header.
            </value>
        </member>
        <member name="P:X.CommLib.Net.WebRequestHelper.WebRequestCtrl.WebRequestCtrlSetting.IsAjax">
            <summary>
                是否是一次Ajax请求
            </summary>
            <value>
                <c>true</c> if this instance is ajax; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:X.CommLib.Net.WebRequestHelper.WebRequestCtrl.WebRequestCtrlSetting.KeepAlive">
            <summary>
                是否保持连接
            </summary>
        </member>
        <member name="P:X.CommLib.Net.WebRequestHelper.WebRequestCtrl.WebRequestCtrlSetting.Origin">
            <summary>
                header 中的 Origin 部分
            </summary>
            <value>
                The origin.
            </value>
        </member>
        <member name="P:X.CommLib.Net.WebRequestHelper.WebRequestCtrl.WebRequestCtrlSetting.PostData">
            <summary>
                提交数据
            </summary>
        </member>
        <member name="P:X.CommLib.Net.WebRequestHelper.WebRequestCtrl.WebRequestCtrlSetting.Proxy">
            <summary>
                设置代理
                格式： https://user@pass:localhost:port
            </summary>
            <value>
                The proxy.
            </value>
        </member>
        <member name="P:X.CommLib.Net.WebRequestHelper.WebRequestCtrl.WebRequestCtrlSetting.Refere">
            <summary>
                上一次的引用
            </summary>
        </member>
        <member name="P:X.CommLib.Net.WebRequestHelper.WebRequestCtrl.WebRequestCtrlSetting.TimeOut">
            <summary>
                超时参数
            </summary>
        </member>
        <member name="P:X.CommLib.Net.WebRequestHelper.WebRequestCtrl.WebRequestCtrlSetting.Uri">
            <summary>
                目标地址
            </summary>
        </member>
        <member name="P:X.CommLib.Net.WebRequestHelper.WebRequestCtrl.WebRequestCtrlSetting.WebAgent">
            <summary>
                代理头
            </summary>
        </member>
        <member name="T:X.CommLib.Net.WebRequestHelper.WebRequestCtrl.AsyncStateParam">
            <summary>
                异步获取web返回值参数
            </summary>
        </member>
        <member name="M:X.CommLib.Net.WebRequestHelper.WebRequestCtrl.AsyncStateParam.#ctor(X.CommLib.Net.WebRequestHelper.WebRequestCtrl.WebRequestCtrlSetting,System.Net.WebRequest)">
            <summary>Initializes a new instance of the <see cref="T:X.CommLib.Net.WebRequestHelper.WebRequestCtrl.AsyncStateParam" /> class.</summary>
            <param name="requestCtrlSetting">The request ctrl setting.</param>
            <param name="webRequest">The web request.</param>
        </member>
        <member name="P:X.CommLib.Net.WebRequestHelper.WebRequestCtrl.AsyncStateParam.RequestCtrlSetting">
            <summary>
                请求的设置
            </summary>
        </member>
        <member name="P:X.CommLib.Net.WebRequestHelper.WebRequestCtrl.AsyncStateParam.WebRequest">
            <summary>
                链接请求对象
            </summary>
        </member>
        <member name="T:X.CommLib.Office.ChineseCharsetScaner">
            <summary>
                中文字符扫描器
            </summary>
        </member>
        <member name="F:X.CommLib.Office.ChineseCharsetScaner.Regex">
            <summary>
                字符扫描规则
            </summary>
        </member>
        <member name="F:X.CommLib.Office.ChineseCharsetScaner.Empty">
            <summary>
                空字符串
            </summary>
        </member>
        <member name="M:X.CommLib.Office.ChineseCharsetScaner.Seacn(System.String)">
            <summary>
                扫描出字符串中的中文文字
            </summary>
            <param name="line">The line.</param>
            <returns></returns>
        </member>
        <member name="T:X.CommLib.Office.FileCharsetDetector">
            <summary>
                文件字符串探测器
                nuget Install-Package UDE.CSharp
            </summary>
        </member>
        <member name="M:X.CommLib.Office.FileCharsetDetector.GetBytesCharset(System.Byte[],System.Text.Encoding)">
            <summary>
            判断二进制流的字符串编码
            </summary>
            <param name="bytes">
            The bytes.
            </param>
            <param name="defaultEncoding">
            检测失败返回该值
            </param>
            <returns>
            The <see cref="T:System.Text.Encoding"/>.
            </returns>
        </member>
        <member name="M:X.CommLib.Office.FileCharsetDetector.GetStreamCharset(System.IO.Stream,System.Text.Encoding)">
            <summary>
            检测文件流字符串
                如果使用组件判断可能性小于 50%，则使用 defaultEncoding，如果未设置 DefaultEncoding，则使用默认编码
            </summary>
            <param name="reader">
            The reader.
            </param>
            <param name="defaultEncoding">
            检测失败返回该值
            </param>
            <returns>
            The <see cref="T:System.Text.Encoding"/>.
            </returns>
        </member>
        <member name="M:X.CommLib.Office.FileCharsetDetector.GetFileCharset(System.String,System.Text.Encoding)">
            <summary>
            返回文件的文字编码
            </summary>
            <param name="filePath">
            The file path.
            </param>
            <param name="defaultEncoding">
            失败时返回该值
            </param>
            <returns>
            The <see cref="T:System.Text.Encoding"/>.
            </returns>
        </member>
        <member name="T:X.CommLib.Office.StringExtension">
            <summary>
                字符串扩展函数
            </summary>
        </member>
        <member name="M:X.CommLib.Office.StringExtension.CompareOrdinalIgnoreCase(System.String,System.String)">
            <summary>两个字符串进行不区分大小写比较</summary>
            <param name="strA">The string aggregate.</param>
            <param name="strB">The string attribute.</param>
            <returns></returns>
        </member>
        <member name="M:X.CommLib.Office.StringExtension.CreateRandomString(System.Int32,System.Random)">
            <summary>
                返回随机的字符串，含中文及英文
                目前实现为英文及数字
            </summary>
            <param name="length">The length.</param>
            <param name="random">The random.</param>
            <returns></returns>
        </member>
        <member name="M:X.CommLib.Office.StringExtension.FillerString(System.String,System.Int32,System.Char,System.Boolean)">
            <summary>填充字符串，将字符串设置成指定长度，如果小于指定长度前面使用filledChar进行填充，如果已经大于length则直接返回</summary>
            <param name="str">输入的字符串.</param>
            <param name="length">新字符的总长度.</param>
            <param name="filledChar">填充字符.</param>
            <param name="filledLeft">将填充符填充至左则.</param>
            <returns></returns>
        </member>
        <member name="M:X.CommLib.Office.StringExtension.GenerateStreamFromString(System.String)">
            <summary>使用指定的字符串创建一个流</summary>
            <param name="s">The s.</param>
            <returns></returns>
        </member>
        <member name="M:X.CommLib.Office.StringExtension.GetChinese(System.String)">
            <summary>
                返回字符串中包含的字符
            </summary>
            <param name="line">The line.</param>
            <returns></returns>
        </member>
        <member name="M:X.CommLib.Office.StringExtension.GetHashCodeString(System.String)">
            <summary>
                返回指定字符的 hash 值的字符串表示
            </summary>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:X.CommLib.Office.StringExtension.IsNullOrWhiteSpace(System.String)">
            <summary>
                指定的字符是不是空的
            </summary>
            <param name="value">The string.</param>
            <returns><c>true</c> if [is null or white space] [the specified string]; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:X.CommLib.Office.StringExtension.IsNumeric(System.String)">
            <summary>
                指定的字符串是否由数值组成
            </summary>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:X.CommLib.Office.StringExtension.Join(System.String,System.Object[])">
            <summary>
                合并数组
            </summary>
            <param name="separator">The separator.</param>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:X.CommLib.Office.StringExtension.RemoveChars(System.String,System.Char[])">
            <summary>从字符串中移除指定的字符</summary>
            <param name="str">The STR.</param>
            <param name="flags">The flags.</param>
        </member>
        <member name="M:X.CommLib.Office.StringExtension.RemoveStrings(System.String,System.String[])">
            <summary>从字符串中移除指定的字符串</summary>
            <param name="str">The STR.</param>
            <param name="flags">The flags.</param>
            <returns></returns>
        </member>
        <member name="M:X.CommLib.Office.StringExtension.Same(System.String,System.String,System.Boolean)">
            <summary>两个字符串是不是一样的。</summary>
            <param name="strA">The string aggregate.</param>
            <param name="strB">The string attribute.</param>
            <param name="ignoreCase">if set to <c>true</c> [ignore case].</param>
            <returns></returns>
        </member>
        <member name="M:X.CommLib.Office.StringExtension.Split(System.String,System.Int32)">
            <summary>
                将字符串按指定的长度进行切分
            </summary>
            <param name="str">The string.</param>
            <param name="chunkSize">Size of the chunk.</param>
            <returns></returns>
        </member>
        <member name="M:X.CommLib.Office.StringExtension.SplitLines(System.String)">
            <summary>
                将字符串按回车换行拆分成多行
            </summary>
            <param name="input">The input.</param>
            <returns>System.String[].</returns>
        </member>
        <member name="M:X.CommLib.Office.StringExtension.TrimString(System.String,System.Char[])">
            <summary>对字符串进行trim处理，如果输入字符为null则转为0长度字符串</summary>
            <param name="str">The STR.</param>
            <param name="trimChars">The trim chars.</param>
            <returns></returns>
        </member>
        <member name="M:X.CommLib.Office.StringExtension.Join(System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
                Join1s the specified separator.
            </summary>
            <param name="separator">The separator.</param>
            <param name="strs">The STRS.</param>
            <returns></returns>
        </member>
        <member name="T:X.CommLib.Properties.Resources">
            <summary>
              一个强类型的资源类，用于查找本地化的字符串等。
            </summary>
        </member>
        <member name="P:X.CommLib.Properties.Resources.ResourceManager">
            <summary>
              返回此类使用的缓存的 ResourceManager 实例。
            </summary>
        </member>
        <member name="P:X.CommLib.Properties.Resources.Culture">
            <summary>
              使用此强类型资源类，为所有资源查找
              重写当前线程的 CurrentUICulture 属性。
            </summary>
        </member>
        <member name="P:X.CommLib.Properties.Resources.AccountStorage_NoSetConfigFilePath">
            <summary>
              查找类似 没有定义配置文件的路径 的本地化字符串。
            </summary>
        </member>
        <member name="P:X.CommLib.Properties.Resources.AdvInstBuilder_AddFileDoesntExist">
            <summary>
              查找类似 待添加文件不存在 的本地化字符串。
            </summary>
        </member>
        <member name="P:X.CommLib.Properties.Resources.AdvInstBuilder_AddFiles">
            <summary>
              查找类似 添加文件 的本地化字符串。
            </summary>
        </member>
        <member name="P:X.CommLib.Properties.Resources.AdvInstBuilder_AdvInstBuilder_DontSetValidBuilderName">
            <summary>
              查找类似 没有设置有效的构建名称 的本地化字符串。
            </summary>
        </member>
        <member name="P:X.CommLib.Properties.Resources.AdvInstBuilder_BuildFailed">
            <summary>
              查找类似 编译失败 的本地化字符串。
            </summary>
        </member>
        <member name="P:X.CommLib.Properties.Resources.AdvInstBuilder_CannotFindNode">
            <summary>
              查找类似 无法找到对应节点 的本地化字符串。
            </summary>
        </member>
        <member name="P:X.CommLib.Properties.Resources.AdvInstBuilder_CannotFindShortcut">
            <summary>
              查找类似 无法找到对应快捷方式 的本地化字符串。
            </summary>
        </member>
        <member name="P:X.CommLib.Properties.Resources.AdvInstBuilder_CantFindAdvInstallerAppPath">
            <summary>
              查找类似 无法找到adv installer 安装路径 的本地化字符串。
            </summary>
        </member>
        <member name="P:X.CommLib.Properties.Resources.AdvInstBuilder_CantFindAdvInstallerBuildAppPath">
            <summary>
              查找类似 构建程序不存在 的本地化字符串。
            </summary>
        </member>
        <member name="P:X.CommLib.Properties.Resources.AdvInstBuilder_CantFindUrlInNode">
            <summary>
              查找类似 指定节点没有设置 url 的本地化字符串。
            </summary>
        </member>
        <member name="P:X.CommLib.Properties.Resources.AdvInstBuilder_ChangeApplicationFolder">
            <summary>
              查找类似 修改程序安装目录 的本地化字符串。
            </summary>
        </member>
        <member name="P:X.CommLib.Properties.Resources.AdvInstBuilder_ChangeApplicationShortcutFolder">
            <summary>
              查找类似 修改程序快捷方式目录 的本地化字符串。
            </summary>
        </member>
        <member name="P:X.CommLib.Properties.Resources.AdvInstBuilder_ChangeOutDirctory">
            <summary>
              查找类似 修改输出目录 的本地化字符串。
            </summary>
        </member>
        <member name="P:X.CommLib.Properties.Resources.AdvInstBuilder_ChangeOutFile">
            <summary>
              查找类似 修改输出文件名 的本地化字符串。
            </summary>
        </member>
        <member name="P:X.CommLib.Properties.Resources.AdvInstBuilder_ComponentDoesNotExists">
            <summary>
              查找类似 组件不存在 的本地化字符串。
            </summary>
        </member>
        <member name="P:X.CommLib.Properties.Resources.AdvInstBuilder_ConfigFileAlreadyExists">
            <summary>
              查找类似 配置文件已经存在，无法再次创建 的本地化字符串。
            </summary>
        </member>
        <member name="P:X.CommLib.Properties.Resources.AdvInstBuilder_ConfigFileCreateionFailed">
            <summary>
              查找类似 配置文件未创建 的本地化字符串。
            </summary>
        </member>
        <member name="P:X.CommLib.Properties.Resources.AdvInstBuilder_CreateConfigFile">
            <summary>
              查找类似 创建项目 的本地化字符串。
            </summary>
        </member>
        <member name="P:X.CommLib.Properties.Resources.AdvInstBuilder_DidntFindBinaryRsourceNode">
            <summary>
              查找类似 没有找到指定的二进制资源节点 的本地化字符串。
            </summary>
        </member>
        <member name="P:X.CommLib.Properties.Resources.AdvInstBuilder_DonotSetVaildOutputFile">
            <summary>
              查找类似 没有设置有效的输出文件名称 的本地化字符串。
            </summary>
        </member>
        <member name="P:X.CommLib.Properties.Resources.AdvInstBuilder_DontSetValidFolderName">
            <summary>
              查找类似 没有设置有效的文件夹名称 的本地化字符串。
            </summary>
        </member>
        <member name="P:X.CommLib.Properties.Resources.AdvInstBuilder_ErrorOccurredOperation">
            <summary>
              查找类似 {0}操作发生错误 的本地化字符串。
            </summary>
        </member>
        <member name="P:X.CommLib.Properties.Resources.AdvInstBuilder_InvalidComponentName">
            <summary>
              查找类似 无效的组件名称 的本地化字符串。
            </summary>
        </member>
        <member name="P:X.CommLib.Properties.Resources.AdvInstBuilder_NodeAlreadyExists">
            <summary>
              查找类似 节点&apos;{0}&apos;已经存在 的本地化字符串。
            </summary>
        </member>
        <member name="P:X.CommLib.Properties.Resources.AdvInstBuilder_NodeCantBeNull">
            <summary>
              查找类似 需要保存的节点不能为null 的本地化字符串。
            </summary>
        </member>
        <member name="P:X.CommLib.Properties.Resources.AdvInstBuilder_NodeCantModify">
            <summary>
              查找类似 当前节点不支持修改属性 的本地化字符串。
            </summary>
        </member>
        <member name="P:X.CommLib.Properties.Resources.AdvInstBuilder_NodeCantNull">
            <summary>
              查找类似 节点不能为null 的本地化字符串。
            </summary>
        </member>
        <member name="P:X.CommLib.Properties.Resources.AdvInstBuilder_NodeDoesNotBelongToAnyDocument">
            <summary>
              查找类似 节点不属于任何文档 的本地化字符串。
            </summary>
        </member>
        <member name="P:X.CommLib.Properties.Resources.AdvInstBuilder_NodeNotSetInTheDocument">
            <summary>
              查找类似 有节点未设置入文档 的本地化字符串。
            </summary>
        </member>
        <member name="P:X.CommLib.Properties.Resources.AdvInstBuilder_OperationParameters">
            <summary>
              查找类似 运行参数：{0} 的本地化字符串。
            </summary>
        </member>
        <member name="P:X.CommLib.Properties.Resources.AdvInstBuilder_SaveProject">
            <summary>
              查找类似 保存项目 的本地化字符串。
            </summary>
        </member>
        <member name="P:X.CommLib.Properties.Resources.AdvInstBuilder_SetVersion">
            <summary>
              查找类似 设置版本 的本地化字符串。
            </summary>
        </member>
        <member name="P:X.CommLib.Properties.Resources.AdvInstBuilder_UpdateProductProperty">
            <summary>
              查找类似 设置属性 的本地化字符串。
            </summary>
        </member>
        <member name="P:X.CommLib.Properties.Resources.AdvInstBuilder_WithoutCompilingResults">
            <summary>
              查找类似 编译失败, 没有获得编译结果 的本地化字符串。
            </summary>
        </member>
        <member name="P:X.CommLib.Properties.Resources.AppConfigReader_GetCallPropertyName_AllowGetOrSetPropertyOnly">
            <summary>
              查找类似 不支持的类型 ‘{0}’。只能接受 get 及 set。 的本地化字符串。
            </summary>
        </member>
        <member name="P:X.CommLib.Properties.Resources.AppConfigReader_GetCallPropertyName_AllowGetPropertyOnly">
            <summary>
              查找类似 目前只返回 get 属性的设置：{0} 的本地化字符串。
            </summary>
        </member>
        <member name="P:X.CommLib.Properties.Resources.AppConfigReader_GetCallPropertyName_AllowSetPropertyOnly">
            <summary>
              查找类似 目前只接受 set 属性的设置：{0} 的本地化字符串。
            </summary>
        </member>
        <member name="P:X.CommLib.Properties.Resources.AppConfigReader_LoadConfiguration_ExtensionMostBeConfig">
            <summary>
              查找类似 配置文件的后缀必须是.config 的本地化字符串。
            </summary>
        </member>
        <member name="P:X.CommLib.Properties.Resources.AppConfigReader_LoadConfiguration_MustWantSameFileWithName">
            <summary>
              查找类似 必须要有与配置文件同名的文件 的本地化字符串。
            </summary>
        </member>
        <member name="P:X.CommLib.Properties.Resources.AppConfigReader_LoadConfiguration_PleaseEnterValidFileName">
            <summary>
              查找类似 请输入有效的配置文件名 的本地化字符串。
            </summary>
        </member>
        <member name="P:X.CommLib.Properties.Resources.AppPathBase_InvalidComparisonPath">
            <summary>
              查找类似 无效的比较路径 的本地化字符串。
            </summary>
        </member>
        <member name="P:X.CommLib.Properties.Resources.AppPathBase_UnsupportedType">
            <summary>
              查找类似 不支持的类型:{0} 的本地化字符串。
            </summary>
        </member>
        <member name="P:X.CommLib.Properties.Resources.BatchRunTemplate">
            <summary>
              查找 System.Byte[] 类型的本地化资源。
            </summary>
        </member>
        <member name="P:X.CommLib.Properties.Resources.Console">
            <summary>
              查找类似于 (Icon) 的 System.Drawing.Icon 类型的本地化资源。
            </summary>
        </member>
        <member name="P:X.CommLib.Properties.Resources.Console16">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:X.CommLib.Properties.Resources.Console48">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:X.CommLib.Properties.Resources.ConsoleCommand_GetEntryString_Title">
            <summary>
              查找类似 {0}，默认&apos;{1}&apos;： 的本地化字符串。
            </summary>
        </member>
        <member name="P:X.CommLib.Properties.Resources.ConsoleCommand_Helper_NoRelevantHelpInformation">
            <summary>
              查找类似 无相关帮助信息 的本地化字符串。
            </summary>
        </member>
        <member name="P:X.CommLib.Properties.Resources.ConsoleCommand_ProcessMethodInvoker_NeedCallbackFunction">
            <summary>
              查找类似 没有指定需要处理的回调函数 的本地化字符串。
            </summary>
        </member>
        <member name="P:X.CommLib.Properties.Resources.ConsoleCommand_ShowErrorMessage_CopyExceptionInfo">
            <summary>
              查找类似 按钮C复制异常并返回，其它键直接返回 的本地化字符串。
            </summary>
        </member>
        <member name="P:X.CommLib.Properties.Resources.ConsoleCommand_ShowErrorMessage_DisplayDetailedInformation">
            <summary>
              查找类似 是否显示详细信息 的本地化字符串。
            </summary>
        </member>
        <member name="P:X.CommLib.Properties.Resources.ConsoleCommand_TypeNotSupported">
            <summary>
              查找类似 不支持的类型：{0} 的本地化字符串。
            </summary>
        </member>
        <member name="P:X.CommLib.Properties.Resources.ConsoleCommand_WaiteAnyKey_PressAnyKeyToExit">
            <summary>
              查找类似 按任意键退出 的本地化字符串。
            </summary>
        </member>
        <member name="P:X.CommLib.Properties.Resources.ConsoleCommand_WaitForTime">
            <summary>
              查找类似 ，等待{0}秒后退出 的本地化字符串。
            </summary>
        </member>
        <member name="P:X.CommLib.Properties.Resources.ConsoleCommand_WaitSelectOption_Exit">
            <summary>
              查找类似 退出 的本地化字符串。
            </summary>
        </member>
        <member name="P:X.CommLib.Properties.Resources.ConsoleCommand_WaitSelectOption_SelectOptionTitle">
            <summary>
              查找类似 请选择一个选项： 的本地化字符串。
            </summary>
        </member>
        <member name="P:X.CommLib.Properties.Resources.ConsoleCommand_WaitTimeLeave_StopWaiting">
            <summary>
              查找类似 停止等待 的本地化字符串。
            </summary>
        </member>
        <member name="P:X.CommLib.Properties.Resources.ConsoleCommand_WasErrorWhenRunning">
            <summary>
              查找类似 运行 {0} 时发生错误：{1} 的本地化字符串。
            </summary>
        </member>
        <member name="P:X.CommLib.Properties.Resources.ConsoleMenuCommand_BuildCommandMenu_MenuItemOvertop">
            <summary>
              查找类似 菜单项最多只支持{0}项，当前已经设置为{1}项 的本地化字符串。
            </summary>
        </member>
        <member name="P:X.CommLib.Properties.Resources.ConsoleMenuCommand_Helper_InputSelectOption">
            <summary>
              查找类似 输入菜单前的数字或字母进入该菜单 的本地化字符串。
            </summary>
        </member>
        <member name="P:X.CommLib.Properties.Resources.ConsoleMenuCommand_ShowCommandsHelper_HelpOutputFinished">
            <summary>
              查找类似 显示结束 的本地化字符串。
            </summary>
        </member>
        <member name="P:X.CommLib.Properties.Resources.ConsoleMenuCommand_WaitingSelectMenu_ExitMenu">
            <summary>
              查找类似 {0}. 退出 的本地化字符串。
            </summary>
        </member>
        <member name="P:X.CommLib.Properties.Resources.ConsoleMenuCommand_WaitingSelectMenu_HelpMenu">
            <summary>
              查找类似 {0}. 帮助 的本地化字符串。
            </summary>
        </member>
        <member name="P:X.CommLib.Properties.Resources.ConsoleMenuCommand_WaitingSelectMenu_InputCommand">
            <summary>
              查找类似 请输入需要运行的命令: 的本地化字符串。
            </summary>
        </member>
        <member name="P:X.CommLib.Properties.Resources.ConsoleNotifyIcon_GetNotifyiconMenu_Exit">
            <summary>
              查找类似 退出 的本地化字符串。
            </summary>
        </member>
        <member name="P:X.CommLib.Properties.Resources.ConsoleNotifyIcon_GetNotifyiconMenu_ShowOrHideConsole">
            <summary>
              查找类似 显示/隐藏控制台程序 的本地化字符串。
            </summary>
        </member>
        <member name="P:X.CommLib.Properties.Resources.ConsoleNotifyIcon_NotifyIconOnMouseMove_ConsoleAppTitle">
            <summary>
              查找类似 控制台程序 的本地化字符串。
            </summary>
        </member>
        <member name="P:X.CommLib.Properties.Resources.ConsoleNotifyIcon_NotifyIconOnMouseMove_DoubleClickShowOrHideConsole">
            <summary>
              查找类似 {0}{1}双击显示或是隐藏程序 的本地化字符串。
            </summary>
        </member>
        <member name="P:X.CommLib.Properties.Resources.DbHelper_CleanTable_UsersTableNotExist">
            <summary>
              查找类似 用户表&apos;{0}&apos;不存在 的本地化字符串。
            </summary>
        </member>
        <member name="P:X.CommLib.Properties.Resources.DbHelper_CreateConnectionFromConfig_UnableCreateConnection">
            <summary>
              查找类似 无法从{0}创建数据连接 的本地化字符串。
            </summary>
        </member>
        <member name="P:X.CommLib.Properties.Resources.DbHelper_CreateDbHelperFromProviderName_DatabaseTypeNotSupported">
            <summary>
              查找类似 不支持在数据库类型：{0} 的本地化字符串。
            </summary>
        </member>
        <member name="P:X.CommLib.Properties.Resources.DbHelper_GenerateCreateAutoIncrementColumnSql_NotSetToAddColumn">
            <summary>
              查找类似 类型{0}不能用作自增列 的本地化字符串。
            </summary>
        </member>
        <member name="P:X.CommLib.Properties.Resources.DbHelper_GetConnectionString_ConnectionConfigureDoesNotExist">
            <summary>
              查找类似 数据连接配置不存在 的本地化字符串。
            </summary>
        </member>
        <member name="P:X.CommLib.Properties.Resources.DbHelper_GetSqlDataTypeString_NotSupportedDataType">
            <summary>
              查找类似 不支持的数据格式:{0} 的本地化字符串。
            </summary>
        </member>
        <member name="P:X.CommLib.Properties.Resources.DbHelper_InitInsertCommand_NeedSpecifiedValue">
            <summary>
              查找类似 没有指定需要插入的数值 的本地化字符串。
            </summary>
        </member>
        <member name="P:X.CommLib.Properties.Resources.EnumExtensions_EnumExtensions_SupportedEnumerationTypeOnly">
            <summary>
              查找类似 当前仅支持枚举类型操作 的本地化字符串。
            </summary>
        </member>
        <member name="P:X.CommLib.Properties.Resources.EnumExtensions_EnumExtensions_SupportedFlagsPropertyOnly">
            <summary>
              查找类似 仅支持使用Flags属性枚举值 的本地化字符串。
            </summary>
        </member>
        <member name="P:X.CommLib.Properties.Resources.ExcelDbTool_CreateConnection_DoesNotDefineDataFile">
            <summary>
              查找类似 没有定义数据文件路径 的本地化字符串。
            </summary>
        </member>
        <member name="P:X.CommLib.Properties.Resources.ExcelDbTool_GetConnectionString_DoesNotFindExcelVersion">
            <summary>
              查找类似 无法确定与数据库操作引擎{0}相对应的excel版本 的本地化字符串。
            </summary>
        </member>
        <member name="P:X.CommLib.Properties.Resources.ExcelDbTool_GetConnectionString_UnableFindDatabaseEngine">
            <summary>
              查找类似 未能找到与程序对应的数据库操作引擎 的本地化字符串。
            </summary>
        </member>
        <member name="P:X.CommLib.Properties.Resources.exit16">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:X.CommLib.Properties.Resources.FontHelper_CopyFontToFontsDirectory_UnableGetFontName">
            <summary>
              查找类似 无法获取字体名称 的本地化字符串。
            </summary>
        </member>
        <member name="P:X.CommLib.Properties.Resources.FontHelper_GetFontDir_CannotLocateWindowsDirectory">
            <summary>
              查找类似 无法定位 windows 目录 的本地化字符串。
            </summary>
        </member>
        <member name="P:X.CommLib.Properties.Resources.FontHelper_GetFontDir_UnableToLocateFontDirectory">
            <summary>
              查找类似 无法定位字体目录 的本地化字符串。
            </summary>
        </member>
        <member name="P:X.CommLib.Properties.Resources.FontHelper_InstallFonts_FailedInstallFonts">
            <summary>
              查找类似 安装字体失败：{0} 的本地化字符串。
            </summary>
        </member>
        <member name="P:X.CommLib.Properties.Resources.FontHelper_InstallZipFont_FontDirectoryDoesNotExist">
            <summary>
              查找类似 字体目录不存在 的本地化字符串。
            </summary>
        </member>
        <member name="P:X.CommLib.Properties.Resources.GetSystemInfo_GetMachineCode_UnableGetMachineCode">
            <summary>
              查找类似 无法获取机器码 的本地化字符串。
            </summary>
        </member>
        <member name="P:X.CommLib.Properties.Resources.GetSystemInfo_GetParentProcessId_ProcessIdCantNull">
            <summary>
              查找类似 当前进程Id号不能为空 的本地化字符串。
            </summary>
        </member>
        <member name="P:X.CommLib.Properties.Resources.JsonDatas_Initialize_InvalidConfigurationFilePath">
            <summary>
              查找类似 无效的配置文件路径 的本地化字符串。
            </summary>
        </member>
        <member name="P:X.CommLib.Properties.Resources.JsonDatas_Save_NoSetSaveFilePath">
            <summary>
              查找类似 没有指定需要保存的文件路径 的本地化字符串。
            </summary>
        </member>
        <member name="P:X.CommLib.Properties.Resources.LoggingEventArgs_ToString_LogDate">
            <summary>
              查找类似 时间：{0} 的本地化字符串。
            </summary>
        </member>
        <member name="P:X.CommLib.Properties.Resources.LoggingEventArgs_ToString_LogDetail">
            <summary>
              查找类似 详细错误信息： 的本地化字符串。
            </summary>
        </member>
        <member name="P:X.CommLib.Properties.Resources.LoggingEventArgs_ToString_LogSender">
            <summary>
              查找类似 发送者：{0} 的本地化字符串。
            </summary>
        </member>
        <member name="P:X.CommLib.Properties.Resources.LoggingEventArgs_ToString_LogType">
            <summary>
              查找类似 类型：{0} 的本地化字符串。
            </summary>
        </member>
        <member name="P:X.CommLib.Properties.Resources.LogHelper_ConfigureLog4Net__NotFoundResourceFile">
            <summary>
              查找类似 {0}附近没有找到资源文件 {1} 的本地化字符串。
            </summary>
        </member>
        <member name="P:X.CommLib.Properties.Resources.LogHelper_ProcessUnknowError_InfoContent">
            <summary>
              查找类似 错误内容：{0}{1} 的本地化字符串。
            </summary>
        </member>
        <member name="P:X.CommLib.Properties.Resources.LogHelper_ProcessUnknowError_InfoSender">
            <summary>
              查找类似 错误发送者：{0} 的本地化字符串。
            </summary>
        </member>
        <member name="P:X.CommLib.Properties.Resources.LogHelper_ProcessUnknowError_InfoSenderType">
            <summary>
              查找类似 错误发送者类型：{0} 的本地化字符串。
            </summary>
        </member>
        <member name="P:X.CommLib.Properties.Resources.LogHelper_ProcessUnknowError_InfoType">
            <summary>
              查找类似 错误类型：{0} 的本地化字符串。
            </summary>
        </member>
        <member name="P:X.CommLib.Properties.Resources.LogHelper_ProcessUnknowError_UnhandledExceptionOccursInAppDomain">
            <summary>
              查找类似 域中发生未处理的异常 的本地化字符串。
            </summary>
        </member>
        <member name="P:X.CommLib.Properties.Resources.LogHelper_ProcessUnknowError_UnhandledExceptionOccursInThread">
            <summary>
              查找类似 线程中发生未处理的异常 的本地化字符串。
            </summary>
        </member>
        <member name="P:X.CommLib.Properties.Resources.LogHelper_RecodeAppInfo_AppTitle">
            <summary>
              查找类似 标题： 的本地化字符串。
            </summary>
        </member>
        <member name="P:X.CommLib.Properties.Resources.LogHelper_RecodeAppInfo_AppVersion">
            <summary>
              查找类似 版本： 的本地化字符串。
            </summary>
        </member>
        <member name="P:X.CommLib.Properties.Resources.LogHelper_RecodeSystemInfo_BaseDirecotry">
            <summary>
              查找类似 程序基路径： 的本地化字符串。
            </summary>
        </member>
        <member name="P:X.CommLib.Properties.Resources.LogHelper_RecodeSystemInfo_CurrentDirectory">
            <summary>
              查找类似 当前路径： 的本地化字符串。
            </summary>
        </member>
        <member name="P:X.CommLib.Properties.Resources.LogHelper_RecodeSystemInfo_DotnetVersion">
            <summary>
              查找类似 平台版本： 的本地化字符串。
            </summary>
        </member>
        <member name="P:X.CommLib.Properties.Resources.LogHelper_RecodeSystemInfo_InternetExplorerVersion">
            <summary>
              查找类似 浏览器版本： 的本地化字符串。
            </summary>
        </member>
        <member name="P:X.CommLib.Properties.Resources.LogHelper_RecodeSystemInfo_IsAdministrator">
            <summary>
              查找类似 管理员身份： 的本地化字符串。
            </summary>
        </member>
        <member name="P:X.CommLib.Properties.Resources.LogHelper_RecodeSystemInfo_OperatingSystemVersion">
            <summary>
              查找类似 操作系统： 的本地化字符串。
            </summary>
        </member>
        <member name="P:X.CommLib.Properties.Resources.LogHelper_RecodeSystemInfo_X64OperatingSystem">
            <summary>
              查找类似 64位操作系统： 的本地化字符串。
            </summary>
        </member>
        <member name="P:X.CommLib.Properties.Resources.LogHelper_TestMultiLanguage_MultiLanguageString">
            <summary>
              查找类似 这是多语言测试字符串 的本地化字符串。
            </summary>
        </member>
        <member name="P:X.CommLib.Properties.Resources.MysqlDbTool_CreateDbFile_DoesNotSupportThisOperation">
            <summary>
              查找类似 不支持该操作 的本地化字符串。
            </summary>
        </member>
        <member name="P:X.CommLib.Properties.Resources.MysqlDbTool_GenerateCreateColumnsSql_SetThePrimaryKey">
            <summary>
              查找类似 请将自增列{0}设置为主键 的本地化字符串。
            </summary>
        </member>
        <member name="P:X.CommLib.Properties.Resources.MysqlDbTool_GetSqlDataTypeString_UnsupportedDataType">
            <summary>
              查找类似 不支持的数据类型：{0} 的本地化字符串。
            </summary>
        </member>
        <member name="P:X.CommLib.Properties.Resources.ObjectDetailOutput_CopyValueTo_ObjectCantBeNull">
            <summary>
              查找类似 不能使用空对象接收属性值 的本地化字符串。
            </summary>
        </member>
        <member name="P:X.CommLib.Properties.Resources.ObjectDetailOutput_CopyValueTo_SourceAndTargetTypeDoesNotMatch">
            <summary>
              查找类似 源对象类型与复制类型不匹配 的本地化字符串。
            </summary>
        </member>
        <member name="P:X.CommLib.Properties.Resources.ObjectDetailOutput_CopyValueTo_TargetAndSourceTypeDoesNotMatch">
            <summary>
              查找类似 目标对象类型与复制类型不匹配 的本地化字符串。
            </summary>
        </member>
        <member name="P:X.CommLib.Properties.Resources.OleDbTool_CreateConnection_DatafileDoesNotExist">
            <summary>
              查找类似 数据文件不存在 的本地化字符串。
            </summary>
        </member>
        <member name="P:X.CommLib.Properties.Resources.OleDbTool_CreateConnection_DoesNotDefineDataFilePath">
            <summary>
              查找类似 没有定义数据文件路径 的本地化字符串。
            </summary>
        </member>
        <member name="P:X.CommLib.Properties.Resources.OleDbTool_CreateDbFile_DatabaseFileAlreadyExists">
            <summary>
              查找类似 数据库文件已经存在 的本地化字符串。
            </summary>
        </member>
        <member name="P:X.CommLib.Properties.Resources.OleDbTool_CreateDbFile_FailedToCreateAccessdatabase">
            <summary>
              查找类似 创建access数据库文件失败 的本地化字符串。
            </summary>
        </member>
        <member name="P:X.CommLib.Properties.Resources.OleDbTool_GetConnectionString_UnableToGetDatabaseEngine">
            <summary>
              查找类似 无法获取当前数据库引擎 的本地化字符串。
            </summary>
        </member>
        <member name="P:X.CommLib.Properties.Resources.OleDbTool_GetSqlDataTypeString_UnsupportedDataType">
            <summary>
              查找类似 不支持的数据类型：{0} 的本地化字符串。
            </summary>
        </member>
        <member name="P:X.CommLib.Properties.Resources.ProcessCtrl_ProcessCtrl_PressEntryKeyStop">
            <summary>
              查找类似 {0}，按回车键中止： 的本地化字符串。
            </summary>
        </member>
        <member name="P:X.CommLib.Properties.Resources.ProcessCtrl_SetStep_ProgressValueCannotBeMegative">
            <summary>
              查找类似 进度值不能设置为负数({0})。 的本地化字符串。
            </summary>
        </member>
        <member name="P:X.CommLib.Properties.Resources.ProcessCtrl_SetStep_ProgressValuesIsNotGreaterThan">
            <summary>
              查找类似 进度值不能大于 {0} 的本地化字符串。
            </summary>
        </member>
        <member name="P:X.CommLib.Properties.Resources.ProcessCtrl_SetStep_UsersToSuspend">
            <summary>
              查找类似 用户中止 的本地化字符串。
            </summary>
        </member>
        <member name="P:X.CommLib.Properties.Resources.SqliteDbTool_CreateDbFile_DatabaseAlreadyExists">
            <summary>
              查找类似 数据库文件已经存在 的本地化字符串。
            </summary>
        </member>
        <member name="P:X.CommLib.Properties.Resources.TaskWorkHelper_RunTaskWorks_NoSpecifiedWorkFunction">
            <summary>
              查找类似 没有指定需要工作的函数 的本地化字符串。
            </summary>
        </member>
        <member name="P:X.CommLib.Properties.Resources.TaskWorkHelper_RunTaskWorks_WrongTaskNumber">
            <summary>
              查找类似 指定了错误的工作线程数：{0} 的本地化字符串。
            </summary>
        </member>
        <member name="P:X.CommLib.Properties.Resources.ValuesCore_SetProperty_PropertyNotExist">
            <summary>
              查找类似 属性{0}不存在 的本地化字符串。
            </summary>
        </member>
        <member name="P:X.CommLib.Properties.Resources.XMLValuesCore_Save_ProfilePathNotDefined">
            <summary>
              查找类似 配置文件路径没有定义 的本地化字符串。
            </summary>
        </member>
        <member name="T:X.CommLib.ExtensionHelper">
            <summary>
                Class ExtensionHelper.
            </summary>
        </member>
        <member name="M:X.CommLib.ExtensionHelper.TypeOf``1(System.Collections.IEnumerable)">
            <summary>
                返回指定类型的元素
            </summary>
            <typeparam name="T">type</typeparam>
            <param name="enumerable">The enumerable.</param>
            <returns>IEnumerable&lt;T&gt;.</returns>
        </member>
        <member name="T:X.CommLib.Threader.LoggingEventHandler">
            <summary>
                日志事件
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:X.CommLib.Threader.LoggingEventArgs" /> instance containing the event data.</param>
        </member>
        <member name="T:X.CommLib.Threader.LoggingEventArgs">
            <summary>
                任务日志事件
            </summary>
        </member>
        <member name="M:X.CommLib.Threader.LoggingEventArgs.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:X.CommLib.Threader.LoggingEventArgs" /> class.
            </summary>
        </member>
        <member name="M:X.CommLib.Threader.LoggingEventArgs.#ctor(System.String,System.Exception)">
            <summary>Initializes a new instance of the <see cref="T:X.CommLib.Threader.LoggingEventArgs"/> class.</summary>
            <param name="message">对事件的描述</param>
            <param name="error">可能附带的错误信息</param>
        </member>
        <member name="M:X.CommLib.Threader.LoggingEventArgs.#ctor(X.CommLib.Threader.LoggingType,System.String,System.Exception)">
            <summary>Initializes a new instance of the <see cref="T:X.CommLib.Threader.LoggingEventArgs"/> class. </summary>
            <param name="loggingType">日志的类型</param>
            <param name="message">对事件的描述</param>
            <param name="error">可能附带的错误信息</param>
        </member>
        <member name="P:X.CommLib.Threader.LoggingEventArgs.DateTime">
            <summary>
                日志发生时的时间
            </summary>
            <value>
                The datet time.
            </value>
        </member>
        <member name="P:X.CommLib.Threader.LoggingEventArgs.Error">
            <summary>
                可能附带的错误信息
            </summary>
        </member>
        <member name="P:X.CommLib.Threader.LoggingEventArgs.Message">
            <summary>
                对事件的描述
            </summary>
        </member>
        <member name="P:X.CommLib.Threader.LoggingEventArgs.Sender">
            <summary>
                日志的发送者
            </summary>
            <value>
                The sender.
            </value>
        </member>
        <member name="P:X.CommLib.Threader.LoggingEventArgs.Type">
            <summary>
                日志的类型
            </summary>
        </member>
        <member name="M:X.CommLib.Threader.LoggingEventArgs.ToString">
            <summary>
                返回日志字符表示
            </summary>
            <returns></returns>
        </member>
        <member name="T:X.CommLib.Threader.LoggingType">
            <summary>
                日志类型
            </summary>
        </member>
        <member name="F:X.CommLib.Threader.LoggingType.Log">
            <summary>
                普通日志
            </summary>
        </member>
        <member name="F:X.CommLib.Threader.LoggingType.Debug">
            <summary>
                调试日志
            </summary>
        </member>
        <member name="F:X.CommLib.Threader.LoggingType.Error">
            <summary>
                错误日志
            </summary>
        </member>
        <member name="F:X.CommLib.Threader.LoggingType.Warn">
            <summary>
                警告日志
            </summary>
        </member>
        <member name="F:X.CommLib.Threader.LoggingType.Fatal">
            <summary>
                致命错误
            </summary>
        </member>
        <member name="F:X.CommLib.Threader.LoggingType.Display">
            <summary>
                仅仅为了展示使用，使用内容的写函数时不会将该内容写入日志文件
            </summary>
        </member>
        <member name="T:X.CommLib.Threader.SimpleThread">
            <summary>
                简单线程运行器
            </summary>
        </member>
        <member name="T:X.CommLib.Threader.SimpleThread.Function`2">
            <summary>回调函数定义，一个传入参数，一个返回值</summary>
            <typeparam name="T"></typeparam>
            <typeparam name="TParam">The type of the param.</typeparam>
            <param name="param">The param.</param>
            <returns></returns>
        </member>
        <member name="T:X.CommLib.Threader.SimpleThread.Function`1">
            <summary>回调函数定义,一个返回值，没有传入参数</summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="T:X.CommLib.Threader.SimpleThread.RunFunctionHandle`1">
            <summary>指定时间运行指定的函数，如果运行结束返回 true,</summary>
            <typeparam name="TResult">The type of the result.</typeparam>
            <param name="result">The result.</param>
            <returns></returns>
        </member>
        <member name="T:X.CommLib.Threader.SimpleThread.RunSimpleThreadFunc">
            <summary>
                线程运行回调函数，不带参数，不带返回值
            </summary>
        </member>
        <member name="T:X.CommLib.Threader.SimpleThread.RunSimpleThreadFunc`1">
            <summary>线程运行回调函数，不带参数</summary>
            <typeparam name="TOut"></typeparam>
            <returns></returns>
        </member>
        <member name="T:X.CommLib.Threader.SimpleThread.RunSimpleThreadFunc`2">
            <summary>线程运行回调函数，带参数</summary>
            <typeparam name="TOut"></typeparam>
            <typeparam name="TParam"></typeparam>
            <returns></returns>
        </member>
        <member name="M:X.CommLib.Threader.SimpleThread.RunFunction(X.CommLib.Threader.SimpleThread.Function{System.Boolean},System.TimeSpan,System.Nullable{System.TimeSpan})">
            <summary>在指定的时间内，  以指定的时间间隔运行回调函数</summary>
            <param name="function">The function.</param>
            <param name="timeOut">The time out.</param>
            <param name="span">The span.</param>
        </member>
        <member name="M:X.CommLib.Threader.SimpleThread.RunFunctionWithReturn``1(X.CommLib.Threader.SimpleThread.RunFunctionHandle{``0},``0@,System.TimeSpan,System.Nullable{System.TimeSpan})">
            <summary>在指定的时间内，  以指定的时间间隔运行回调函数
                如果正常结束返回 true
                如果超时返回 false</summary>
            <typeparam name="TResult">The type of the result.</typeparam>
            <param name="func">回调函数，返回 true， 结束回调，返回 false 继续回调， 直到超时.</param>
            <param name="result">The result.</param>
            <param name="timeOut">The time out.</param>
            <param name="span">The span.</param>
            <returns></returns>
        </member>
        <member name="M:X.CommLib.Threader.SimpleThread.RunFunctionWithReturn(System.Func{System.Boolean},System.TimeSpan,System.Nullable{System.TimeSpan})">
            <summary>在指定的时间内，  以指定的时间间隔运行回调函数</summary>
            <param name="func">回调函数，返回 true， 结束回调，返回 false 继续回调， 直到超时.</param>
            <param name="timeOut">The time out.</param>
            <param name="span">The span.</param>
            <returns></returns>
        </member>
        <member name="M:X.CommLib.Threader.SimpleThread.RunFunction``1(X.CommLib.Threader.SimpleThread.Function{System.Boolean,``0},``0,System.TimeSpan,System.Nullable{System.TimeSpan})">
            <summary>在指定的时间内，  以指定的时间间隔运行回调函数</summary>
            <typeparam name="T"></typeparam>
            <param name="function">回调函数</param>
            <param name="param">回调函数参数</param>
            <param name="timeOut">The time out.</param>
            <param name="span">The span.</param>
        </member>
        <member name="M:X.CommLib.Threader.SimpleThread.RunThread``1(X.CommLib.Threader.SimpleThread.RunSimpleThreadFunc{``0})">
            <summary>在线程中运行一段代码，并等待线程结束后返回，如果线程中抛出异常，则在线程结束后抛出异常
                c</summary>
            <typeparam name="TOut"></typeparam>
            <param name="func"></param>
            <returns></returns>
        </member>
        <member name="M:X.CommLib.Threader.SimpleThread.RunThread(X.CommLib.Threader.SimpleThread.RunSimpleThreadFunc)">
            <summary>在线程中运行一段代码，并等待线程结束后返回，如果线程中抛出异常，则在线程结束后抛出异常
                不带输入参数，不带返回值</summary>
            <param name="func"></param>
        </member>
        <member name="M:X.CommLib.Threader.SimpleThread.RunThread``2(X.CommLib.Threader.SimpleThread.RunSimpleThreadFunc{``0,``1},``1)">
            <summary>在线程中运行一段代码，并等待线程结束后返回，如果线程中抛出异常，则在线程结束后抛出异常
                带输入参数，带返回值</summary>
            <param name="func">The func.</param>
            <param name="param">The param.</param>
            <typeparam name="TOut"></typeparam>
            <typeparam name="TParam"></typeparam>
            <returns></returns>
        </member>
        <member name="T:ListViewExtensions">
            <summary>
                列表扩展类
            </summary>
        </member>
        <member name="F:ListViewExtensions.LVM_FIRST">
            <summary>
                The lv m_ first
            </summary>
        </member>
        <member name="F:ListViewExtensions.LVM_GETHEADER">
            <summary>
                The lv m_ getheader
            </summary>
        </member>
        <member name="F:ListViewExtensions.HDM_FIRST">
            <summary>
                The hd m_ first
            </summary>
        </member>
        <member name="F:ListViewExtensions.HDM_GETITEM">
            <summary>
                The hd m_ getitem
            </summary>
        </member>
        <member name="F:ListViewExtensions.HDM_SETITEM">
            <summary>
                The hd m_ setitem
            </summary>
        </member>
        <member name="M:ListViewExtensions.SendMessage(System.IntPtr,System.UInt32,System.IntPtr,System.IntPtr)">
            <summary>
                Sends the message.
            </summary>
            <param name="hWnd">The h WND.</param>
            <param name="msg">The MSG.</param>
            <param name="wParam">The w parameter.</param>
            <param name="lParam">The l parameter.</param>
            <returns></returns>
        </member>
        <member name="M:ListViewExtensions.SendMessage(System.IntPtr,System.UInt32,System.IntPtr,ListViewExtensions.HDITEM@)">
            <summary>
                Sends the message.
            </summary>
            <param name="hWnd">The h WND.</param>
            <param name="msg">The MSG.</param>
            <param name="wParam">The w parameter.</param>
            <param name="lParam">The l parameter.</param>
            <returns></returns>
        </member>
        <member name="M:ListViewExtensions.SetSortIcon(System.Windows.Forms.ListView,System.Int32,System.Windows.Forms.SortOrder)">
            <summary>
                改变列表的排序图标
            </summary>
            <param name="listViewControl">The list view control.</param>
            <param name="columnIndex">Index of the column.</param>
            <param name="order">The order.</param>
            <exception cref="T:System.ComponentModel.Win32Exception">
            </exception>
        </member>
        <member name="M:ListViewExtensions.SetListViewColumnAutoWidth(System.Windows.Forms.ListView,System.Windows.Forms.ColumnHeader,System.Nullable{System.Int32})">
            <summary>
                设置当列表的大小改变时，某一个列自动调整宽度
                使总的宽度刚好填充整个listView
            </summary>
            <param name="listView">The list view.</param>
            <param name="column">The column.</param>
            <param name="minWidth">The minimum width.</param>
        </member>
        <member name="M:ListViewExtensions.SetListViewColumnWidth(System.Windows.Forms.ListView,System.Windows.Forms.ColumnHeader,System.Nullable{System.Int32})">
            <summary>
                计算并设置列表中某一个列的宽度
                使总的宽度刚好填充整个listView
            </summary>
            <param name="listView">The list view.</param>
            <param name="column">The column.</param>
            <param name="minWidth">The minimum width.</param>
        </member>
        <member name="T:ListViewExtensions.HDITEM">
            <summary>
                修改用的结构
            </summary>
        </member>
        <member name="T:ListViewExtensions.HDITEM.Mask">
            <summary>
                改变类型的 mask
            </summary>
        </member>
        <member name="T:ListViewExtensions.HDITEM.Format">
            <summary>
                排序类型
            </summary>
        </member>
        <member name="T:System.Runtime.CompilerServices.CallerMemberNameAttribute">
            <summary>
                有参数中表示调用者
            </summary>
        </member>
        <member name="T:System.Runtime.CompilerServices.CallerFilePathAttribute">
            <summary>
                在参数中表示调用文件
            </summary>
        </member>
        <member name="T:System.Runtime.CompilerServices.CallerLineNumberAttribute">
            <summary>
                在参数中表示调用行
            </summary>
        </member>
        <member name="T:System.Runtime.CompilerServices.ExtensionAttribute">
            <summary>
                扩展属性
            </summary>
        </member>
    </members>
</doc>
